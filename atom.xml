<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Chaos</title>
  
  
  <link href="https://blog.lqs1848.top/atom.xml" rel="self"/>
  
  <link href="https://blog.lqs1848.top/"/>
  <updated>2022-01-27T08:38:46.581Z</updated>
  <id>https://blog.lqs1848.top/</id>
  
  <author>
    <name>lqs1848</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>自定义排序</title>
    <link href="https://blog.lqs1848.top/2022/01/27/2022-01-27%20%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%92%E5%BA%8F/"/>
    <id>https://blog.lqs1848.top/2022/01/27/2022-01-27%20%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%92%E5%BA%8F/</id>
    <published>2022-01-26T16:00:00.000Z</published>
    <updated>2022-01-27T08:38:46.581Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>新增功能时发现 修改个 栏目 修改了2秒多 速度很慢</p><p>查找了下代码 原来是 自定义 栏目排序的 order</p><p>同事写的逻辑 </p><p>查出所有的 栏目 再一个个 Update 数量一多就会慢的要死</p><p>借鉴下网上其他人的思路</p><h1 id="偏代码角度描述方案-link"><a href="#偏代码角度描述方案-link" class="headerlink" title="偏代码角度描述方案(link)"></a>偏代码角度描述方案(<a href="https://www.jianshu.com/p/9ee708e43ebf">link</a>)</h1><h2 id="方法一-全量更新元素位置法"><a href="#方法一-全量更新元素位置法" class="headerlink" title="方法一 全量更新元素位置法"></a>方法一 全量更新元素位置法</h2><p>适用场景：排序元素数量较少</p><p>原理：每个元素拥有一个字段，表示元素当前排序的位置。通过前端排序，将排好的元素位置，一次性发送到后端。然后，后端统一更新所有元素的位置。</p><h3 id="具体实现"><a href="#具体实现" class="headerlink" title="具体实现"></a>具体实现</h3><p>实体设计：增加排序字段 <code>sort</code>，表示元素当前的位置。例如，<code>sort = 1</code>，则表示元素处于第一位。</p><p>接口设计：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 排序接口</span></span><br><span class="line">POST /courses/sorting</span><br><span class="line"></span><br><span class="line"><span class="comment">// 格式：JSON</span></span><br><span class="line"><span class="comment">// 数组中为元素的ID</span></span><br><span class="line"><span class="comment">// 元素在数组中的序号，表示了元素的位置</span></span><br><span class="line"><span class="comment">// 例如，ID为3的元素，排序为 1，ID为2的元素，排序为2</span></span><br><span class="line">[<span class="meta">3, 2, 4, 1</span>]</span><br></pre></td></tr></table></figure><p>前端逻辑：当前端排序后，或删除元素后，将剩余元素ID，以数组的形式发送给后端。数组的索引序号，则表示元素当前的排序。</p><p>后端实现逻辑：</p><ul><li>删除不存在前端数组中的ID。将前端 <code>ids</code>，与服务器端的 <code>ids</code> 进行对比。删除服务器端存在但前端不存在的 <code>ids</code>。</li><li>按照数组的排序，更新所有元素排序。</li></ul><p>总结，此方法仅适用于排序元素较少（例如，总元素为5~15个）的场景。对于大量数据排序并不适用，适合首页轮播图管理、任务卡片管理。<a href="https://links.jianshu.com/go?to=https://www.leangoo.com/">leangoo 的看板卡片管理就是采用这种方式。</a></p><h2 id="方法二-取中值法（推荐）"><a href="#方法二-取中值法（推荐）" class="headerlink" title="方法二 取中值法（推荐）"></a>方法二 取中值法（推荐）</h2><p>原理与实现步骤：</p><ol><li>创建元素时给元素赋默认位置（<code>pos</code>字段记录该值）。赋值规则为，当创建第一个元素时，默认位置赋值为65536，第二个元素为 <code>2 * 65536 = 13172</code>，增加第N个元素时，位置赋值为N*65536。</li><li>当拖拽改变元素位置时，更新 <code>pos</code>。更新规则如下：</li></ol><ul><li>调整一个元素到两个元素中间时，<code>(pre_item.pos + after_item.pos）/ 2 = pos</code></li><li>调整一个元素到第一个元素时， <code>old_first_item.pos / 2 = pos</code></li><li>调整一个元素到最后一个元素时， <code>old_last_item.post + 65536 = pos</code></li></ul><ol><li>当前后两个元素的数值，不满足整数时，更新所有元素的排序。依次给每个元素的 <code>pos</code>赋新值。例如，第一位赋值65536，第二位为<code>2 * 65536</code>，第N位赋值N*65536。</li></ol><p>通过取中值的方法，改变元素的位置。当需要按序获取时，只需要对 <code>pos</code>进行排序，就可以获取元素的位置。</p><p>关于中值重排的问题，解决方法有多种。例如，我们可以使用浮点数储存 <code>pos</code>，但是需要考虑数据库存储的精度问题。而且，数值过小，会在前端丢失精度，元素排序会出现问题。当然，如果在接口层，当检测到中值过小，则对所有元素进行重排，接口相应速度会存在问题（如果是后端管理系统就不用考虑性能问题了）。</p><p>有人提出，利用定时任务每天对所有元素定时重排，来解决单次接口的性能问题。个人觉得这个方法，还是存在问题。若定时任务不及时，那么排序由于精度问题，发生了排序错乱的问题。那么，定时重排已经无意义。</p><h2 id="方法三-单表单列"><a href="#方法三-单表单列" class="headerlink" title="方法三 单表单列"></a>方法三 单表单列</h2><p>每个元素，都有一个字段<code>index</code>，表示元素的排序信息。<br>规定元素从0开始递增。<br>基本操作如下：</p><ul><li>增加数据。 新增元素时，序号为当前元素数据总量值。</li><li>删除元素。删除元素时，将大于该元素的序号，都减1。</li><li>修改元素排序。当元素从 x 移动到 y 时，<ul><li>若 x &lt; y 时，则将(x, y)范围内的元素都减1</li><li>若 x &gt; y 时，则将(y, x)范围内的元素都加1</li></ul></li><li>查询元素。展示列表时，按照 <code>index</code> 字段进行排序即可。若需要查第n位元素时，元素位置为 <code>index = n - 1</code>。</li></ul><p>这种方式优点是，查询快，修改慢。而且，修改接口的逻辑较重，处理起来比较麻烦。我们很多项目都是采用这种模式。在接口设计方面，我们让前端传给后端是一个偏移值（<code>offset</code>），<code>offset = y - x。当元素向排序大的方向移动时，</code>offset<code>的为正值；若往排序小的方向移动时，</code>offset`为负值。</p><h1 id="偏数据库角度描述方案-link"><a href="#偏数据库角度描述方案-link" class="headerlink" title="偏数据库角度描述方案(link)"></a>偏数据库角度描述方案(<a href="https://www.cnblogs.com/kesimin/p/9441448.html">link</a>)</h1><h4 id="1-单表单列结构（数组结构）"><a href="#1-单表单列结构（数组结构）" class="headerlink" title="1. 单表单列结构（数组结构）"></a>1. 单表单列结构（数组结构）</h4><p>此设计是使用一个表中的一列来表示数据的序号，通常我们使用的方法就是这种。</p><p>数据表tb_data(n)：</p><table><thead><tr><th>data</th><th>index</th></tr></thead><tbody><tr><td>···</td><td>0</td></tr><tr><td>···</td><td>1</td></tr><tr><td>···</td><td>2</td></tr></tbody></table><p>这里规定序号从0开始递增。</p><p>其基本数据操作如下：</p><ul><li>增 → 当增加一个数据时，定义data的序号为数据总数量值。</li><li>删 → 当删除一个数据时，将大于该序号的数据的序号都减1。</li><li>改 → 当修改位置将数据a从x移动到y时，若x小于y，则将(x,y]范围内的数据序号都减1；若x大于y，则将[y,x)范围内的数据序号都加1（注：修改数据库时，要先将a的序号x修改为未被使用的序号z，然后再修改范围内的数据，最后再将z修改为y，顺序不能乱）。</li><li>查 → 当查找数据时添加 order by index 即可得到自定义排列的数据，查找第n个数据时查找条件为 index=n-1 即可。</li></ul><p>总结：此方法查找速度最快，修改速度最慢。</p><h4 id="2-单表双列结构（链表结构）"><a href="#2-单表双列结构（链表结构）" class="headerlink" title="2.单表双列结构（链表结构）"></a>2.单表双列结构（链表结构）</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">此设计是使用一个表中的两列来表示数据的序号，一列表示该数据的前置id，一列表示该数据的后置序id（id为数据表本身的自增序号），即相当于我们经常使用的双向链表。</span><br></pre></td></tr></table></figure><p>数据表tb_data(n)：</p><table><thead><tr><th>id</th><th>data</th><th>pre_no</th><th>next_no</th></tr></thead><tbody><tr><td>0</td><td>···</td><td>-1</td><td>1</td></tr><tr><td>1</td><td>···</td><td>0</td><td>2</td></tr><tr><td>2</td><td>···</td><td>1</td><td>3</td></tr><tr><td>3</td><td>···</td><td>2</td><td>-1</td></tr></tbody></table><p>这里规定第一个数据的pre_no为-1，最后一个数据的next_no为-1。</p><p>其基本数据操作如下：</p><ul><li>增 → 当增加一个数据a时，先查找出最后一个数据b的id号，a的pre_no定义为b的id号（若此数据为第一个则定义为-1），next_no定义为-1，再将b的next_no定义为a的id号。</li><li>删 → 当删除一个数据a时，取出a的pre_no和next_no，将pre_no对应的id的数据的next_no修改为a的next_no，将next_no对应的id的数据的pre_no修改为a的pre_no。</li><li>改 → 令位置x-1、x+1数据分别为b、c，位置y-1、y、y+1的数据分别为d、e、f，现修改位置将数据a从x移动到y时，<br>当x小于y时，修改b的next_no为c的id，修改c的pre_no为b的id，修改e的next_no为a的id，修改f的pre_no为a的id，最后修改a的pre_no为e的id，next_no为f的id；<br>当x大于y时，修改b的next_no为c的id，修改c的pre_no为b的id，修改d的next_no为a的id，修改e的pre_no为a的id，最后修改a的pre_no为d的id，next_no为e的id。</li><li>查 → 当查找第n个数据时，需要先查找出第一个数据，在根据第一个数据逐个往后查找数据的next_no，查找n次后得到第n个数据。</li></ul><p>总结：此方法查找速度最慢，修改速度最快。</p><h4 id="3-双表双列结构（分页结构）"><a href="#3-双表双列结构（分页结构）" class="headerlink" title="3.双表双列结构（分页结构）"></a>3.双表双列结构（分页结构）</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">此设计是使用一个页码表记录全部页码和页码的序号范围，另一个数据表来记录基本数据、自身序号和页码，通过在一个表中给数据设置不同的序号和页码来达到分页排序的效果。</span><br></pre></td></tr></table></figure><p>页码表tb_page：</p><table><thead><tr><th>tb_name</th><th>page</th><th>start_index</th><th>end_index</th></tr></thead><tbody><tr><td>tb_data0</td><td>0</td><td>1</td><td>1000</td></tr><tr><td>tb_data0</td><td>1</td><td>1</td><td>1000</td></tr><tr><td>tb_data0</td><td>2</td><td>1</td><td>120</td></tr><tr><td>tb_data1</td><td>0</td><td>1</td><td>1000</td></tr><tr><td>tb_data1</td><td>1</td><td>1</td><td>130</td></tr></tbody></table><p>table_name为一个基本数据表的表名，对于每一个table_name，其对应的page都从0开始递增且不能重复，每个page有一定的数据范围（这里设定为一页有1000条数据），则每个数据表对应的数据总量即可计算出来。</p><p>基本数据表tb_data(n)：</p><table><thead><tr><th>data</th><th>page</th><th>index</th></tr></thead><tbody><tr><td>···</td><td>0</td><td>1</td></tr><tr><td>···</td><td>0</td><td>···</td></tr><tr><td>···</td><td>0</td><td>1000</td></tr><tr><td>···</td><td>1</td><td>1</td></tr><tr><td>···</td><td>1</td><td>···</td></tr><tr><td>···</td><td>1</td><td>1000</td></tr><tr><td>···</td><td>2</td><td>1</td></tr><tr><td>···</td><td>2</td><td>···</td></tr><tr><td>···</td><td>2</td><td>120</td></tr></tbody></table><p>data为数据域，记录基本数据，对于每一个不相同的data都有对应的page和index，通过page、index和每一页的数据范围即可计算出对应的全局序号。</p><p>其基本数据操作如下：</p><ul><li>增 → 当增加一个数据时，先从页码表中查找出最后的page及其对应的start_index和end_index，若end_index-start_index+1没有数据超出范围，则插入数据的page不变，index为end_index+1，若超出范围，则需在页码表中新建一页，插入数据的page自加一，index赋值初始值。</li><li>删 → 当删除一个数据时，因为需要保证除末页以外的页码的数据范围都为规定值，所以需要对删除数据对应的页码及以上页码的数据进行调整，对于删除数据的页码，可以通过对比该数据在页码中的相对位置来调整较小数据量的一方数据执行加减1，对于大于其的页码，可以将每一页的首数据调整为上一页的末数据（末页数量为0即可将末页删除）。</li><li>改 → 当修改位置将数据a从x移动到y，计算x、y对应的页码，当x、y的页码相同时，只需调整该页数据，可通过对比x到y的数量和页码数量来决定调整x、y范围内还是范围外的数据信息；当x、y页码不同时，可通过对x、y在页码中的相对位置来调整较小数据量的一方数据执行加减1，若x小于y，(x,y]范围内的页的首数据调整为上一页的末数据，若x大于y，[y,x)范围内的页的末数据调整为下一页的首数据。</li><li>查 → 当查找数据总量时，可以通过查找页码表计算得出；当查找序号为n的数据时，可以通过页码表计算得到对应的page和index，然后再通过查找数据表取得数据（由于页码表的数据会经常使用，所以最好从数据库取出一次后保存在内存中再进行使用即可提高速度）。</li></ul><p>总结：此方法查找速度和修改速度比较均衡，适合大多数情况使用。</p><h1 id="其他方案"><a href="#其他方案" class="headerlink" title="其他方案"></a>其他方案</h1><p>手动控制加数值or减数值 +1/-1   +10/-10</p><p>按照数值大小排序</p><p>和指定 数值 差不多的逻辑</p>]]></content>
    
    
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;</summary>
    
    
    
    <category term="编程" scheme="https://blog.lqs1848.top/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="排序" scheme="https://blog.lqs1848.top/tags/%E6%8E%92%E5%BA%8F/"/>
    
    <category term="转载" scheme="https://blog.lqs1848.top/tags/%E8%BD%AC%E8%BD%BD/"/>
    
  </entry>
  
  <entry>
    <title>Dubbo ExceedPayloadLimitException</title>
    <link href="https://blog.lqs1848.top/2022/01/27/2022-03-08%20Dubbo%20Data%20length%20too%20large/"/>
    <id>https://blog.lqs1848.top/2022/01/27/2022-03-08%20Dubbo%20Data%20length%20too%20large/</id>
    <published>2022-01-26T16:00:00.000Z</published>
    <updated>2022-03-08T08:23:31.115Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h1 id="Data-length-too-large"><a href="#Data-length-too-large" class="headerlink" title="Data length too large"></a>Data length too large</h1><p>这个异常的详细堆栈信息如下所示：</p><blockquote><p>Caused by: org.apache.dubbo.remoting.transport.ExceedPayloadLimitException: Data length too large: 11557979, max payload: 11557050, channel: NettyChannel [channel=[id: 0x59059885, L:/172.30.0.3:50822 - R:/172.30.0.3:20880]]</p></blockquote><p>已经从8388608 改到 11557979 依旧报错</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ProviderConfig <span class="title">providerConfig</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ProviderConfig config = <span class="keyword">new</span> ProviderConfig();</span><br><span class="line">    config.setRetries(<span class="number">0</span>);</span><br><span class="line">    config.setTimeout(<span class="number">60000</span>);</span><br><span class="line">    config.setPayload(<span class="number">11557979</span>);</span><br><span class="line">    <span class="keyword">return</span> config;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>本来想从 11557979  直接改到 104857600 100兆</p><p>仔细想想不对</p><p>这里是 请求或者响应的报文体长度超过了8k </p><p>我请求的内容应该没有这么长</p><p>检查了下</p><p>原来是之前写的 SpringCloud 整合 Dubbo (<a href="/2021/04/23/2021-04-23%20%20SpringCloud%20%E6%95%B4%E5%90%88%20Dubbo/">Link</a>) <strong>#### 封装 dubbo 隐式传递</strong></p><p>中写了一个 日志收集</p><p>这个调用时 同步数据 同步了一个多小时 产生了超过8兆的日志</p><p>而我为了日志追踪 把日志放在 dubbo 的请求参数中 导致了长度超过dubbo的限制</p><p>还有个类似 <a href="https://github.com/apache/dubbo/issues/111">dubbo 抛不出自定义的异常</a> 的问题</p><p>这个我已经自己写了一个异常过滤器(SpringCloud 整合 Dubbo <strong># 异常传递</strong>) 但是偶尔还是有自定义异常 被认定为 Rpc 异常的问题</p><p>大概是我封装的依赖包 有时 几个微服务依赖的依赖包版本不相同 加密出来的jar包逻辑不同导致</p><p>有空再研究下</p>]]></content>
    
    
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;</summary>
    
    
    
    <category term="Java" scheme="https://blog.lqs1848.top/categories/Java/"/>
    
    <category term="Dubbo" scheme="https://blog.lqs1848.top/categories/Java/Dubbo/"/>
    
    
    <category term="SpringCloud" scheme="https://blog.lqs1848.top/tags/SpringCloud/"/>
    
    <category term="Dubbo" scheme="https://blog.lqs1848.top/tags/Dubbo/"/>
    
  </entry>
  
  <entry>
    <title>Spring参数绑定 适应多种提交方式(二)</title>
    <link href="https://blog.lqs1848.top/2022/01/24/2022-01-24%20Spring%E5%8F%82%E6%95%B0%E7%BB%91%E5%AE%9A(%E4%BA%8C)/"/>
    <id>https://blog.lqs1848.top/2022/01/24/2022-01-24%20Spring%E5%8F%82%E6%95%B0%E7%BB%91%E5%AE%9A(%E4%BA%8C)/</id>
    <published>2022-01-23T16:00:00.000Z</published>
    <updated>2022-01-24T10:43:45.721Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>一点点补充之前没有考虑到的细节</p><h1 id="Validation"><a href="#Validation" class="headerlink" title="Validation"></a>Validation</h1><p>自定义参数注入 会导致 Validation 失效</p><p>获得到对象后 手动调用 validate(obj);</p><p>如下 validate方法</p><h1 id="List"><a href="#List" class="headerlink" title="List"></a>List</h1><p>上次写的逻辑 对简单参数做了处理</p><p>但是 如果前端传递的是List就无法处理了</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">请求参数 JSON</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">    &quot;resultCode&quot;:&quot;b&quot;,</span></span><br><span class="line"><span class="comment">    &quot;orders&quot;: [</span></span><br><span class="line"><span class="comment">        &#123;</span></span><br><span class="line"><span class="comment">            &quot;sequence&quot;: &quot;4&quot;,</span></span><br><span class="line"><span class="comment">            &quot;superviseBankXh&quot;: &quot;10000222&quot;</span></span><br><span class="line"><span class="comment">        &#125;,</span></span><br><span class="line"><span class="comment">        &#123;</span></span><br><span class="line"><span class="comment">            &quot;sequence&quot;: &quot;3&quot;,</span></span><br><span class="line"><span class="comment">            &quot;superviseBankXh&quot;: &quot;10000223&quot;</span></span><br><span class="line"><span class="comment">        &#125;,</span></span><br><span class="line"><span class="comment">        &#123;</span></span><br><span class="line"><span class="comment">            &quot;sequence&quot;: &quot;2&quot;,</span></span><br><span class="line"><span class="comment">            &quot;superviseBankXh&quot;: &quot;10000224&quot;</span></span><br><span class="line"><span class="comment">        &#125;,</span></span><br><span class="line"><span class="comment">        &#123;</span></span><br><span class="line"><span class="comment">            &quot;sequence&quot;: &quot;1&quot;,</span></span><br><span class="line"><span class="comment">            &quot;superviseBankXh&quot;: &quot;10000225&quot;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">    ]</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"> <span class="meta">@PostMapping(&quot;/jgzhyxjsz&quot;)</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> R <span class="title">jgzhyxjsz</span><span class="params">(List&lt;JgzhyxjszDTO&gt; orders)</span></span>&#123;</span><br><span class="line"> <span class="keyword">return</span> R.data(merchantMngmtService.jgzhyxjsz(orders));</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>后台如果不想用 @RequestBody 并且封装一个对象去接收的话</p><p>而是这样直接就能获取到 那就必须实现一个 List 的自定义参数转换器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HandlerArrayResolver</span> <span class="keyword">implements</span> <span class="title">HandlerMethodArgumentResolver</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"> <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> Validator validator;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">supportsParameter</span><span class="params">(MethodParameter parameter)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> Collection.class.isAssignableFrom(parameter.getParameterType());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">resolveArgument</span><span class="params">(MethodParameter parameter, ModelAndViewContainer container,</span></span></span><br><span class="line"><span class="function"><span class="params">NativeWebRequest nativeWebRequest, WebDataBinderFactory factory)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">ContentCachingRequestWrapper request = nativeWebRequest.getNativeRequest(ContentCachingRequestWrapper.class);</span><br><span class="line">Object result = <span class="keyword">null</span>;</span><br><span class="line">        <span class="comment">//获取 List&lt;?&gt; 的泛型信息</span></span><br><span class="line">ParameterizedType genericSuperclass = (ParameterizedType) parameter.getMethod().getGenericParameterTypes()[parameter.getParameterIndex()];</span><br><span class="line">Type type = genericSuperclass.getActualTypeArguments()[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">String contentType = request.getHeader(HttpHeaders.CONTENT_TYPE);</span><br><span class="line"><span class="keyword">if</span>(request.getBodySize() &gt; <span class="number">0</span> &amp;&amp; (request.isRewiteBody() || contentType == <span class="keyword">null</span> || contentType.startsWith(MediaType.APPLICATION_JSON_VALUE))) &#123;</span><br><span class="line">String queryBody = request.getQueryBody();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(queryBody.strip().startsWith(<span class="string">&quot;[&quot;</span>)) &#123;</span><br><span class="line">result = JSONObject.parseArray(queryBody,Class.forName(type.getTypeName()));</span><br><span class="line">&#125;<span class="comment">//支持多个对象嵌套</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(queryBody.indexOf(<span class="string">&quot;\&quot;&quot;</span> + parameter.getParameterName() + <span class="string">&quot;\&quot;&quot;</span>) != -<span class="number">1</span>) &#123;</span><br><span class="line">String tempStr = JSONObject.parseObject(queryBody).getString(parameter.getParameterName());</span><br><span class="line">result = JSONObject.parseArray(tempStr,Class.forName(type.getTypeName()));</span><br><span class="line">&#125; </span><br><span class="line">&#125;<span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">log.error(<span class="string">&quot;参数注入增强-JSON转换失败&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="comment">//if</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> validate(parameter,result);</span><br><span class="line">&#125;<span class="comment">//method</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> Object <span class="title">validate</span><span class="params">(MethodParameter parameter,Object obj)</span> </span>&#123;</span><br><span class="line"><span class="comment">//无需校验</span></span><br><span class="line"><span class="keyword">if</span>(parameter.getParameterAnnotation(Validated.class) == <span class="keyword">null</span> &amp;&amp; parameter.getParameterAnnotation(Valid.class) == <span class="keyword">null</span>) <span class="keyword">return</span> obj;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(obj == <span class="keyword">null</span>) <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">&quot;参数不能为null&quot;</span>, <span class="number">500</span>);</span><br><span class="line"></span><br><span class="line">Set&lt;ConstraintViolation&lt;Object&gt;&gt; validateResult = validator.validate(obj);</span><br><span class="line">        <span class="keyword">if</span>(validateResult.size() &gt; <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> MysdException(validateResult.iterator().next().getPropertyPath() +<span class="string">&quot;:&quot;</span>+ validateResult.iterator().next().getMessage(), <span class="number">500</span>);</span><br><span class="line">        <span class="keyword">return</span> obj;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="comment">//class</span></span><br></pre></td></tr></table></figure><h1 id="参数没有放在QueryBody-中"><a href="#参数没有放在QueryBody-中" class="headerlink" title="参数没有放在QueryBody 中"></a>参数没有放在QueryBody 中</h1><p>之前考虑的都是 参数放到QueryBody 如果对方把请求参数写在 QueryParam中</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Order(Ordered.HIGHEST_PRECEDENCE + 1)</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TraceFilter</span> <span class="keyword">extends</span> <span class="title">ActionFilter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">filter</span><span class="params">(HttpServletRequest request, HttpServletResponse response, FilterChain chain)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">Long startTime = System.nanoTime();</span><br><span class="line"></span><br><span class="line">String contentType = request.getContentType();</span><br><span class="line">log.info(<span class="string">&quot;QueryStart_Url(&quot;</span> + request.getRequestURI() + <span class="string">&quot;)_Method(&quot;</span>+request.getMethod()+<span class="string">&quot;)_Type(&quot;</span>+getContentType(contentType)+<span class="string">&quot;)_Ip(&quot;</span>+getIpAddress(request)+<span class="string">&quot;)&quot;</span>+getDevInfo(request.getHeader(HttpHeaders.USER_AGENT)));</span><br><span class="line">ContentCachingRequestWrapper requestWrapper = <span class="keyword">new</span> ContentCachingRequestWrapper(request);</span><br><span class="line">log.info(<span class="string">&quot;QueryString:&quot;</span> + requestWrapper.getQueryString());</span><br><span class="line">log.info(<span class="string">&quot;QueryParameter:&quot;</span> + (requestWrapper.getParameterMap().size() !=<span class="number">0</span> ? JSON.toJSONString(requestWrapper.getParameterMap()):<span class="string">&quot;&quot;</span>));</span><br><span class="line"><span class="keyword">if</span> (requestWrapper.hasFile() &amp;&amp; requestWrapper.getBodySize() != <span class="number">0</span>) &#123;</span><br><span class="line">log.info(<span class="string">&quot;QueryBody: 内容是个文件&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">String queryBody = requestWrapper.getQueryBody();</span><br><span class="line">String fmqb = queryBody.replaceAll(<span class="string">&quot;\\s+&quot;</span>, <span class="string">&quot; &quot;</span>);</span><br><span class="line">log.info(<span class="string">&quot;QueryBody:&quot;</span> + fmqb);</span><br><span class="line"></span><br><span class="line"><span class="comment">//支持 前端用 get 但是数据传递在body中</span></span><br><span class="line"><span class="keyword">if</span>(HttpMethod.GET.matches(request.getMethod()) &amp;&amp; requestWrapper.getBodySize() != <span class="number">0</span>) &#123;</span><br><span class="line">queryBody = URLDecoder.decode(queryBody, <span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(queryBody != <span class="keyword">null</span> &amp;&amp; queryBody.length() &gt; <span class="number">3</span> &amp;&amp; queryBody.length() &lt; <span class="number">999</span>) &#123;</span><br><span class="line"><span class="comment">//支持 前端用 JSON 时 后端用 @RequestParam 接收参数</span></span><br><span class="line"><span class="keyword">if</span>((contentType == <span class="keyword">null</span> || contentType.startsWith(MediaType.APPLICATION_JSON_VALUE)) </span><br><span class="line"><span class="comment">//JSON 必须 没有数组</span></span><br><span class="line">&amp;&amp; fmqb.indexOf(<span class="string">&quot;[&quot;</span>) == -<span class="number">1</span> ) &#123;</span><br><span class="line"><span class="comment">//对简单的 RquestBody JSON 数据  放入 RequestParam 封装</span></span><br><span class="line">JSONObject json = JSONObject.parseObject(queryBody);</span><br><span class="line"><span class="keyword">for</span>(String key : json.keySet()) &#123;</span><br><span class="line">String value = json.getString(key);</span><br><span class="line"><span class="keyword">if</span>(StringUtils.isNotEmpty(value) &amp;&amp; !value.startsWith(<span class="string">&quot;&#123;&quot;</span>) &amp;&amp; !value.startsWith(<span class="string">&quot;[&quot;</span>))</span><br><span class="line">requestWrapper.put(key, value);</span><br><span class="line">&#125;<span class="comment">//for</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//支持 前端用 x-www 后端用 参数 或者 JavaBean 接收</span></span><br><span class="line"><span class="keyword">if</span>(contentType == <span class="keyword">null</span> || contentType.startsWith(MediaType.APPLICATION_FORM_URLENCODED_VALUE)) &#123;</span><br><span class="line">String[] params = queryBody.split(<span class="string">&quot;&amp;&quot;</span>);</span><br><span class="line"><span class="keyword">for</span>(String param : params) &#123;</span><br><span class="line">String[] par = param.split(<span class="string">&quot;=&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(par.length != <span class="number">2</span>) <span class="keyword">break</span>;</span><br><span class="line">requestWrapper.put(par[<span class="number">0</span>], par[<span class="number">1</span>]);</span><br><span class="line">&#125;<span class="comment">//for</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="comment">//if</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//支持 前端用 x-www 或 form-data 时 后端用 JavaBean 接收</span></span><br><span class="line"><span class="comment">//或者 body 没有数据时 param有数据 把 param内容放到 body 中</span></span><br><span class="line"><span class="keyword">if</span>((requestWrapper.getBodySize() == <span class="number">0</span> || HttpMethod.GET.matches(request.getMethod())) &amp;&amp; </span><br><span class="line">(contentType == <span class="keyword">null</span> || </span><br><span class="line">contentType.startsWith(MediaType.APPLICATION_FORM_URLENCODED_VALUE) </span><br><span class="line">|| contentType.startsWith(MediaType.MULTIPART_FORM_DATA_VALUE) </span><br><span class="line">|| contentType.startsWith(MediaType.APPLICATION_JSON_VALUE))) &#123;</span><br><span class="line">Map&lt;String,String&gt; map = requestWrapper.getParameterMapEx();</span><br><span class="line"><span class="keyword">if</span>(!map.isEmpty()) &#123;</span><br><span class="line">String mapJson = JSON.toJSONString(map)</span><br><span class="line">.replaceAll(<span class="string">&quot;\&quot;\\&#123;&quot;</span>,<span class="string">&quot;&#123;&quot;</span>)</span><br><span class="line">.replaceAll(<span class="string">&quot;\\&#125;\&quot;&quot;</span>, <span class="string">&quot;&#125;&quot;</span>)</span><br><span class="line">.replaceAll(<span class="string">&quot;\&quot;\\[&quot;</span>,<span class="string">&quot;[&quot;</span>)</span><br><span class="line">.replaceAll(<span class="string">&quot;\\]\&quot;&quot;</span>, <span class="string">&quot;]&quot;</span>)</span><br><span class="line">.replaceAll(<span class="string">&quot;\\\\\&quot;&quot;</span>, <span class="string">&quot;\&quot;&quot;</span>);</span><br><span class="line">requestWrapper.rewriteBody(mapJson);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="comment">//else</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//劫持返回信息</span></span><br><span class="line"><span class="keyword">boolean</span> isMeHook = <span class="keyword">false</span>;</span><br><span class="line">ResponseWrapper proxyResponse;</span><br><span class="line"><span class="keyword">if</span> (response <span class="keyword">instanceof</span> ResponseWrapper)</span><br><span class="line">proxyResponse = (ResponseWrapper) response;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">proxyResponse = <span class="keyword">new</span> ResponseWrapper(response);</span><br><span class="line">isMeHook = <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">chain.doFilter(requestWrapper, proxyResponse);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(response != <span class="keyword">null</span> &amp;&amp; (response.getContentType() == <span class="keyword">null</span> || response.getContentType().startsWith(MediaType.APPLICATION_JSON_VALUE)))</span><br><span class="line">log.info(<span class="string">&quot;ResponseBody Secret(&#123;&#125;) Detail(&#123;&#125;)&quot;</span>, response <span class="keyword">instanceof</span> CryptoHttpServletResponse, <span class="keyword">new</span> String(proxyResponse.getContent()));</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">log.info(<span class="string">&quot;ResponseBody Detail(&#123;&#125;)&quot;</span>, <span class="string">&quot;内容未知 type:&quot;</span> + response.getContentType());</span><br><span class="line"></span><br><span class="line">Long elapsedTime = DateUtil.nanosToMillis(DateUtil.spendNt(startTime));</span><br><span class="line">log.info(<span class="string">&quot;QueryEnd-Url:&quot;</span> + request.getRequestURI() + <span class="string">&quot; elapsedTime(&quot;</span> + elapsedTime + <span class="string">&quot;)&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(isMeHook)</span><br><span class="line">proxyResponse.finish();</span><br><span class="line">&#125;<span class="comment">// method</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getContentType</span><span class="params">(String contentType)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(StringUtils.isEmpty(contentType))</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;NONE&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(contentType.indexOf(<span class="string">&quot;;&quot;</span>) != -<span class="number">1</span>) </span><br><span class="line">contentType = contentType.split(<span class="string">&quot;;&quot;</span>)[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">if</span>(contentType.indexOf(<span class="string">&quot;/&quot;</span>) != -<span class="number">1</span>)</span><br><span class="line">contentType = contentType.split(<span class="string">&quot;/&quot;</span>)[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">return</span> contentType;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getDevInfo</span><span class="params">(String agent)</span> </span>&#123;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getIpAddress</span><span class="params">(HttpServletRequest request)</span> </span>&#123;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="comment">// class</span></span><br></pre></td></tr></table></figure><p>手动把 queryString的参数放到 requestBody 中去</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>很多人会搞不明白 content-type 的区别</p><p>明明说了 用 JSON 请求 参数却放在 param 中</p><p>或者需要放在 param 中的参数 放到 body 中 或者参数放到 url 中</p><p>如果后端不区分这些 不论 param url body 全部都处理 都可以自由接收</p><p>那将极大的降低对接口的工作量</p><p>只是有太多情况需要考虑 一点点完善吧~</p>]]></content>
    
    
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;</summary>
    
    
    
    <category term="Java" scheme="https://blog.lqs1848.top/categories/Java/"/>
    
    <category term="Spring" scheme="https://blog.lqs1848.top/categories/Java/Spring/"/>
    
    
    <category term="Java" scheme="https://blog.lqs1848.top/tags/Java/"/>
    
    <category term="Spring" scheme="https://blog.lqs1848.top/tags/Spring/"/>
    
    <category term="RequestBody" scheme="https://blog.lqs1848.top/tags/RequestBody/"/>
    
    <category term="RequestParam" scheme="https://blog.lqs1848.top/tags/RequestParam/"/>
    
  </entry>
  
  <entry>
    <title>Seata NullPointerException</title>
    <link href="https://blog.lqs1848.top/2021/12/16/2021-12-16%20%20Seata%20NullPointerException/"/>
    <id>https://blog.lqs1848.top/2021/12/16/2021-12-16%20%20Seata%20NullPointerException/</id>
    <published>2021-12-15T16:00:00.000Z</published>
    <updated>2021-12-30T03:30:30.193Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h1 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br></pre></td><td class="code"><pre><span class="line">17:29:59.697 [Gateway.89c2f32d] [DubboServerHandler-172.17.0.1:20881-thread-199] INFO </span><br><span class="line">com.mysd.common.dubbo.filter.DubboProviderFilter -</span><br><span class="line">DubboProvider Start(insertByPurOrder)</span><br><span class="line">17:29:59.704 [Gateway.89c2f32d] [DubboServerHandler-172.17.0.1:20881-thread-199] INFO </span><br><span class="line">com.mysd.common.MysdApplication -</span><br><span class="line">QueryCount(1) SqlTime(1) SqlStr(SELECT a.scaling_factor , a.purchase_price , b.material_name, b.material_specification, a.barcode , a.auxiliary_unit, b.is_need_sncode FROM pub_material_detail_71 a left join pub_material_71 b on a.material_id &#x3D; b.material_id WHERE a.md_id &#x3D; &#x2F;*mdId*&#x2F;34 AND a.material_id &#x3D; &#x2F;*materialId*&#x2F;23 AND a.group_id &#x3D; &#x2F;*groupId*&#x2F;71 AND a.platform_id &#x3D;&#x2F;*platformId*&#x2F;71)</span><br><span class="line">17:29:59.712 [Gateway.89c2f32d] [DubboServerHandler-172.17.0.1:20881-thread-199] INFO </span><br><span class="line">com.mysd.common.MysdApplication -</span><br><span class="line">SqlResult(1) SqlTime(6) SqlStr(INSERT INTO rep_order_material_71 ( order_num, material_id, md_id, material_warehouse, auxiliary_quantity, scattered_quantity, material_quantity, unit_price, discount_price, total_amount, gift_flag, order_type, platform_id, group_id, create_by, material_name, material_specification, auxiliary_unit, create_time ) VALUES ( &#x2F;*orderNum*&#x2F;&#39;37&#39;, &#x2F;*materialId*&#x2F;23, &#x2F;*mdId*&#x2F;34, &#x2F;*materialWarehouse*&#x2F;1, &#x2F;*auxiliaryQuantity*&#x2F;200, &#x2F;*scatteredQuantity*&#x2F;0, &#x2F;*materialQuantity*&#x2F;1200, &#x2F;*unitPrice*&#x2F;1000, &#x2F;*discountPrice*&#x2F;1000, &#x2F;*totalAmount*&#x2F;200000.00, &#x2F;*giftFlag*&#x2F;&#39;0&#39;, &#x2F;*orderType*&#x2F;&#39;201&#39;, &#x2F;*platformId*&#x2F;71, &#x2F;*groupId*&#x2F;71, &#x2F;*createBy*&#x2F;&#39;admin&#39;, &#x2F;*materialName*&#x2F;&#39;魔鬼梅洛红葡萄酒&#39;, &#x2F;*materialSpecification*&#x2F;&#39;500ml&#39;, &#x2F;*auxiliaryUnit*&#x2F;&#39;件&#39;, sysdate() ))</span><br><span class="line">17:29:59.714 [Gateway.89c2f32d] [DubboServerHandler-172.17.0.1:20881-thread-199] ERROR</span><br><span class="line">com.mysd.common.dubbo.filter.DubboExceptionFilter -</span><br><span class="line">Dubbo 出现错误!</span><br><span class="line">org.springframework.jdbc.UncategorizedSQLException: </span><br><span class="line">### Error updating database.  Cause: java.sql.SQLException: java.lang.NullPointerException</span><br><span class="line">### The error may involve com.mysd.stock.storage.mapper.RepOrderMaterialMapper.insertOrderMaterial-Inline</span><br><span class="line">### The error occurred while setting parameters</span><br><span class="line">### SQL: INSERT INTO rep_order_material_71 ( order_num, material_id, md_id, material_warehouse, auxiliary_quantity, scattered_quantity, material_quantity, unit_price, discount_price, total_amount, gift_flag, order_type, platform_id, group_id, create_by, material_name, material_specification, auxiliary_unit, create_time ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, sysdate() )</span><br><span class="line">### Cause: java.sql.SQLException: java.lang.NullPointerException</span><br><span class="line">; uncategorized SQLException; SQL state [null]; error code [0]; java.lang.NullPointerException; nested exception is java.sql.SQLException: java.lang.NullPointerException</span><br><span class="line">at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)</span><br><span class="line">at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)</span><br><span class="line">at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)</span><br><span class="line">at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)</span><br><span class="line">at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)</span><br><span class="line">at com.sun.proxy.$Proxy171.insert(Unknown Source)</span><br><span class="line">at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)</span><br><span class="line">at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)</span><br><span class="line">at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)</span><br><span class="line">at com.sun.proxy.$Proxy184.insertOrderMaterial(Unknown Source)</span><br><span class="line">at com.mysd.stock.storage.service.RepOrderMaterialServiceImpl.insertOrderMaterialList(RepOrderMaterialServiceImpl.java:1947)</span><br><span class="line">at com.mysd.stock.storage.service.RepOrderMaterialServiceImpl.insertByPurOrder(RepOrderMaterialServiceImpl.java:951)</span><br><span class="line">at com.mysd.stock.storage.service.RepOrderMaterialServiceImpl$$FastClassBySpringCGLIB$$66cf9a15.invoke(&lt;generated&gt;)</span><br><span class="line">at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)</span><br><span class="line">at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)</span><br><span class="line">at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)</span><br><span class="line">at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)</span><br><span class="line">at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)</span><br><span class="line">at com.mysd.stock.storage.aspect.ToeknAspect.around(ToeknAspect.java:39)</span><br><span class="line">at jdk.internal.reflect.GeneratedMethodAccessor404.invoke(Unknown Source)</span><br><span class="line">at java.base&#x2F;jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)</span><br><span class="line">at java.base&#x2F;java.lang.reflect.Method.invoke(Method.java:564)</span><br><span class="line">at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)</span><br><span class="line">at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)</span><br><span class="line">at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)</span><br><span class="line">at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)</span><br><span class="line">at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)</span><br><span class="line">at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)</span><br><span class="line">at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)</span><br><span class="line">at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)</span><br><span class="line">at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)</span><br><span class="line">at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)</span><br><span class="line">at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)</span><br><span class="line">at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)</span><br><span class="line">at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)</span><br><span class="line">at com.mysd.stock.storage.service.RepOrderMaterialServiceImpl$$EnhancerBySpringCGLIB$$c50246e6.insertByPurOrder(&lt;generated&gt;)</span><br><span class="line">at org.apache.dubbo.common.bytecode.Wrapper13.invokeMethod(Wrapper13.java)</span><br><span class="line">at org.apache.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:47)</span><br><span class="line">at org.apache.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:84)</span><br><span class="line">at org.apache.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:56)</span><br><span class="line">at org.apache.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:56)</span><br><span class="line">at com.alibaba.dubbo.rpc.Invoker$CompatibleInvoker.invoke(Invoker.java:55)</span><br><span class="line">at io.seata.integration.dubbo.alibaba.AlibabaDubboTransactionPropagationFilter.invoke(AlibabaDubboTransactionPropagationFilter.java:45)</span><br><span class="line">at com.alibaba.dubbo.rpc.Filter.invoke(Filter.java:29)</span><br><span class="line">at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:83)</span><br><span class="line">at io.seata.integration.dubbo.ApacheDubboTransactionPropagationFilter.invoke(ApacheDubboTransactionPropagationFilter.java:69)</span><br><span class="line">at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:83)</span><br><span class="line">at com.mysd.common.dubbo.filter.DubboExceptionFilter.invoke(e:44)</span><br><span class="line">at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:83)</span><br><span class="line">at org.apache.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:89)</span><br><span class="line">at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:83)</span><br><span class="line">at org.apache.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:46)</span><br><span class="line">at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:83)</span><br><span class="line">at org.apache.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)</span><br><span class="line">at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:83)</span><br><span class="line">at com.mysd.common.dubbo.filter.DubboProviderFilter.invoke(g:145)</span><br><span class="line">at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:83)</span><br><span class="line">at org.apache.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:129)</span><br><span class="line">at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:83)</span><br><span class="line">at org.apache.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:152)</span><br><span class="line">at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:83)</span><br><span class="line">at org.apache.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)</span><br><span class="line">at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:83)</span><br><span class="line">at org.apache.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:41)</span><br><span class="line">at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:83)</span><br><span class="line">at org.apache.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:145)</span><br><span class="line">at org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:100)</span><br><span class="line">at org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:175)</span><br><span class="line">at org.apache.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:51)</span><br><span class="line">at org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:57)</span><br><span class="line">at java.base&#x2F;java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)</span><br><span class="line">at java.base&#x2F;java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)</span><br><span class="line">at java.base&#x2F;java.lang.Thread.run(Thread.java:832)</span><br><span class="line">Caused by: java.sql.SQLException: java.lang.NullPointerException</span><br><span class="line">at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:115)</span><br><span class="line">at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:50)</span><br><span class="line">at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)</span><br><span class="line">at io.seata.rm.datasource.PreparedStatementProxy.lambda$execute$0(PreparedStatementProxy.java:55)</span><br><span class="line">at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitFalse(AbstractDMLBaseExecutor.java:100)</span><br><span class="line">at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:84)</span><br><span class="line">at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:113)</span><br><span class="line">at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:111)</span><br><span class="line">at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:50)</span><br><span class="line">at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)</span><br><span class="line">at jdk.internal.reflect.GeneratedMethodAccessor391.invoke(Unknown Source)</span><br><span class="line">at java.base&#x2F;jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)</span><br><span class="line">at java.base&#x2F;java.lang.reflect.Method.invoke(Method.java:564)</span><br><span class="line">at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)</span><br><span class="line">at com.sun.proxy.$Proxy243.execute(Unknown Source)</span><br><span class="line">at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)</span><br><span class="line">at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)</span><br><span class="line">at jdk.internal.reflect.GeneratedMethodAccessor567.invoke(Unknown Source)</span><br><span class="line">at java.base&#x2F;jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)</span><br><span class="line">at java.base&#x2F;java.lang.reflect.Method.invoke(Method.java:564)</span><br><span class="line">at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)</span><br><span class="line">at com.sun.proxy.$Proxy241.update(Unknown Source)</span><br><span class="line">at jdk.internal.reflect.GeneratedMethodAccessor567.invoke(Unknown Source)</span><br><span class="line">at java.base&#x2F;jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)</span><br><span class="line">at java.base&#x2F;java.lang.reflect.Method.invoke(Method.java:564)</span><br><span class="line">at org.apache.ibatis.plugin.Invocation.proceed(Invocation.java:49)</span><br><span class="line">at com.mysd.common.mybatis.SqlPrintInterceptor.intercept(ea:50)</span><br><span class="line">at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)</span><br><span class="line">at com.sun.proxy.$Proxy241.update(Unknown Source)</span><br><span class="line">at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)</span><br><span class="line">at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)</span><br><span class="line">at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)</span><br><span class="line">at jdk.internal.reflect.GeneratedMethodAccessor639.invoke(Unknown Source)</span><br><span class="line">at java.base&#x2F;jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)</span><br><span class="line">at java.base&#x2F;java.lang.reflect.Method.invoke(Method.java:564)</span><br><span class="line">at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)</span><br><span class="line">at com.sun.proxy.$Proxy240.update(Unknown Source)</span><br><span class="line">at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)</span><br><span class="line">at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)</span><br><span class="line">at jdk.internal.reflect.GeneratedMethodAccessor650.invoke(Unknown Source)</span><br><span class="line">at java.base&#x2F;jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)</span><br><span class="line">at java.base&#x2F;java.lang.reflect.Method.invoke(Method.java:564)</span><br><span class="line">at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)</span><br><span class="line">... 68 common frames omitted</span><br><span class="line">Caused by: java.lang.NullPointerException: null</span><br><span class="line">at io.seata.rm.datasource.sql.struct.TableRecords.buildRecords(TableRecords.java:195)</span><br><span class="line">at io.seata.rm.datasource.exec.BaseTransactionalExecutor.buildTableRecords(BaseTransactionalExecutor.java:402)</span><br><span class="line">at io.seata.rm.datasource.exec.BaseInsertExecutor.afterImage(BaseInsertExecutor.java:77)</span><br><span class="line">at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitFalse(AbstractDMLBaseExecutor.java:101)</span><br><span class="line">at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:84)</span><br><span class="line">at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:113)</span><br><span class="line">at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:111)</span><br><span class="line">... 110 common frames omitted</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>好多次都碰到</p><p>明明 insert 成功 返回插入成功1行</p><p>但是 Seata 报错 回滚</p><p>还是 NullPointerException</p><p>还不能复现出来</p><h1 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">String colName = resultSetMetaData.getColumnName(i);</span><br><span class="line">ColumnMeta col = tmeta.getColumnMeta(colName);</span><br><span class="line"><span class="keyword">int</span> dataType = col.getDataType();</span><br></pre></td></tr></table></figure><p>数据库在使用过程中修改过表结构 添加或删除了字段 </p><p>Seata 的 tableMeta 没有更新 到 seata的更新时间后就没问题了</p><p>坑… 特别是 这些都是同事修改的数据库字段 自己没动</p><h1 id="再次出现"><a href="#再次出现" class="headerlink" title="再次出现"></a>再次出现</h1><p>直接写原因</p><p>数据库 有一列 仓库名称 列名 同事直接写成 name </p><p>Mybatis XML SQL 自动把 name 修改为 NAME </p><p>getColumnMeta(colName);  获取时是 根据列名获取</p><p>用 ‘NAME’ 肯定获取不到 </p><p>Seata 的 Map 存储的是小写 ‘name’</p><p>不确定项目里面还有没有其它的大小写问题</p><p>直接修改 Seata 源码</p><p>io.seata.rm.datasource.sql.struct.TableMeta</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * key: column name</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Map&lt;String, ColumnMeta&gt; allColumns = <span class="keyword">new</span> LinkedHashMap&lt;&gt;();</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * key: index name</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Map&lt;String, IndexMeta&gt; allIndexes = <span class="keyword">new</span> LinkedHashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line"><span class="comment">//修改为</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * key: column name</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Map&lt;String, ColumnMeta&gt; allColumns = <span class="keyword">new</span> LinkedCaseInsensitiveMap&lt;&gt;();</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * key: index name</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Map&lt;String, IndexMeta&gt; allIndexes = <span class="keyword">new</span> LinkedCaseInsensitiveMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line"><span class="comment">//修改成不区分大小写的 Map</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;</summary>
    
    
    
    <category term="Java" scheme="https://blog.lqs1848.top/categories/Java/"/>
    
    
    <category term="Java" scheme="https://blog.lqs1848.top/tags/Java/"/>
    
    <category term="Seata" scheme="https://blog.lqs1848.top/tags/Seata/"/>
    
  </entry>
  
  <entry>
    <title>oracle 11g 数组下标越界</title>
    <link href="https://blog.lqs1848.top/2021/11/26/2021-11-26%20oracle%2011g%20%E6%95%B0%E7%BB%84%E4%B8%8B%E8%A1%A8%E8%B6%8A%E7%95%8C/"/>
    <id>https://blog.lqs1848.top/2021/11/26/2021-11-26%20oracle%2011g%20%E6%95%B0%E7%BB%84%E4%B8%8B%E8%A1%A8%E8%B6%8A%E7%95%8C/</id>
    <published>2021-11-25T16:00:00.000Z</published>
    <updated>2021-11-26T02:05:46.272Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h1 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h1><p>SQL 查询 时携带了超过8个参数以后 一直提示下标越界</p><h1 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h1><p>我用的 Oracle11g JDBC 驱动是网上随便下的 oracle 11.1.0.7.0-Produc tion 的 ojdbc6.jar 自己丢到本地Maven上</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//oracle.jdbc.driver.OracleSql 第579行</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">13</span>: &#123;</span><br><span class="line">    <span class="keyword">if</span> (count &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.parameterList == OracleSql.EMPTY_LIST) &#123;</span><br><span class="line">            <span class="keyword">this</span>.parameterList = <span class="keyword">new</span> String[<span class="number">8</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">this</span>.parameterList.length &lt;= <span class="keyword">this</span>.parameterCount) &#123;</span><br><span class="line">            <span class="keyword">final</span> String[] parameterList = <span class="keyword">new</span> String[<span class="keyword">this</span>.parameterList.length * <span class="number">4</span>];</span><br><span class="line">            System.arraycopy(<span class="keyword">this</span>.parameterList, <span class="number">0</span>, parameterList, <span class="number">0</span>, <span class="keyword">this</span>.parameterList.length);</span><br><span class="line">            <span class="keyword">this</span>.parameterList = parameterList;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">this</span>.parameterList[<span class="keyword">this</span>.parameterCount] = <span class="keyword">new</span> String(<span class="keyword">this</span>.currentParameter, <span class="number">0</span>, count).intern();</span><br><span class="line">        count = <span class="number">0</span>;</span><br><span class="line">        ++<span class="keyword">this</span>.parameterCount;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>更换为Maven 仓库中的最新版</p><blockquote><dependency>    <groupId>com.oracle.database.jdbc</groupId>    <artifactId>ojdbc6</artifactId>    <version>11.2.0.4</version></dependency></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//oracle.jdbc.driver.OracleSql 第633行</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">16</span>: &#123;</span><br><span class="line">    <span class="keyword">if</span> (count &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.parameterList == OracleSql.EMPTY_LIST) &#123;</span><br><span class="line">        <span class="keyword">this</span>.parameterList = <span class="keyword">new</span> String[Math.max(<span class="number">8</span>, <span class="keyword">this</span>.parameterCount * <span class="number">4</span>)];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">this</span>.parameterList.length &lt;= <span class="keyword">this</span>.parameterCount) &#123;</span><br><span class="line">        <span class="keyword">final</span> String[] parameterList = <span class="keyword">new</span> String[<span class="keyword">this</span>.parameterList.length * <span class="number">4</span>];</span><br><span class="line">        System.arraycopy(<span class="keyword">this</span>.parameterList, <span class="number">0</span>, parameterList, <span class="number">0</span>, <span class="keyword">this</span>.parameterList.length);</span><br><span class="line">        <span class="keyword">this</span>.parameterList = parameterList;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">this</span>.parameterList[<span class="keyword">this</span>.parameterCount] = <span class="keyword">new</span> String(<span class="keyword">this</span>.currentParameter, <span class="number">0</span>, count).intern();</span><br><span class="line">    count = <span class="number">0</span>;</span><br><span class="line">    ++<span class="keyword">this</span>.parameterCount;</span><br><span class="line">    <span class="keyword">if</span> (n != <span class="number">0</span>) &#123;</span><br><span class="line">        ++<span class="keyword">this</span>.returningIntoParameterCount;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//旧版</span></span><br><span class="line"><span class="keyword">this</span>.parameterList = <span class="keyword">new</span> String[<span class="number">8</span>];</span><br><span class="line"><span class="comment">//新版</span></span><br><span class="line"><span class="keyword">this</span>.parameterList = <span class="keyword">new</span> String[Math.max(<span class="number">8</span>, <span class="keyword">this</span>.parameterCount * <span class="number">4</span>)];</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Oracle Jdbc 驱动竟然还会有这么明显的BUG… emm</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>驱动老老实实用最新的</p>]]></content>
    
    
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;</summary>
    
    
    
    <category term="DateBase" scheme="https://blog.lqs1848.top/categories/DateBase/"/>
    
    
    <category term="Java" scheme="https://blog.lqs1848.top/tags/Java/"/>
    
    <category term="Oracle 11g" scheme="https://blog.lqs1848.top/tags/Oracle-11g/"/>
    
  </entry>
  
  <entry>
    <title>PageHelper 丢失参数</title>
    <link href="https://blog.lqs1848.top/2021/11/22/2021-11-22%20PageHelper%20%E4%B8%A2%E5%A4%B1%E5%8F%82%E6%95%B0/"/>
    <id>https://blog.lqs1848.top/2021/11/22/2021-11-22%20PageHelper%20%E4%B8%A2%E5%A4%B1%E5%8F%82%E6%95%B0/</id>
    <published>2021-11-21T16:00:00.000Z</published>
    <updated>2021-11-26T02:06:59.746Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><p>PageHelper 5.2.0版本</p><h1 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h1><p>一个很早以前的接口前段突然要使用</p><p>调用后发现无法查询到数据</p><p>查看日志发现</p><p>PageHelper 分页 Count SQL</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">count</span>(<span class="number">0</span>) <span class="keyword">FROM</span> (<span class="keyword">SELECT</span> (round(<span class="number">6367000</span> <span class="operator">*</span> <span class="number">2</span> <span class="operator">*</span> <span class="built_in">asin</span>(<span class="built_in">sqrt</span>(pow(<span class="built_in">sin</span>(((m.latitude <span class="operator">*</span> pi()) <span class="operator">/</span> <span class="number">180</span> <span class="operator">-</span> (<span class="comment">/*latitude*/</span><span class="number">39</span> <span class="operator">*</span> pi()) <span class="operator">/</span> <span class="number">180</span>) <span class="operator">/</span> <span class="number">2</span>), <span class="number">2</span>) <span class="operator">+</span> <span class="built_in">cos</span>((<span class="comment">/*latitude*/</span><span class="number">39</span> <span class="operator">*</span> pi()) <span class="operator">/</span> <span class="number">180</span>) <span class="operator">*</span> <span class="built_in">cos</span>((m.latitude <span class="operator">*</span> pi()) <span class="operator">/</span> <span class="number">180</span>) <span class="operator">*</span> pow(<span class="built_in">sin</span>(((m.longitude <span class="operator">*</span> pi()) <span class="operator">/</span> <span class="number">180</span> <span class="operator">-</span> (<span class="comment">/*longitude*/</span><span class="number">39</span> <span class="operator">*</span> pi()) <span class="operator">/</span> <span class="number">180</span>) <span class="operator">/</span> <span class="number">2</span>), <span class="number">2</span>))))) <span class="keyword">AS</span> distance <span class="keyword">FROM</span> sel_mal m <span class="keyword">WHERE</span> m.status <span class="operator">=</span> <span class="number">1</span> <span class="keyword">AND</span> m.mall_id <span class="operator">=</span> <span class="comment">/*mallId*/</span><span class="number">39</span>) table_count</span><br></pre></td></tr></table></figure><p>分页后进行查询的SQL</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> (round(<span class="number">6367000</span> <span class="operator">*</span> <span class="number">2</span> <span class="operator">*</span> <span class="built_in">asin</span>(<span class="built_in">sqrt</span>(pow(<span class="built_in">sin</span>(((m.latitude <span class="operator">*</span> pi()) <span class="operator">/</span> <span class="number">180</span> <span class="operator">-</span> (<span class="comment">/*latitude*/</span><span class="number">39</span> <span class="operator">*</span> pi()) <span class="operator">/</span> <span class="number">180</span>) <span class="operator">/</span> <span class="number">2</span>), <span class="number">2</span>) <span class="operator">+</span> <span class="built_in">cos</span>((<span class="comment">/*latitude*/</span><span class="number">39</span> <span class="operator">*</span> pi()) <span class="operator">/</span> <span class="number">180</span>) <span class="operator">*</span> <span class="built_in">cos</span>((m.latitude <span class="operator">*</span> pi()) <span class="operator">/</span> <span class="number">180</span>) <span class="operator">*</span> pow(<span class="built_in">sin</span>(((m.longitude <span class="operator">*</span> pi()) <span class="operator">/</span> <span class="number">180</span> <span class="operator">-</span> (<span class="comment">/*longitude*/</span><span class="keyword">null</span> <span class="operator">*</span> pi()) <span class="operator">/</span> <span class="number">180</span>) <span class="operator">/</span> <span class="number">2</span>), <span class="number">2</span>))))) <span class="keyword">AS</span> distance <span class="keyword">from</span> sel_mal m <span class="keyword">where</span> m.status<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> m.mall_id <span class="operator">=</span> <span class="comment">/*mallId*/</span><span class="keyword">null</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> distance <span class="keyword">ASC</span> LIMIT <span class="comment">/*Second_PageHelper*/</span><span class="number">30</span> </span><br></pre></td></tr></table></figure><p>PageHelper 在判断是否需要分页时的 SQL 还有 mallId 这个参数 </p><p>但是到了 实际分页的 SQL 时 mallId 这个参数就丢失了</p><p>原始XML</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">select (round(6367000 * 2 * asin(sqrt(pow(sin(((m.latitude * pi()) / 180 - (#&#123;latitude&#125; * pi()) / 180) / 2), 2) + cos((#&#123;latitude&#125; * pi()) / 180) * cos((m.latitude * pi()) / 180)</span><br><span class="line">* pow(sin(((m.longitude * pi()) / 180 - (#&#123;longitude&#125; * pi()) / 180) / 2), 2))))) AS distance</span><br><span class="line"><span class="keyword">from</span> sel_mal m</span><br><span class="line"><span class="keyword">where</span></span><br><span class="line">m.status<span class="operator">=</span><span class="number">1</span></span><br><span class="line">and m.mall_id = #&#123;mallId&#125;</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> distance <span class="keyword">ASC</span></span><br></pre></td></tr></table></figure><p>请求参数在分页时还存在</p><p>分页后却消失了 变成 null 导致查询不到数据</p><p>断点调试 PageHelper </p><p>根据 PageInterceptor 源码</p><p>Count 时 没有修改 parameter 变量</p><p>因为 入参没有变动 所以 PageHelper 使用了原始的 parameter 进行查询 查询结果就没有任何问题</p><p>而 PageHelper  进行分页时</p><p>增加了 /<em>Second_PageHelper</em>/30  参数</p><p>我原方法 是 </p><p>SelMalPo selectByMall(Long mallId);</p><p>单个参数的方法</p><p>PageHelper  对请求参数进行修改</p><p>变更为 paramMap HashMap 用于传递自身所需要的 limit size</p><p>在 AbstractHelperDialect 114行</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">//下面这段方法，主要解决一个常见类型的参数时的问题</span></span><br><span class="line"><span class="keyword">if</span> (boundSql.getParameterMappings() != <span class="keyword">null</span> &amp;&amp; boundSql.getParameterMappings().size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">for</span> (ParameterMapping parameterMapping : boundSql.getParameterMappings()) &#123;</span><br><span class="line">        String name = parameterMapping.getProperty();</span><br><span class="line">        <span class="keyword">if</span> (!name.equals(PAGEPARAMETER_FIRST)</span><br><span class="line">            &amp;&amp; !name.equals(PAGEPARAMETER_SECOND)</span><br><span class="line">            &amp;&amp; paramMap.get(name) == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (hasTypeHandler</span><br><span class="line">                || parameterMapping.getJavaType().equals(parameterObject.getClass())) &#123;</span><br><span class="line">                paramMap.put(name, parameterObject);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>注入参数时</p><p>由于我的SQL比较特殊 </p><p>里面有3个  #{latitude} 1个 #{mallId}</p><p>PageHelper  根据 参数类型 Long 匹配后 将  latitude = 39   而 mallId 这个变量没有赋值</p><p>导致了以上问题</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这个问题是由于特殊情况产生的</p><p>SQL 中有多个需要传递的参数</p><p>但方法个只声明了一个参数</p><p>导致 PageHelper  判断错误</p>]]></content>
    
    
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;</summary>
    
    
    
    <category term="Java" scheme="https://blog.lqs1848.top/categories/Java/"/>
    
    
    <category term="Java" scheme="https://blog.lqs1848.top/tags/Java/"/>
    
    <category term="Mybatis" scheme="https://blog.lqs1848.top/tags/Mybatis/"/>
    
    <category term="PageHelper" scheme="https://blog.lqs1848.top/tags/PageHelper/"/>
    
  </entry>
  
  <entry>
    <title>Spring参数绑定 适应多种提交方式</title>
    <link href="https://blog.lqs1848.top/2021/11/03/2021-11-03%20Spring%E5%8F%82%E6%95%B0%E7%BB%91%E5%AE%9A/"/>
    <id>https://blog.lqs1848.top/2021/11/03/2021-11-03%20Spring%E5%8F%82%E6%95%B0%E7%BB%91%E5%AE%9A/</id>
    <published>2021-11-02T16:00:00.000Z</published>
    <updated>2021-11-03T11:05:04.511Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h1 id="一、背景"><a href="#一、背景" class="headerlink" title="一、背景"></a>一、背景</h1><p>开发接口时经常会出现</p><p>有的接口一堆参数 得定义 Bean 用 @RequestBody 接收</p><p>有的又只有一两个 参数 用 @RequestParam 接收</p><p>快速迭代时修改接口导致 前端请求 ContentType 也要跟着改变</p><p>前端每次都要纠结参数放 param 还是放 body </p><p>就产生了 修改下参数绑定逻辑的想法</p><h1 id="二、修改参数绑定"><a href="#二、修改参数绑定" class="headerlink" title="二、修改参数绑定"></a>二、修改参数绑定</h1><p>Spring 会从 request 中获取</p><p>parameterMap 和 body</p><p>formData 是放 parameterMap 中 表现为 key-values</p><p>x-www 是放在 body中 表现为 key=value&amp;key=value</p><p>json 是放在 body 中 表现为 {key:value}</p><p>凭印象写的 具体得用 postMan 实测下</p><p>因为 post 和 get 会有区别</p><p>默认 get 没有 content-type 但 postMan 也能传递 x-www</p><p>首先 通过过滤器替换 request</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.net.URLDecoder;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.FilterChain;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.core.Ordered;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.annotation.Order;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.HttpHeaders;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.MediaType;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSONObject;</span><br><span class="line"><span class="keyword">import</span> org.lqs1848.framework.enums.HttpMethod;</span><br><span class="line"><span class="keyword">import</span> org.lqs1848.framework.utils.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.lqs1848.framework.web.wrapper.ContentCachingRequestWrapper;</span><br><span class="line"><span class="keyword">import</span> org.lqs1848.framework.web.wrapper.CryptoHttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> org.lqs1848.framework.web.wrapper.ResponseWrapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.date.DateUtil;</span><br><span class="line"><span class="keyword">import</span> eu.bitwalker.useragentutils.Browser;</span><br><span class="line"><span class="keyword">import</span> eu.bitwalker.useragentutils.OperatingSystem;</span><br><span class="line"><span class="keyword">import</span> eu.bitwalker.useragentutils.UserAgent;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Order(Ordered.HIGHEST_PRECEDENCE)</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TraceFilter</span> <span class="keyword">extends</span> <span class="title">ActionFilter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">filter</span><span class="params">(HttpServletRequest request, HttpServletResponse response, FilterChain chain)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">Long startTime = System.nanoTime();</span><br><span class="line"></span><br><span class="line">String contentType = request.getContentType();</span><br><span class="line">log.info(<span class="string">&quot;QueryStart_Url(&quot;</span> + request.getRequestURI() + <span class="string">&quot;)_Method(&quot;</span>+request.getMethod()+<span class="string">&quot;)_Type(&quot;</span>+getContentType(contentType)+<span class="string">&quot;)_Ip(&quot;</span>+getIpAddress(request)+<span class="string">&quot;)&quot;</span>+getDevInfo(request.getHeader(HttpHeaders.USER_AGENT)));</span><br><span class="line">ContentCachingRequestWrapper requestWrapper = <span class="keyword">new</span> ContentCachingRequestWrapper(request);</span><br><span class="line">log.info(<span class="string">&quot;QueryString:&quot;</span> + requestWrapper.getQueryString());</span><br><span class="line">log.info(<span class="string">&quot;QueryParameter:&quot;</span> + (requestWrapper.getParameterMap().size() !=<span class="number">0</span> ? JSON.toJSONString(requestWrapper.getParameterMap()):<span class="string">&quot;&quot;</span>));</span><br><span class="line"><span class="keyword">if</span> (requestWrapper.hasFile() &amp;&amp; requestWrapper.getBodySize() != <span class="number">0</span>) &#123;</span><br><span class="line">log.info(<span class="string">&quot;QueryBody: 内容是个文件&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">String queryBody = requestWrapper.getQueryBody();</span><br><span class="line">log.info(<span class="string">&quot;QueryBody:&quot;</span> + queryBody.replaceAll(<span class="string">&quot;\\s+&quot;</span>, <span class="string">&quot; &quot;</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">//支持 前端用 get 但是数据传递在body中</span></span><br><span class="line"><span class="keyword">if</span>(HttpMethod.GET.matches(request.getMethod()) &amp;&amp; requestWrapper.getBodySize() != <span class="number">0</span>) &#123;</span><br><span class="line">queryBody = URLDecoder.decode(queryBody, <span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(queryBody != <span class="keyword">null</span> &amp;&amp; queryBody.length() &gt; <span class="number">3</span> &amp;&amp; queryBody.length() &lt; <span class="number">999</span>) &#123;</span><br><span class="line"><span class="comment">//支持 前端用 JSON 时 后端用 @RequestParam 接收参数</span></span><br><span class="line"><span class="keyword">if</span>(contentType == <span class="keyword">null</span> || contentType.startsWith(MediaType.APPLICATION_JSON_VALUE)) &#123;</span><br><span class="line"><span class="comment">//对简单的 RquestBody JSON 数据  放入 RequestParam 封装</span></span><br><span class="line">JSONObject json = JSONObject.parseObject(queryBody);</span><br><span class="line"><span class="keyword">for</span>(String key : json.keySet()) &#123;</span><br><span class="line">String value = json.getString(key);</span><br><span class="line"><span class="keyword">if</span>(StringUtils.isNotEmpty(value) &amp;&amp; !value.startsWith(<span class="string">&quot;&#123;&quot;</span>) &amp;&amp; !value.startsWith(<span class="string">&quot;[&quot;</span>))</span><br><span class="line">requestWrapper.put(key, value);</span><br><span class="line">&#125;<span class="comment">//for</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//支持 前端用 x-www 后端用 参数 或者 JavaBean 接收</span></span><br><span class="line"><span class="keyword">if</span>(contentType == <span class="keyword">null</span> || contentType.startsWith(MediaType.APPLICATION_FORM_URLENCODED_VALUE)) &#123;</span><br><span class="line">String[] params = queryBody.split(<span class="string">&quot;&amp;&quot;</span>);</span><br><span class="line"><span class="keyword">for</span>(String param : params) &#123;</span><br><span class="line">String[] par = param.split(<span class="string">&quot;=&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(par.length != <span class="number">2</span>) <span class="keyword">break</span>;</span><br><span class="line">requestWrapper.put(par[<span class="number">0</span>], par[<span class="number">1</span>]);</span><br><span class="line">&#125;<span class="comment">//for</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="comment">//if</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//支持 前端用 x-www 或 form-data 时 后端用 JavaBean 接收</span></span><br><span class="line"><span class="keyword">if</span>((requestWrapper.getBodySize() == <span class="number">0</span> || HttpMethod.GET.matches(request.getMethod())) &amp;&amp; </span><br><span class="line">(contentType == <span class="keyword">null</span> || contentType.startsWith(MediaType.APPLICATION_FORM_URLENCODED_VALUE) </span><br><span class="line">|| contentType.startsWith(MediaType.MULTIPART_FORM_DATA_VALUE))) &#123;</span><br><span class="line">Map&lt;String,String&gt; map = requestWrapper.getParameterMapEx();</span><br><span class="line"><span class="keyword">if</span>(!map.isEmpty()) &#123;</span><br><span class="line">                    <span class="comment">//这里主要是支持 单个参数里面有嵌套 json 意义不大</span></span><br><span class="line">String mapJson = JSON.toJSONString(map)</span><br><span class="line">.replaceAll(<span class="string">&quot;\&quot;\\&#123;&quot;</span>,<span class="string">&quot;&#123;&quot;</span>)</span><br><span class="line">.replaceAll(<span class="string">&quot;\\&#125;\&quot;&quot;</span>, <span class="string">&quot;&#125;&quot;</span>)</span><br><span class="line">.replaceAll(<span class="string">&quot;\&quot;\\[&quot;</span>,<span class="string">&quot;[&quot;</span>)</span><br><span class="line">.replaceAll(<span class="string">&quot;\\]\&quot;&quot;</span>, <span class="string">&quot;]&quot;</span>)</span><br><span class="line">.replaceAll(<span class="string">&quot;\\\\\&quot;&quot;</span>, <span class="string">&quot;\&quot;&quot;</span>);</span><br><span class="line">requestWrapper.rewriteBody(mapJson);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="comment">//else</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//劫持返回信息</span></span><br><span class="line"><span class="keyword">boolean</span> isMeHook = <span class="keyword">false</span>;</span><br><span class="line">ResponseWrapper proxyResponse;</span><br><span class="line"><span class="keyword">if</span> (response <span class="keyword">instanceof</span> ResponseWrapper)</span><br><span class="line">proxyResponse = (ResponseWrapper) response;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">proxyResponse = <span class="keyword">new</span> ResponseWrapper(response);</span><br><span class="line">isMeHook = <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">chain.doFilter(requestWrapper, proxyResponse);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(response != <span class="keyword">null</span> &amp;&amp; (response.getContentType() == <span class="keyword">null</span> || response.getContentType().startsWith(MediaType.APPLICATION_JSON_VALUE)))</span><br><span class="line">log.info(<span class="string">&quot;ResponseBody Secret(&#123;&#125;) Detail(&#123;&#125;)&quot;</span>, response <span class="keyword">instanceof</span> CryptoHttpServletResponse, <span class="keyword">new</span> String(proxyResponse.getContent()));</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">log.info(<span class="string">&quot;ResponseBody Detail(&#123;&#125;)&quot;</span>, <span class="string">&quot;内容未知 type:&quot;</span> + response.getContentType());</span><br><span class="line"></span><br><span class="line">Long elapsedTime = DateUtil.nanosToMillis(DateUtil.spendNt(startTime));</span><br><span class="line">log.info(<span class="string">&quot;QueryEnd-Url:&quot;</span> + request.getRequestURI() + <span class="string">&quot; elapsedTime(&quot;</span> + elapsedTime + <span class="string">&quot;)&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(isMeHook)</span><br><span class="line">proxyResponse.finish();</span><br><span class="line">&#125;<span class="comment">// method</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getContentType</span><span class="params">(String contentType)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(StringUtils.isEmpty(contentType))</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;NONE&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(contentType.indexOf(<span class="string">&quot;;&quot;</span>) != -<span class="number">1</span>) </span><br><span class="line">contentType = contentType.split(<span class="string">&quot;;&quot;</span>)[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">if</span>(contentType.indexOf(<span class="string">&quot;/&quot;</span>) != -<span class="number">1</span>)</span><br><span class="line">contentType = contentType.split(<span class="string">&quot;/&quot;</span>)[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">return</span> contentType;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getDevInfo</span><span class="params">(String agent)</span> </span>&#123;</span><br><span class="line">StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line"><span class="comment">//解析agent字符串</span></span><br><span class="line">UserAgent userAgent = UserAgent.parseUserAgentString(agent);</span><br><span class="line"><span class="comment">//获取浏览器对象</span></span><br><span class="line">Browser browser = userAgent.getBrowser();</span><br><span class="line"><span class="comment">//获取操作系统对象</span></span><br><span class="line">OperatingSystem operatingSystem = userAgent.getOperatingSystem();</span><br><span class="line">sb.append(<span class="string">&quot;_DevType(&quot;</span>).append(operatingSystem.getDeviceType()).append(<span class="string">&quot;)&quot;</span>)</span><br><span class="line">.append(<span class="string">&quot;_Browser(&quot;</span>).append(browser.getName()).append(<span class="string">&quot;)&quot;</span>)</span><br><span class="line">.append(<span class="string">&quot;_Os(&quot;</span>).append(operatingSystem.getName()).append(<span class="string">&quot;)&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> sb.toString();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getIpAddress</span><span class="params">(HttpServletRequest request)</span> </span>&#123;</span><br><span class="line">String ip = request.getHeader(<span class="string">&quot;x-forwarded-for&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (ip != <span class="keyword">null</span> &amp;&amp; ip.length() != <span class="number">0</span> &amp;&amp; !<span class="string">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class="line"><span class="comment">// 多次反向代理后会有多个ip值，第一个ip才是真实ip</span></span><br><span class="line"><span class="keyword">if</span> (ip.indexOf(<span class="string">&quot;,&quot;</span>) != -<span class="number">1</span>) &#123;</span><br><span class="line">ip = ip.split(<span class="string">&quot;,&quot;</span>)[<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (ip == <span class="keyword">null</span> || ip.length() == <span class="number">0</span> || <span class="string">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class="line">ip = request.getHeader(<span class="string">&quot;Proxy-Client-IP&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (ip == <span class="keyword">null</span> || ip.length() == <span class="number">0</span> || <span class="string">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class="line">ip = request.getHeader(<span class="string">&quot;WL-Proxy-Client-IP&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (ip == <span class="keyword">null</span> || ip.length() == <span class="number">0</span> || <span class="string">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class="line">ip = request.getHeader(<span class="string">&quot;HTTP_CLIENT_IP&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (ip == <span class="keyword">null</span> || ip.length() == <span class="number">0</span> || <span class="string">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class="line">ip = request.getHeader(<span class="string">&quot;HTTP_X_FORWARDED_FOR&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (ip == <span class="keyword">null</span> || ip.length() == <span class="number">0</span> || <span class="string">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class="line">ip = request.getHeader(<span class="string">&quot;X-Real-IP&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (ip == <span class="keyword">null</span> || ip.length() == <span class="number">0</span> || <span class="string">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class="line">ip = request.getRemoteAddr();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ip;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="comment">// class</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.nio.charset.Charset;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.Enumeration;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletInputStream;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequestWrapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.fileupload.servlet.ServletFileUpload;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.io.IOUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ContentCachingRequestWrapper</span> <span class="keyword">extends</span> <span class="title">HttpServletRequestWrapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">byte</span>[] body;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> Map&lt;String, String[]&gt; parameterMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> BufferedReader reader;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> ServletInputStream inputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> StringBuffer queryStringSb;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">boolean</span> hasFile;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">boolean</span> isRewriteBody = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">ContentCachingRequestWrapper</span><span class="params">(HttpServletRequest request)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"><span class="keyword">super</span>(request);</span><br><span class="line">parameterMap = <span class="keyword">new</span> HashMap&lt;String, String[]&gt;(request.getParameterMap());</span><br><span class="line">queryStringSb = <span class="keyword">new</span> StringBuffer();</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">super</span>.getQueryString() != <span class="keyword">null</span>) queryStringSb.append(<span class="keyword">super</span>.getQueryString());</span><br><span class="line">loadBody(request);</span><br><span class="line">hasFile = ServletFileUpload.isMultipartContent(<span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">put</span><span class="params">(String key, String value)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (!parameterMap.containsKey(key)) &#123;</span><br><span class="line">parameterMap.put(key, <span class="keyword">new</span> String[] &#123; value &#125;);</span><br><span class="line"><span class="keyword">if</span> (queryStringSb.length() &gt; <span class="number">0</span>)</span><br><span class="line">queryStringSb.append(<span class="string">&quot;&amp;&quot;</span>);</span><br><span class="line">queryStringSb.append(key).append(<span class="string">&quot;=&quot;</span>).append(value);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Map&lt;String, String&gt; <span class="title">getParameterMapEx</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Map&lt;String, String&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"><span class="keyword">for</span> (String key : parameterMap.keySet()) &#123;</span><br><span class="line">map.put(key, <span class="keyword">this</span>.getParameter(key));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> map;</span><br><span class="line">&#125;<span class="comment">//method getParameterMapEx</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">rewriteBody</span><span class="params">(String input)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.body = input.getBytes(Charset.defaultCharset());</span><br><span class="line"><span class="keyword">this</span>.inputStream = <span class="keyword">new</span> RequestCachingInputStream(<span class="keyword">this</span>.body);</span><br><span class="line"><span class="keyword">this</span>.isRewriteBody = <span class="keyword">true</span>;</span><br><span class="line">&#125;<span class="comment">//method rewriteBody</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isRewiteBody</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>.isRewriteBody;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">loadBody</span><span class="params">(HttpServletRequest request)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.body = IOUtils.toByteArray(request.getInputStream());</span><br><span class="line"><span class="keyword">this</span>.inputStream = <span class="keyword">new</span> RequestCachingInputStream(body);</span><br><span class="line">&#125;<span class="comment">//method loadBody</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">byte</span>[] getBody() &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>.body;</span><br><span class="line">&#125;<span class="comment">//method getBody</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getBodySize</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>.body.length;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getContentType</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">super</span>.getContentType();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hasFile</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>.hasFile;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getQueryString</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>.queryStringSb.toString();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Map&lt;String, String[]&gt; getParameterMap() &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>.parameterMap;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getParameter</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">String[] values = <span class="keyword">this</span>.parameterMap.get(name);</span><br><span class="line"><span class="keyword">return</span> values != <span class="keyword">null</span> ? values[<span class="number">0</span>] : <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> String[] getParameterValues(String name) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>.parameterMap.get(name);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Enumeration&lt;String&gt; <span class="title">getParameterNames</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> Collections.enumeration(parameterMap.keySet());</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//必须重写 不然原生request getInputStream 只能调用一次</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ServletInputStream <span class="title">getInputStream</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>.inputStream != <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>.inputStream;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">super</span>.getInputStream();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> BufferedReader <span class="title">getReader</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (reader == <span class="keyword">null</span>) &#123;</span><br><span class="line">reader = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(inputStream, getCharacterEncoding()));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> reader;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getQueryBody</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"><span class="keyword">return</span> IOUtils.toString(getBody(), getCharacterEncoding());</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="comment">//class </span></span><br></pre></td></tr></table></figure><p>一开始只覆盖了 getParameterMap() 以为就能让 Spring 读取到 Paramter</p><p>结果 Spring 是通过 getParameterNames() 获得 key 再去匹配 Controller 的参数名</p><p>反正 ServletRequest 中的方法最好全部都覆盖掉</p><p>到这里只是支持 body 中的数据放到  param  中</p><p>如果Controller 用 bean 去接收参数 还是有可能获取不到</p><p>用自定义 参数解析器去接收</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.core.MethodParameter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.HttpHeaders;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.MediaType;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.support.WebDataBinderFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.context.request.NativeWebRequest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.method.support.HandlerMethodArgumentResolver;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.method.support.ModelAndViewContainer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSONObject;</span><br><span class="line"><span class="keyword">import</span> org.lqs1848.framework.web.wrapper.ContentCachingRequestWrapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DiyHandlerResolver</span> <span class="keyword">implements</span> <span class="title">HandlerMethodArgumentResolver</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">supportsParameter</span><span class="params">(MethodParameter parameter)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//是项目中的 JavaBean 才进行注入</span></span><br><span class="line"><span class="keyword">return</span> parameter.getParameterType().getPackageName().startsWith(<span class="string">&quot;org.lqs1848&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">resolveArgument</span><span class="params">(MethodParameter parameter, ModelAndViewContainer container,</span></span></span><br><span class="line"><span class="function"><span class="params">NativeWebRequest nativeWebRequest, WebDataBinderFactory factory)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">ContentCachingRequestWrapper request = nativeWebRequest.getNativeRequest(ContentCachingRequestWrapper.class);</span><br><span class="line"></span><br><span class="line">String contentType = request.getHeader(HttpHeaders.CONTENT_TYPE);</span><br><span class="line"><span class="keyword">if</span>(request.getBodySize() &gt; <span class="number">0</span> &amp;&amp; (request.isRewiteBody() || contentType == <span class="keyword">null</span> || contentType.startsWith(MediaType.APPLICATION_JSON_VALUE))) &#123;</span><br><span class="line">String queryBody = request.getQueryBody();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment">//支持多个对象嵌套</span></span><br><span class="line">                <span class="comment">/*</span></span><br><span class="line"><span class="comment">                controller(JavaBeanA a,JavaBeanB b)</span></span><br><span class="line"><span class="comment">                json&#123;</span></span><br><span class="line"><span class="comment">                a:&#123;</span></span><br><span class="line"><span class="comment">                xxx:xxx</span></span><br><span class="line"><span class="comment">                &#125;,</span></span><br><span class="line"><span class="comment">                b:&#123;...&#125;</span></span><br><span class="line"><span class="comment">                &#125;</span></span><br><span class="line"><span class="comment">                */</span></span><br><span class="line"><span class="keyword">if</span>(queryBody.indexOf(<span class="string">&quot;\&quot;&quot;</span> + parameter.getParameterName() + <span class="string">&quot;\&quot;&quot;</span>) != -<span class="number">1</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> JSONObject.parseObject(queryBody).getObject(parameter.getParameterName(), parameter.getParameterType());</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">//单个对象</span></span><br><span class="line"><span class="keyword">return</span> JSONObject.parseObject(queryBody,parameter.getParameterType());</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">log.error(<span class="string">&quot;参数注入增强-JSON转换失败&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="comment">//if</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;<span class="comment">//method</span></span><br><span class="line">&#125;<span class="comment">//class</span></span><br></pre></td></tr></table></figure><h1 id="三、总结"><a href="#三、总结" class="headerlink" title="三、总结"></a>三、总结</h1><p>懒得重复写了 搬一下自己写在项目的中的说明</p><blockquote><p>Controller 中可以以任何方式接收前端传递的 QueryBody 参数<br>封装了 ContentType JSON 自动转换为 x-www 和 fromData 的逻辑</p><p>比如<br>public R Test(Entity e)//不需要写 @RequestBody 注解<br>public R Test(String param1,String param2)//放在 body 的可以自动拆成参数名 不需要额外定义一个 vo<br>public R Test(Entity1 e1,Entity2 e2)//可以同时接收多个数据<br>前端需要传递<br>{<br>    e1:{<br>        …<br>    },<br>    e2:{<br>        …<br>    }<br>}</p><p>甚至前端用 get请求 但是发送了x-www 的content-type 并把数据放在 requestBody 中 并以 xxx1=xxx1&amp;xxx2=xx2 的形式传输<br>后台使用<br>JavaBean 也可以接收</p></blockquote><p>写完代码</p><p>突然有点迷惑 为什么 Spring 没有去实现类似的逻辑呢</p>]]></content>
    
    
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;</summary>
    
    
    
    <category term="Java" scheme="https://blog.lqs1848.top/categories/Java/"/>
    
    <category term="Spring" scheme="https://blog.lqs1848.top/categories/Java/Spring/"/>
    
    
    <category term="Java" scheme="https://blog.lqs1848.top/tags/Java/"/>
    
    <category term="Spring" scheme="https://blog.lqs1848.top/tags/Spring/"/>
    
    <category term="RequestBody" scheme="https://blog.lqs1848.top/tags/RequestBody/"/>
    
    <category term="RequestParam" scheme="https://blog.lqs1848.top/tags/RequestParam/"/>
    
  </entry>
  
  <entry>
    <title>Hystrix上下文传递</title>
    <link href="https://blog.lqs1848.top/2021/10/12/2021-10-12%20Hystrix%E4%B8%8A%E4%B8%8B%E6%96%87%E4%BC%A0%E9%80%92/"/>
    <id>https://blog.lqs1848.top/2021/10/12/2021-10-12%20Hystrix%E4%B8%8A%E4%B8%8B%E6%96%87%E4%BC%A0%E9%80%92/</id>
    <published>2021-10-11T16:00:00.000Z</published>
    <updated>2021-10-12T10:32:05.268Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h1 id="一、背景"><a href="#一、背景" class="headerlink" title="一、背景"></a>一、背景</h1><p>开发中使用 ThreadLocal 来存放日志追踪码和分表等信息，但由于 Hystrix 使用了线程池 导致了 ThreadLocal 数据丢失。</p><h1 id="二、尝试解决"><a href="#二、尝试解决" class="headerlink" title="二、尝试解决"></a>二、尝试解决</h1><h2 id="TTL"><a href="#TTL" class="headerlink" title="TTL"></a>TTL</h2><p>TransmittableThreadLocal </p><h2 id="HystrixRequestContext"><a href="#HystrixRequestContext" class="headerlink" title="HystrixRequestContext"></a>HystrixRequestContext</h2><p>忘了啥问题了 好像是存储时会出错 如果要使用得替换很多东西</p><h2 id="HystrixConcurrencyStrategy-amp-HystrixCommandExecutionHook"><a href="#HystrixConcurrencyStrategy-amp-HystrixCommandExecutionHook" class="headerlink" title="HystrixConcurrencyStrategy&amp;HystrixCommandExecutionHook"></a>HystrixConcurrencyStrategy&amp;HystrixCommandExecutionHook</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">HystrixPlugins.getInstance().registerConcurrencyStrategy(<span class="keyword">new</span> RequestContextHystrixConcurrencyStrategy());</span><br><span class="line"></span><br><span class="line">报错:Caused by: java.lang.IllegalStateException: Another strategy was already registered.</span><br></pre></td></tr></table></figure><h2 id="包名类名覆盖"><a href="#包名类名覆盖" class="headerlink" title="包名类名覆盖"></a>包名类名覆盖</h2><p>实现一个 HystrixCommand</p><p>覆盖 feign.hystrix.HystrixInvocationHandler 使用自己实现的 HystrixCommand 进行回调</p><p>本地测试通过线上失败</p><p>原因是 Hystrix 上下文传递的逻辑 我提取到一个单独的Maven项目中</p><p>发布到线上变成 jar包时 所有引用 第三方jar和自己的公用 jar 处于 项目中的 lib 目录</p><p>lib 目录中的加载时 由于依赖 Hystrix 官方包 先加载了 官方包 重复加载的class会被忽略，只有第一个生效</p><p>导致线上始终无法生效</p><p>本地 自己的公用包 应该是加载到 class 目录下 </p><p>class目录优先级更高 所以覆盖成功 </p><p>Java的包名覆盖机制受太多外部条件影响 最终还是放弃了</p><blockquote><ul><li>同一个ClassLoader实例加载的类不能重复（不同的class文件，同样的类名也是重复），如果强行用同一个ClassLoader实例加载同一个类，则会报错<code>attempted duplicate class definition for &#123;your class&#125;</code></li><li><code>java -classpath(-cp)</code>加载配置jar包（classes）时，会按照书写定义顺序加载class，之后重复加载的class会被忽略，只有第一个生效</li><li>Idea中可以通过在Project Settings -&gt; Modules -&gt; Dependencies中通过上下箭头调整jar加载顺序，其实也就是调整<code>-classpath(-cp)</code>后的jar包书写顺序</li><li>Tomcat下的jar包貌似不同版本加载策略不同</li><li>spring-boot是自定义的jar包加载策略，顺序未确认，猜测默认是按字母排序</li></ul></blockquote><h2 id="5-SPI"><a href="#5-SPI" class="headerlink" title="5.SPI"></a>5.SPI</h2><p>扩展 HystrixConcurrencyStrategy 后不用 registerConcurrencyStrategy 注册</p><p>而是在工程的classpath下引入hystrix-plugins.properties配置文件</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">hystrix.plugin.HystrixConcurrencyStrategy.implementation</span>=<span class="string">com.xx.xx.xx.xxxStrategy</span></span><br></pre></td></tr></table></figure><h1 id="三、总结"><a href="#三、总结" class="headerlink" title="三、总结"></a>三、总结</h1><p>前后用了N种方式 最终还是用 SPI 的方式实现了想要的效果…</p><p><strong>具体实现参照之前的 <a href="/2021/03/31/2021-03-31%E5%88%86%E5%B8%83%E5%BC%8F%20%E6%97%A5%E5%BF%97%E8%BF%BD%E8%B8%AA%20%E9%93%BE%E8%B7%AF%E8%BF%BD%E8%B8%AA/">日志链路追踪</a></strong></p>]]></content>
    
    
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;</summary>
    
    
    
    <category term="Java" scheme="https://blog.lqs1848.top/categories/Java/"/>
    
    <category term="SpringCloud" scheme="https://blog.lqs1848.top/categories/Java/SpringCloud/"/>
    
    
    <category term="Java" scheme="https://blog.lqs1848.top/tags/Java/"/>
    
    <category term="SpringCloud" scheme="https://blog.lqs1848.top/tags/SpringCloud/"/>
    
    <category term="Hystrix" scheme="https://blog.lqs1848.top/tags/Hystrix/"/>
    
  </entry>
  
  <entry>
    <title>SpringMVC 路由约束</title>
    <link href="https://blog.lqs1848.top/2021/08/26/2021-08-26%20SpringMVC%20%E8%B7%AF%E7%94%B1%E7%BA%A6%E6%9D%9F/"/>
    <id>https://blog.lqs1848.top/2021/08/26/2021-08-26%20SpringMVC%20%E8%B7%AF%E7%94%B1%E7%BA%A6%E6%9D%9F/</id>
    <published>2021-08-25T16:00:00.000Z</published>
    <updated>2021-08-31T09:15:56.534Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h1 id="NET-Core-中的概念"><a href="#NET-Core-中的概念" class="headerlink" title=".NET Core 中的概念"></a>.NET Core 中的概念</h1><p>无聊逛论坛 突然看到了个 路由约束</p><p>好像没听过 搜索了一下 原来是 .NET Core 中的概念 <a href="https://docs.microsoft.com/zh-cn/aspnet/core/fundamentals/routing?view=aspnetcore-5.0#route-constraint-reference">文档</a></p><p>[GET] /api/posts/{id}<br>[GET] /api/posts/{name}</p><p>这样两个地址 可以通过 路由约束 分别映射到不同的地址</p><blockquote><p>.NET Core内置的路由约束</p><p>检查数据类型的约束<br>检查数据的值/长度/范围的约束<br>正则表达式约束</p><h3 id="检查数据类型的约束"><a href="#检查数据类型的约束" class="headerlink" title="检查数据类型的约束"></a>检查数据类型的约束</h3><table><thead><tr><th>约束</th><th>行内</th><th>Constraint类</th><th>说明</th></tr></thead><tbody><tr><td>int</td><td><code>&#123;id:int&#125;</code></td><td><code>IntRouteConstraint</code></td><td>只允许int32整数</td></tr><tr><td>alpha</td><td><code>&#123;id:alpha&#125;</code></td><td><code>AlphaRouteConstraint</code></td><td>只能包含大小写字母</td></tr><tr><td>bool</td><td><code>&#123;id:bool&#125;</code></td><td><code>BoolRouteConstraint</code></td><td>只允许布尔类型</td></tr><tr><td>datetime</td><td><code>&#123;id:datetime&#125;</code></td><td><code>DateTimeRouteConstraint</code></td><td>只允许日期格式</td></tr><tr><td>decimal</td><td><code>&#123;id:decimal&#125;</code></td><td><code>DecimalRouteConstraint</code></td><td>只允许decimal类型</td></tr><tr><td>double</td><td><code>&#123;id:double&#125;</code></td><td><code>DoubleRouteConstraint</code></td><td>只允许double类型</td></tr><tr><td>float</td><td><code>&#123;id:float&#125;</code></td><td><code>FloatRouteConstraint</code></td><td>只允许float类型</td></tr><tr><td>guid</td><td><code>&#123;id:guid&#125;</code></td><td><code>GuidRouteConstraint</code></td><td>只允许guid类型</td></tr></tbody></table><h3 id="检查数据的值-长度-范围的约束"><a href="#检查数据的值-长度-范围的约束" class="headerlink" title="检查数据的值/长度/范围的约束"></a>检查数据的值/长度/范围的约束</h3><table><thead><tr><th>约束</th><th>行内</th><th>Constraint类</th><th>说明</th></tr></thead><tbody><tr><td>length(length)</td><td><code>&#123;id:length(12)&#125;</code></td><td><code>LengthRouteConstraint</code></td><td>字符串长度限制</td></tr><tr><td>maxlength(value)</td><td><code>&#123;id:maxlength(8)&#125;</code></td><td><code>MaxLengthRouteConstraint</code></td><td>字符串最大长度限制</td></tr><tr><td>minlength(value)</td><td><code>&#123;id:minlength(4)&#125;</code></td><td><code>MinLengthRouteConstraint</code></td><td>字符串最小长度限制</td></tr><tr><td>range(min,max)</td><td><code>&#123;id:range(18,120)&#125;</code></td><td><code>RangeRouteConstraint</code></td><td>数值范围限制</td></tr><tr><td>min(value)</td><td><code>&#123;id:min(18)&#125;</code></td><td><code>MinRouteConstraint</code></td><td>最小数值限制</td></tr><tr><td>max(value)</td><td><code>&#123;id:max(120)&#125;</code></td><td><code>MaxRouteConstraint</code></td><td>最大数值限制</td></tr></tbody></table><h3 id="正则表达式约束"><a href="#正则表达式约束" class="headerlink" title="正则表达式约束"></a>正则表达式约束</h3><table><thead><tr><th>约束</th><th>行内</th><th>Constraint类</th><th>说明</th></tr></thead><tbody><tr><td>regex(expression)</td><td><code>&#123;ssn:regex(^\d&#123;&#123;3&#125;&#125;-\d&#123;&#123;2&#125;&#125;-\d&#123;&#123;4&#125;&#125;$)&#125;/</code></td><td><code>RegexRouteConstraint</code></td><td>正则表达式约束</td></tr></tbody></table></blockquote><h1 id="Java-SpringMVC-对应实现"><a href="#Java-SpringMVC-对应实现" class="headerlink" title="Java SpringMVC 对应实现"></a>Java SpringMVC 对应实现</h1><p><a href="https://docs.spring.io/spring-framework/docs/current/reference/html/web.html#mvc-ann-requestmapping-uri-templates">文档</a> </p><h2 id="URI-Patterns"><a href="#URI-Patterns" class="headerlink" title="URI Patterns"></a>URI Patterns</h2><blockquote><p>一些示例：</p><ul><li><code>&quot;/resources/ima?e.png&quot;</code> - match one character in a path 匹配路径段中的一个字符segment</li><li><code>&quot;/resources/*.png&quot;</code> - match zero or more characters in a path segment 匹配路径段中的零个或多个字符</li><li><code>&quot;/resources/**&quot;</code> - match multiple path segments 匹配多个路径段</li><li><code>&quot;/projects/&#123;project&#125;/versions&quot;</code> - match a path segment and capture it as a variable 匹配路径段并将其捕获为变量</li><li><code>&quot;/projects/&#123;project:[a-z]+&#125;/versions&quot;</code> - match and capture a variable with a regex 使用正则表达式匹配并捕获变量</li></ul></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/&#123;name:[a-z-]+&#125;-&#123;version:\\d\\.\\d\\.\\d&#125;&#123;ext:\\.[a-z]+&#125;&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handle</span><span class="params">(<span class="meta">@PathVariable</span> String name, <span class="meta">@PathVariable</span> String version, <span class="meta">@PathVariable</span> String ext)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;</summary>
    
    
    
    <category term="Java" scheme="https://blog.lqs1848.top/categories/Java/"/>
    
    <category term="SpringMVC" scheme="https://blog.lqs1848.top/categories/Java/SpringMVC/"/>
    
    
    <category term="Java" scheme="https://blog.lqs1848.top/tags/Java/"/>
    
    <category term="SpringMVC" scheme="https://blog.lqs1848.top/tags/SpringMVC/"/>
    
  </entry>
  
  <entry>
    <title>OpenCV OCR预处理</title>
    <link href="https://blog.lqs1848.top/2021/07/08/2021-07-08%20OpenCV%20OCR%E9%A2%84%E5%A4%84%E7%90%86/"/>
    <id>https://blog.lqs1848.top/2021/07/08/2021-07-08%20OpenCV%20OCR%E9%A2%84%E5%A4%84%E7%90%86/</id>
    <published>2021-07-07T16:00:00.000Z</published>
    <updated>2021-07-09T08:00:12.918Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h1 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h1><p><img src="/img/opencv/1.jpg"></p><p>需要识别出 标签中的 76046 58420</p><p>Tesseract 识别大图 速度特别慢</p><p>并且 Tesseract 本身也是默认你传递给它的图片是预处理过的</p><p>目标把图片处理成这样</p><p><img src="/img/opencv/r_111.jpg"></p><p><img src="/img/opencv/r_222.jpg"></p><p>旋转一下角度</p><p><img src="/img/opencv/r_111_jz.jpg"></p><p><img src="/img/opencv/r_222_jz.jpg"></p><h1 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.lqs1848.cv.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.bytedeco.javacpp.indexer.IntIndexer;</span><br><span class="line"><span class="keyword">import</span> org.bytedeco.javacpp.indexer.UByteRawIndexer;</span><br><span class="line"><span class="keyword">import</span> org.bytedeco.opencv.global.opencv_core;</span><br><span class="line"><span class="keyword">import</span> org.bytedeco.opencv.global.opencv_imgcodecs;</span><br><span class="line"><span class="keyword">import</span> org.bytedeco.opencv.global.opencv_imgproc;</span><br><span class="line"><span class="keyword">import</span> org.bytedeco.opencv.opencv_core.Mat;</span><br><span class="line"><span class="keyword">import</span> org.bytedeco.opencv.opencv_core.MatVector;</span><br><span class="line"><span class="keyword">import</span> org.bytedeco.opencv.opencv_core.Point;</span><br><span class="line"><span class="keyword">import</span> org.bytedeco.opencv.opencv_core.Rect;</span><br><span class="line"><span class="keyword">import</span> org.bytedeco.opencv.opencv_core.Scalar;</span><br><span class="line"><span class="keyword">import</span> org.bytedeco.opencv.opencv_core.Size;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OpenCV_LableCatch</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">//加载图片为灰度图</span></span><br><span class="line">Mat src = opencv_imgcodecs.imread(<span class="string">&quot;1.jpg&quot;</span>, opencv_imgcodecs.IMREAD_GRAYSCALE);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> x = src.cols(); <span class="comment">// 列</span></span><br><span class="line"><span class="keyword">int</span> y = src.rows(); <span class="comment">// 行</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (x != y) &#123; <span class="comment">// 非正方形的图 截取中心部分为正方形</span></span><br><span class="line"><span class="keyword">if</span> (x &lt; y) &#123;</span><br><span class="line"><span class="keyword">int</span> j = (y - x) / <span class="number">2</span>;</span><br><span class="line">src = src.apply(<span class="keyword">new</span> Rect(<span class="number">0</span>, j, x, x));</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">int</span> j = (x - y) / <span class="number">2</span>;</span><br><span class="line">src = src.apply(<span class="keyword">new</span> Rect(j, <span class="number">0</span>, y, y));</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="comment">// if</span></span><br><span class="line"></span><br><span class="line">Mat gray = <span class="keyword">new</span> Mat();</span><br><span class="line"><span class="comment">//把大小不确定的图片 转换为固定 3000 * 3000</span></span><br><span class="line">opencv_imgproc.resize(src, gray, <span class="keyword">new</span> Size(<span class="number">3000</span>, <span class="number">3000</span>));</span><br><span class="line"></span><br><span class="line">Mat target = <span class="keyword">new</span> Mat();</span><br><span class="line"><span class="comment">// 二值化</span></span><br><span class="line">opencv_imgproc.threshold(gray, target, <span class="number">0</span>, <span class="number">255</span>, opencv_imgproc.THRESH_OTSU);</span><br><span class="line">opencv_imgcodecs.imwrite(<span class="string">&quot;E:\\cv\\ezh.jpg&quot;</span>, target);</span><br><span class="line"></span><br><span class="line"><span class="comment">// new Scalar(255) 初始matrix的数值 不定义每次腐蚀膨胀的结果都会不一样 坑爹</span></span><br><span class="line">Mat kernel = <span class="keyword">new</span> Mat(<span class="keyword">new</span> Size(<span class="number">20</span>, <span class="number">20</span>), opencv_core.CV_8UC1, <span class="keyword">new</span> Scalar(<span class="number">255</span>));</span><br><span class="line"><span class="comment">// 腐蚀膨胀  修改迭代次数 和 kernel 的 size 保证数字有被处理成可识别的轮廓</span></span><br><span class="line">opencv_imgproc.morphologyEx(target, src, opencv_imgproc.MORPH_OPEN, kernel, <span class="keyword">new</span> Point(-<span class="number">1</span>, -<span class="number">1</span>), <span class="number">2</span>,</span><br><span class="line">opencv_imgproc.MORPH_RECT, opencv_imgproc.morphologyDefaultBorderValue());</span><br><span class="line">opencv_imgcodecs.imwrite(<span class="string">&quot;E:\\cv\\fspz.jpg&quot;</span>, src);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 反色</span></span><br><span class="line">opencv_core.bitwise_not(src, src);</span><br><span class="line">opencv_imgcodecs.imwrite(<span class="string">&quot;E:\\cv\\fs.jpg&quot;</span>, src);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 存放轮廓</span></span><br><span class="line">MatVector contours = <span class="keyword">new</span> MatVector();</span><br><span class="line">Mat hierarchy = <span class="keyword">new</span> Mat();</span><br><span class="line"><span class="comment">// 查找轮廓</span></span><br><span class="line">opencv_imgproc.findContours(src, contours, hierarchy, opencv_imgproc.RETR_TREE,</span><br><span class="line">opencv_imgproc.CHAIN_APPROX_NONE);</span><br><span class="line"></span><br><span class="line">Mat contours_img = <span class="keyword">new</span> Mat(src.size(), opencv_core.CV_8U, <span class="keyword">new</span> Scalar(<span class="number">255</span>));</span><br><span class="line">List&lt;Rect&gt; rects = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">IntIndexer hie = hierarchy.createIndexer();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; contours.size(); i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (hie.get(<span class="number">0</span>, i, <span class="number">2</span>) == -<span class="number">1</span>) &#123;</span><br><span class="line">Mat contour = contours.get(i);</span><br><span class="line"><span class="keyword">double</span> area = opencv_imgproc.contourArea(contour);</span><br><span class="line"><span class="keyword">double</span> mins = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">if</span> (area &gt; mins) &#123;</span><br><span class="line">Rect rect = opencv_imgproc.boundingRect(contour);</span><br><span class="line">rects.add(rect);</span><br><span class="line">opencv_imgproc.drawContours(contours_img, contours, i, <span class="keyword">new</span> Scalar(<span class="number">0</span>), -<span class="number">1</span>, opencv_imgproc.LINE_8,</span><br><span class="line">hierarchy, Integer.MAX_VALUE, <span class="keyword">new</span> Point());</span><br><span class="line"><span class="comment">//opencv_imgcodecs.imwrite(&quot;E:\\cv\\x_&quot; + i + &quot;.jpg&quot;, target.apply(rect));</span></span><br><span class="line">&#125; <span class="comment">// if</span></span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="comment">// for</span></span><br><span class="line"><span class="comment">// opencv_imgcodecs.imwrite(&quot;E:\\cv\\x_.jpg&quot;, contours_img);</span></span><br><span class="line"></span><br><span class="line">kernel = <span class="keyword">new</span> Mat(<span class="keyword">new</span> Size(<span class="number">7</span>, <span class="number">7</span>), opencv_core.CV_8UC1, <span class="keyword">new</span> Scalar(<span class="number">255</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> s1_id = <span class="number">0</span>, s2_id = <span class="number">0</span>, s1_jump = <span class="number">0</span>, s2_jump = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; rects.size(); i++) &#123;</span><br><span class="line">Rect rect = rects.get(i);</span><br><span class="line">Mat roi = target.apply(rect);</span><br><span class="line"><span class="keyword">if</span> (roi.rows() &lt;= roi.cols())</span><br><span class="line">opencv_imgproc.resize(roi, roi, <span class="keyword">new</span> Size(<span class="number">300</span>, <span class="number">100</span>), <span class="number">0</span>, <span class="number">0</span>, opencv_imgproc.INTER_NEAREST);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">opencv_imgproc.resize(roi, roi, <span class="keyword">new</span> Size(<span class="number">100</span>, <span class="number">300</span>), <span class="number">0</span>, <span class="number">0</span>, opencv_imgproc.INTER_NEAREST);</span><br><span class="line"></span><br><span class="line">opencv_imgproc.morphologyEx(roi, roi, opencv_imgproc.MORPH_GRADIENT, kernel, <span class="keyword">new</span> Point(-<span class="number">1</span>, -<span class="number">1</span>), <span class="number">1</span>,</span><br><span class="line">opencv_imgproc.MORPH_RECT, opencv_imgproc.morphologyDefaultBorderValue());</span><br><span class="line"></span><br><span class="line"><span class="comment">//opencv_imgproc.medianBlur(roi, roi, 7);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> t_jump = stringJudge(roi);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 选出跳变次数最多的两个轮廓</span></span><br><span class="line"><span class="comment">//if (t_jump &lt; 20) &#123;</span></span><br><span class="line"><span class="keyword">if</span> (t_jump &gt;= s1_jump) &#123;</span><br><span class="line">s2_id = s1_id;</span><br><span class="line">s2_jump = s1_jump;</span><br><span class="line">s1_id = i;</span><br><span class="line">s1_jump = t_jump;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (t_jump &lt; s1_jump &amp;&amp; t_jump &gt;= s2_jump) &#123;</span><br><span class="line">s2_id = i;</span><br><span class="line">s2_jump = t_jump;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//&#125; // if</span></span><br><span class="line">&#125; <span class="comment">// for</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 结果排序，坐标最左为第一串数字</span></span><br><span class="line"><span class="keyword">if</span> (rects.get(s1_id).width() &lt; rects.get(s1_id).height()</span><br><span class="line">&amp;&amp; rects.get(s1_id).tl().y() &lt; rects.get(s2_id).tl().y()) &#123;</span><br><span class="line">s1_id = s1_id + s2_id;</span><br><span class="line">s2_id = s1_id - s2_id;</span><br><span class="line">s1_id = s1_id - s2_id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Rect ns1 = rects.get(s1_id);</span><br><span class="line"><span class="keyword">if</span> (isCentre(target, ns1))</span><br><span class="line">ns1 = <span class="keyword">new</span> Rect(ns1.x() - <span class="number">10</span>, ns1.y() - <span class="number">10</span>, ns1.width() + <span class="number">20</span>, ns1.height() + <span class="number">20</span>);</span><br><span class="line">Rect ns2 = rects.get(s2_id);</span><br><span class="line"><span class="keyword">if</span> (isCentre(target, ns2))</span><br><span class="line">ns2 = <span class="keyword">new</span> Rect(ns2.x() - <span class="number">10</span>, ns2.y() - <span class="number">10</span>, ns2.width() + <span class="number">20</span>, ns2.height() + <span class="number">20</span>);</span><br><span class="line"></span><br><span class="line">Mat dst1 = gray.apply(ns1);</span><br><span class="line">Mat dst2 = gray.apply(ns2);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (dst1.cols() &lt; dst1.rows()) &#123;</span><br><span class="line">opencv_core.transpose(dst1, dst1);</span><br><span class="line">opencv_core.flip(dst1, dst1, <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (dst2.cols() &lt; dst2.rows()) &#123;</span><br><span class="line">opencv_core.transpose(dst2, dst2);</span><br><span class="line">opencv_core.flip(dst2, dst2, <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">opencv_imgproc.resize(dst1, dst1, <span class="keyword">new</span> Size(<span class="number">300</span>, <span class="number">100</span>), <span class="number">0</span>, <span class="number">0</span>, opencv_imgproc.INTER_NEAREST);</span><br><span class="line">opencv_imgcodecs.imwrite(<span class="string">&quot;E:\\cv\\r_111.jpg&quot;</span>, dst1);</span><br><span class="line">dst1 = OpenCVUtils.adjustAngle(dst1);</span><br><span class="line">opencv_imgcodecs.imwrite(<span class="string">&quot;E:\\cv\\r_111_jz.jpg&quot;</span>, dst1);</span><br><span class="line">opencv_imgproc.resize(dst2, dst2, <span class="keyword">new</span> Size(<span class="number">300</span>, <span class="number">100</span>), <span class="number">0</span>, <span class="number">0</span>, opencv_imgproc.INTER_NEAREST);</span><br><span class="line">opencv_imgcodecs.imwrite(<span class="string">&quot;E:\\cv\\r_222.jpg&quot;</span>, dst2);</span><br><span class="line">dst2 = OpenCVUtils.adjustAngle(dst2);</span><br><span class="line">opencv_imgcodecs.imwrite(<span class="string">&quot;E:\\cv\\r_222_jz.jpg&quot;</span>, dst2);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断轮廓 是否在中心范围</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isCentre</span><span class="params">(Mat mat, Rect rect)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> x = Math.abs((mat.cols() / <span class="number">2</span>) - (mat.cols() - rect.x()));</span><br><span class="line"><span class="keyword">int</span> y = Math.abs((mat.rows() / <span class="number">2</span>) - (mat.rows() - rect.y()));</span><br><span class="line"><span class="keyword">return</span> x &lt; mat.cols() / <span class="number">3</span> &amp;&amp; y &lt; mat.rows() / <span class="number">3</span>;</span><br><span class="line">&#125;<span class="comment">//method isCentre</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断区域是否为数字</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">stringJudge</span><span class="params">(Mat img)</span> </span>&#123;</span><br><span class="line">UByteRawIndexer intIndexer = img.createIndexer();</span><br><span class="line"><span class="keyword">int</span> rows = img.rows();</span><br><span class="line"><span class="keyword">int</span> cols = img.cols();</span><br><span class="line"><span class="keyword">int</span> jump = <span class="number">0</span>;</span><br><span class="line"><span class="comment">// 数字横着放，优先遍历列</span></span><br><span class="line"><span class="keyword">if</span> (rows &lt; cols) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> row = <span class="number">0</span>; row &lt; rows; row++) &#123;</span><br><span class="line"><span class="keyword">boolean</span> wb_flag = <span class="keyword">false</span>;<span class="comment">// 白色到黑色</span></span><br><span class="line"><span class="keyword">boolean</span> bw_flag = <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">int</span> t_jump = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> col = <span class="number">0</span>; col &lt; cols; col++) &#123;</span><br><span class="line"><span class="keyword">if</span> (col + <span class="number">1</span> &lt; cols) &#123;</span><br><span class="line"><span class="keyword">int</span> now_point = intIndexer.get(row, col);</span><br><span class="line"><span class="keyword">int</span> next_point = intIndexer.get(row, col + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span> (now_point == <span class="number">255</span> &amp;&amp; next_point == <span class="number">0</span>) &#123;</span><br><span class="line">wb_flag = <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (now_point == <span class="number">0</span> &amp;&amp; next_point == <span class="number">255</span> &amp;&amp; wb_flag) &#123;</span><br><span class="line">bw_flag = <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (wb_flag &amp;&amp; bw_flag) &#123;</span><br><span class="line">++t_jump;</span><br><span class="line">wb_flag = <span class="keyword">false</span>;</span><br><span class="line">bw_flag = <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (t_jump &gt; jump)</span><br><span class="line">jump = t_jump;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> col = <span class="number">0</span>; col &lt; cols; col++) &#123;</span><br><span class="line"><span class="keyword">boolean</span> wb_flag = <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">boolean</span> bw_flag = <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">int</span> t_jump = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> row = <span class="number">0</span>; row &lt; rows; row++) &#123;</span><br><span class="line"><span class="keyword">if</span> (row + <span class="number">1</span> &lt; rows) &#123;</span><br><span class="line"><span class="keyword">int</span> now_point = intIndexer.get(row, col);</span><br><span class="line"><span class="keyword">int</span> next_point = intIndexer.get(row + <span class="number">1</span>, col);</span><br><span class="line"><span class="keyword">if</span> (now_point == <span class="number">255</span> &amp;&amp; next_point == <span class="number">0</span>) &#123;</span><br><span class="line">wb_flag = <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (now_point == <span class="number">0</span> &amp;&amp; next_point == <span class="number">255</span> &amp;&amp; wb_flag) &#123;</span><br><span class="line">bw_flag = <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (wb_flag &amp;&amp; bw_flag) &#123;</span><br><span class="line">++t_jump;</span><br><span class="line">wb_flag = <span class="keyword">false</span>;</span><br><span class="line">bw_flag = <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (t_jump &gt; jump)</span><br><span class="line">jump = t_jump;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> jump;</span><br><span class="line">&#125;<span class="comment">//method </span></span><br><span class="line"></span><br><span class="line">&#125;<span class="comment">//class</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.lqs1848.cv.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.bytedeco.opencv.global.opencv_core;</span><br><span class="line"><span class="keyword">import</span> org.bytedeco.opencv.global.opencv_imgcodecs;</span><br><span class="line"><span class="keyword">import</span> org.bytedeco.opencv.global.opencv_imgproc;</span><br><span class="line"><span class="keyword">import</span> org.bytedeco.opencv.opencv_core.Mat;</span><br><span class="line"><span class="keyword">import</span> org.bytedeco.opencv.opencv_core.MatVector;</span><br><span class="line"><span class="keyword">import</span> org.bytedeco.opencv.opencv_core.Point;</span><br><span class="line"><span class="keyword">import</span> org.bytedeco.opencv.opencv_core.Point2f;</span><br><span class="line"><span class="keyword">import</span> org.bytedeco.opencv.opencv_core.Rect;</span><br><span class="line"><span class="keyword">import</span> org.bytedeco.opencv.opencv_core.RotatedRect;</span><br><span class="line"><span class="keyword">import</span> org.bytedeco.opencv.opencv_core.Scalar;</span><br><span class="line"><span class="keyword">import</span> org.bytedeco.opencv.opencv_core.Size;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OpenCVUtils</span> </span>&#123; </span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 矩形 矫正角度</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 非直线矫正！！！！</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> gray</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Mat <span class="title">adjustAngle</span><span class="params">(Mat gray)</span></span>&#123;</span><br><span class="line"><span class="comment">//Mat gray = opencv_imgcodecs.imread(&quot;E:\\test\\1.jpg&quot;, opencv_imgcodecs.IMREAD_GRAYSCALE);</span></span><br><span class="line"></span><br><span class="line">Mat binImg = <span class="keyword">new</span> Mat();</span><br><span class="line"><span class="comment">// 二值化</span></span><br><span class="line">opencv_imgproc.threshold(gray, binImg, <span class="number">100</span>, <span class="number">255</span>, opencv_imgproc.CV_THRESH_BINARY_INV);</span><br><span class="line">opencv_imgcodecs.imwrite(<span class="string">&quot;E:\\test\\ezh222.jpg&quot;</span>, binImg);</span><br><span class="line"></span><br><span class="line">Mat target = <span class="keyword">new</span> Mat();</span><br><span class="line">opencv_imgproc.threshold(gray, target, <span class="number">0</span>, <span class="number">255</span>, opencv_imgproc.THRESH_OTSU);</span><br><span class="line"></span><br><span class="line"><span class="comment">// new Size(15, 15) 可以慢慢调整</span></span><br><span class="line">Mat kernel = <span class="keyword">new</span> Mat(<span class="keyword">new</span> Size(<span class="number">15</span>, <span class="number">15</span>), opencv_core.CV_8UC1, <span class="keyword">new</span> Scalar(<span class="number">255</span>));</span><br><span class="line">Mat morphologyDst = <span class="keyword">new</span> Mat();</span><br><span class="line">        <span class="comment">//1 迭代次数可以修改</span></span><br><span class="line">opencv_imgproc.morphologyEx(binImg, morphologyDst, opencv_imgproc.MORPH_GRADIENT, kernel, <span class="keyword">new</span> Point(-<span class="number">1</span>, -<span class="number">1</span>), <span class="number">1</span>,</span><br><span class="line">opencv_imgproc.MORPH_RECT, opencv_imgproc.morphologyDefaultBorderValue());</span><br><span class="line"><span class="comment">//查看腐蚀膨胀的信息  根据这个图调整 size  保证腐蚀膨胀出来的轮廓是数字连在一起的轮廓</span></span><br><span class="line">opencv_imgcodecs.imwrite(<span class="string">&quot;E:\\test\\morphology.jpg&quot;</span>, morphologyDst);</span><br><span class="line"></span><br><span class="line">Mat cannyDst = <span class="keyword">new</span> Mat();</span><br><span class="line">opencv_imgproc.Canny(morphologyDst, cannyDst, <span class="number">150</span>, <span class="number">200</span>);</span><br><span class="line"><span class="comment">//opencv_imgcodecs.imwrite(&quot;E:\\test\\canny.jpg&quot;, cannyDst);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取最大矩形</span></span><br><span class="line">RotatedRect rect = findMaxRect(cannyDst);</span><br><span class="line"><span class="comment">// 旋转矩形</span></span><br><span class="line">Mat CorrectImg = rotation(target , rect);</span><br><span class="line">opencv_imgcodecs.imwrite(<span class="string">&quot;E:\\test\\xz1.jpg&quot;</span>, CorrectImg);</span><br><span class="line"><span class="keyword">return</span> CorrectImg;</span><br><span class="line"><span class="comment">//尝试二值化看效果会不会更好</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">kernel = new Mat(new Size(0, 0), opencv_core.CV_8UC1, new Scalar(255));</span></span><br><span class="line"><span class="comment">opencv_imgproc.morphologyEx(CorrectImg, CorrectImg, opencv_imgproc.MORPH_GRADIENT, kernel, new Point(-1, -1), 1,</span></span><br><span class="line"><span class="comment">opencv_imgproc.MORPH_RECT, opencv_imgproc.morphologyDefaultBorderValue());</span></span><br><span class="line"><span class="comment">opencv_imgcodecs.imwrite(&quot;E:\\test\\xz2.jpg&quot;, CorrectImg);</span></span><br><span class="line"><span class="comment">return CorrectImg;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> RotatedRect <span class="title">findMaxRect</span><span class="params">(Mat cannyMat)</span> </span>&#123;</span><br><span class="line">MatVector contours = <span class="keyword">new</span> MatVector();</span><br><span class="line">Mat hierarchy = <span class="keyword">new</span> Mat();</span><br><span class="line"><span class="comment">// 寻找轮廓</span></span><br><span class="line">opencv_imgproc.findContours(cannyMat, contours, hierarchy, opencv_imgproc.RETR_EXTERNAL,</span><br><span class="line">opencv_imgproc.CHAIN_APPROX_NONE, <span class="keyword">new</span> Point(<span class="number">0</span>, <span class="number">0</span>));</span><br><span class="line"><span class="comment">// 找出匹配到的最大轮廓</span></span><br><span class="line"><span class="keyword">double</span> area = opencv_imgproc.boundingRect(contours.get(<span class="number">0</span>)).area();</span><br><span class="line"><span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line"><span class="comment">// 找出匹配到的最大轮廓</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; contours.size(); i++) &#123;</span><br><span class="line"><span class="keyword">double</span> tempArea = opencv_imgproc.boundingRect(contours.get(i)).area();</span><br><span class="line"><span class="keyword">if</span> (tempArea &gt; area) &#123;</span><br><span class="line">area = tempArea;</span><br><span class="line">index = i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">Mat matOfPoint2f = <span class="keyword">new</span> Mat(contours.get(index));</span><br><span class="line">RotatedRect rect = opencv_imgproc.minAreaRect(matOfPoint2f);</span><br><span class="line">Rect rect2 = opencv_imgproc.boundingRect(contours.get(index));</span><br><span class="line">opencv_imgcodecs.imwrite(<span class="string">&quot;E:\\test\\lk.jpg&quot;</span>, cannyMat.apply(rect2));</span><br><span class="line"><span class="keyword">return</span> rect;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Mat <span class="title">rotation</span><span class="params">(Mat cannyMat, RotatedRect rect)</span> </span>&#123;</span><br><span class="line"><span class="keyword">double</span> angle = rect.angle();</span><br><span class="line">Point2f center = rect.center();</span><br><span class="line">Mat CorrectImg = <span class="keyword">new</span> Mat(cannyMat.size(), cannyMat.type());</span><br><span class="line">cannyMat.copyTo(CorrectImg);</span><br><span class="line"><span class="comment">// 得到旋转矩阵算子</span></span><br><span class="line">Mat matrix = opencv_imgproc.getRotationMatrix2D(center, angle, <span class="number">0.8</span>);</span><br><span class="line">opencv_imgproc.warpAffine(CorrectImg, CorrectImg, matrix, CorrectImg.size(), <span class="number">1</span>, <span class="number">0</span>, <span class="keyword">new</span> Scalar(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>));</span><br><span class="line"><span class="keyword">return</span> CorrectImg;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;<span class="comment">// class</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/img/opencv/fspz.jpg" alt="fspz.jpg"></p><p>fspz.jpg 出来的图要一点点调整参数 保证 两块数字区域被正确的处理成可识别的轮廓</p><p>如果数字区域 二值化后不可见 那就是无法识别</p><p><img src="/img/opencv/xz_lk.jpg"></p><p>旋转要保证 数字的轮廓是正确的</p><h1 id="坑"><a href="#坑" class="headerlink" title="坑"></a>坑</h1><p>首先 bytedeco 的 API 资料是真的少</p><p>网上的资料使用的 查找轮廓 返回的轮廓信息都是 二维数组</p><p>bytedeco 给的是个 Mat ？？？</p><p>找了好久才发现原来是用 Indexer 读取 (<a href="https://github.com/bytedeco/javacv/issues/276">https://github.com/bytedeco/javacv/issues/276</a>)</p><p>腐蚀膨胀的 kernel 不传递 Scalar 每次腐蚀膨胀出来的结果都不一样…</p><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p>如果对焦不准的话 处理后效果还是很一般 关键还是要原图有对上焦</p><p>线上代码还是同事进行了多种处理</p><p>比如 同时本地请求 并发查询百度</p><p>并且本地做多种处理 </p><p>源码和上方代码有差异 以源码为准</p><p><em><strong><center><a href="https://github.com/lqs1848/java_workspace/tree/main/NumberOCR">源码</a></center></strong></em></p>]]></content>
    
    
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;</summary>
    
    
    
    <category term="Java" scheme="https://blog.lqs1848.top/categories/Java/"/>
    
    <category term="OpenCV" scheme="https://blog.lqs1848.top/categories/Java/OpenCV/"/>
    
    
    <category term="Java" scheme="https://blog.lqs1848.top/tags/Java/"/>
    
    <category term="OpenCV" scheme="https://blog.lqs1848.top/tags/OpenCV/"/>
    
    <category term="OCR" scheme="https://blog.lqs1848.top/tags/OCR/"/>
    
  </entry>
  
  <entry>
    <title>Transaction rolled back because it has been marked as rollback-only</title>
    <link href="https://blog.lqs1848.top/2021/06/10/2021-06-10%20Transaction%20rolled%20back%20because%20it%20has%20been%20marked%20as%20rollback-only/"/>
    <id>https://blog.lqs1848.top/2021/06/10/2021-06-10%20Transaction%20rolled%20back%20because%20it%20has%20been%20marked%20as%20rollback-only/</id>
    <published>2021-06-09T16:00:00.000Z</published>
    <updated>2021-07-08T08:12:04.794Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h1 id="Spring事务管理报错-Transaction-rolled-back-because-it-has-been-marked-as-rollback-only"><a href="#Spring事务管理报错-Transaction-rolled-back-because-it-has-been-marked-as-rollback-only" class="headerlink" title="Spring事务管理报错:Transaction rolled back because it has been marked as rollback-only"></a>Spring事务管理报错:Transaction rolled back because it has been marked as rollback-only</h1><h1 id="出错代码"><a href="#出错代码" class="headerlink" title="出错代码"></a>出错代码</h1><p>算是比较常见的错误了</p><p>很多解释说明都云里雾里的</p><p>其实比较简单</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ServiceA</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    ServiceB serviceB;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Transactional(rollbackFor = Exception.class)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testA</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">serviceB.testB();</span><br><span class="line">        &#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="comment">//method</span></span><br><span class="line">&#125;<span class="comment">//class</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ServiceB</span></span>&#123;</span><br><span class="line">    <span class="meta">@Transactional(rollbackFor = Exception.class)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testB</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">&quot;测试&quot;</span>);</span><br><span class="line">    &#125;<span class="comment">//method</span></span><br><span class="line">&#125;<span class="comment">//class</span></span><br></pre></td></tr></table></figure><p>上面这段代码就会报错 Transaction rolled back because it has been marked as rollback-only</p><p>原因是 Spring 事务管理是通过AOP切入的</p><p>ServiceA 的 testA 已经切入   </p><p>testB 又切入了一次 </p><p>@Transactional 的默认传播机制是 Propagation propagation() default Propagation.REQUIRED;</p><p>等于 testA 和 testB 使用的是同一个事务</p><p>testB 抛出异常时  Spring Aop 已经把事务标记为需要回滚</p><p>testA 使用同一个事务 try-catch 了 testB 的异常 所以 testA 没有异常 方法结束</p><p>testA 提交事务时 由于 testB已经被回滚 所以抛异常</p><h1 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h1><p>AOP.serviceA.testA    -&gt;    进入方法前    开启事务</p><p>↓</p><p>serviceA.testA    -&gt;    方法执行</p><p>↓</p><p>AOP.serivceB.testB    -&gt;    进入方法前    开启事务 读取到已有事务 REQUIRED 继承A的事务</p><p>↓</p><p>serviceB.testB    -&gt;    方法执行    出现异常</p><p>↓</p><p>AOP.serviceB.testB    -&gt;    方法执行后    检测到异常 回滚事务</p><p>↓</p><p>serviceA.testA    -&gt;    方法执行    testB的异常被 try-catch 方法正常结束</p><p>↓</p><p>AOP.serviceA.testA    -&gt;    方法执行后    没有异常 提交事务</p><p>其实就是 AOP 切入了两次 A 和 B 使用的是同一个事务</p><p>并且 抓取 B 的错误时 B 已经回滚了事务</p><h1 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h1><ol><li>指定 testB 的事务传播性为 REQUIRES_NEW (testB单独一个事务 回滚不影响 testA</li><li>把 testA 中的 try-catch 放到 testB 中 testB返回true false 给 testA 判断</li><li>从 controller 中分别调用 testA 和 testB</li></ol>]]></content>
    
    
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;</summary>
    
    
    
    <category term="java" scheme="https://blog.lqs1848.top/categories/java/"/>
    
    <category term="Spring" scheme="https://blog.lqs1848.top/categories/java/Spring/"/>
    
    
    <category term="事务" scheme="https://blog.lqs1848.top/tags/%E4%BA%8B%E5%8A%A1/"/>
    
    <category term="Transaction" scheme="https://blog.lqs1848.top/tags/Transaction/"/>
    
  </entry>
  
  <entry>
    <title>聚合支付原理</title>
    <link href="https://blog.lqs1848.top/2021/06/10/2021-06-10%20%E8%81%9A%E5%90%88%E6%94%AF%E4%BB%98%E5%8E%9F%E7%90%86/"/>
    <id>https://blog.lqs1848.top/2021/06/10/2021-06-10%20%E8%81%9A%E5%90%88%E6%94%AF%E4%BB%98%E5%8E%9F%E7%90%86/</id>
    <published>2021-06-09T16:00:00.000Z</published>
    <updated>2021-07-08T08:12:04.795Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><p><strong>公司要接入聚合支付(第四方支付) 封装成自用支付(第五方支付)</strong></p><p><strong>但聚合支付提供方没有给被扫接口</strong></p><p><strong>稍微了解下聚合支付封装 第三方支付 的逻辑</strong></p><h1 id="主扫-一个二维码-微信也能扫支付宝也能扫"><a href="#主扫-一个二维码-微信也能扫支付宝也能扫" class="headerlink" title="主扫(一个二维码 微信也能扫支付宝也能扫)"></a>主扫(一个二维码 微信也能扫支付宝也能扫)</h1><p>这个是最基础的 只是给每个商户单独 生成一个URL而已</p><p>基本就是给一个二维码 里面是URL地址 微信/支付宝 扫码 会直接跳转访问</p><p>被访问时通过 JavaScript 判断用户浏览器的 UserAgent </p><p>判断是通过微信还是支付宝或者其他支付软件</p><p>再调起对应支付软件的网页SDK支付</p><h1 id="被扫-用户打开-微信-支付宝-扫码机自动识别"><a href="#被扫-用户打开-微信-支付宝-扫码机自动识别" class="headerlink" title="被扫(用户打开 微信/支付宝 扫码机自动识别)"></a>被扫(用户打开 微信/支付宝 扫码机自动识别)</h1><p>硬件设备识别二维码获得二维码内容</p><p>根据二维码内容调用第三方支付</p><p><strong>微信：</strong></p><p><strong>用户付款码条形码规则：18位纯数字，以10、11、12、13、14、15开头</strong></p><p>对应调起接口 <a href="https://pay.weixin.qq.com/wiki/doc/api/wxpay_v2/product/chapter1_12.shtml">付款码支付</a></p><p><strong>支付宝：</strong></p><p><strong>25<del>30开头的长度为16</del>24位的数字，实际字符串长度以开发者获取的付款码长度为准</strong></p><p>调起对应接口 <a href="https://opendocs.alipay.com/open/01csp3">当面付</a></p>]]></content>
    
    
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;</summary>
    
    
    
    
    <category term="pay" scheme="https://blog.lqs1848.top/tags/pay/"/>
    
  </entry>
  
  <entry>
    <title>BBR为什么可以加速SS</title>
    <link href="https://blog.lqs1848.top/2021/06/07/2021-06-07%20%20BBR/"/>
    <id>https://blog.lqs1848.top/2021/06/07/2021-06-07%20%20BBR/</id>
    <published>2021-06-06T16:00:00.000Z</published>
    <updated>2021-07-08T08:12:04.794Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><p>之前自己部署SS的时候，搭建教程大部分都有 修改服务器TCP算法为 BBR 的步骤,，为什么要使用BBR? BBR为什么能加速SS? 一直没去研究</p><p>最近有点时间，查阅了一下资料</p><h1 id="TCP判断线路的理想速率"><a href="#TCP判断线路的理想速率" class="headerlink" title="TCP判断线路的理想速率"></a>TCP判断线路的理想速率</h1><p>服务器发送数据包，当然越快越好，最好一次性全发出去。但是，发得太快，就有可能丢包。带宽小、路由器过热、缓存溢出等许多因素都会导致丢包。线路不好的话，发得越快，丢得越多。</p><p>最理想的状态是，在线路允许的情况下，达到最高速率。但是我们怎么知道，对方线路的理想速率是多少呢？答案就是慢慢试。</p><p>TCP 协议为了做到效率与可靠性的统一，设计了一个慢启动（slow start）机制。开始的时候，发送得较慢，然后根据丢包的情况，调整速率：如果不丢包，就加快发送速度；如果丢包，就降低发送速度。</p><p>即使对于带宽很大、线路很好的连接，TCP 也总是从10个数据包开始慢慢试，过了一段时间以后，才达到最高的传输速率。这就是 TCP 的慢启动。</p><h1 id="Delay-Based"><a href="#Delay-Based" class="headerlink" title="Delay-Based"></a>Delay-Based</h1><p>BBR是 delay-based，而不是 loss-based，不受丢包影响</p><p>国内的运营商，为了减少跨国流量，故意在出口随机丢包…</p><p>如果是 loss based 速度自然就无法达到带宽上限</p><p>同样是 delay-based 的 TCP Vegas, Fast, Ledbat, Google CC 也可以提高 SS 的速度</p><h1 id="Loss-Based的几个问题"><a href="#Loss-Based的几个问题" class="headerlink" title="Loss-Based的几个问题"></a>Loss-Based的几个问题</h1><ul><li><p><strong>丢包即拥塞</strong> 现实中网络环境很复杂会存在错误丢包，很多算法无法很好区分拥塞丢包和错误丢包，因此在存在一定错误丢包的前提下在某些网络场景中并不能充分利用带宽。</p></li><li><p><strong>缓冲区膨胀问题BufferBloat</strong> 网络连接中路由器、交换机、核心网设备等等为了平滑网络波动而存在缓冲区，这些缓存区就像输液管的膨胀部分让数据更加平稳，但是Loss-Based策略在最初就像网络中发生数据类似于灌水，此时是将Buffer全部算在内的，一旦buffer满了，就可能出现RTT增加丢包等问题，就相当于有的容量本不该算在其中，但是策略是基于包含Buffer进行预测的，特别地在深缓冲区网络就会出现一些问题。</p></li><li><p><strong>网络负载高但无丢包事件</strong> 假设网络中的负载已经很高了，只要没有丢包事件出现，算法就不会主动减窗降低发送速率，这种情况下虽然充分利用了网络带宽，同时由于一直没有丢包事件出现发送方仍然在加窗，表现出了较强的网络带宽侵略性，加重了网络负载压力。</p></li><li><p><strong>高负载丢包</strong> 高负载无丢包情况下算法一直加窗，这样可以预测丢包事件可能很快就出现了，一旦丢包出现窗口将呈现乘性减少，由高位发送速率迅速降低会造成整个网络的瞬时抖动性，总体呈现较大的锯齿状波动。</p></li><li><p><strong>低负载高延时丢包</strong> 在某些弱网环境下RTT会增加甚至出现非拥塞引起丢包，此时基于丢包反馈的拥塞算法的窗口会比较小，对带宽的利用率很低，吞吐量下降很明显，但是实际上网络负载并不高，所以在弱网环境下效果并不是非常理想。</p></li></ul><h1 id="TCP-BBR算法基本原理"><a href="#TCP-BBR算法基本原理" class="headerlink" title="TCP BBR算法基本原理"></a>TCP BBR算法基本原理</h1><p>TCP BBR算法是一种主动式机制，简单来说BBR算法不再基于丢包判断并且也不再使用AIMD线性增乘性减策略来维护拥塞窗口，而是分别采样估计极大带宽和极小延时，并用二者乘积作为发送窗口，并且BBR引入了Pacing Rate限制数据发送速率，配合cwnd使用来降低冲击。</p><p>BBR算法的一些思想在之前的基于延时的拥塞控制算法中也有出现，其中必有有名的是TCP WestWood算法。</p><blockquote><p>TCP Westwood改良自New Reno，不同于以往其他拥塞控制算法使用丢失来测量，其通过对确认包测量来确定一个合适的发送速度，并以此调整拥塞窗口和慢启动阈值。其改良了慢启动阶段算法为敏捷探测和设计了一种持续探测拥塞窗口的方法来控制进入敏捷探测，使链接尽可能地使用更多的带宽。</p></blockquote><p>TCP WestWood算法也是基于带宽和延时乘积进行设计的，但是带宽和延时两个指标无法同时测量，因为这两个值是有些矛盾的极值，要测量最大带宽就要发送最大的数据量但是此时的RTT可能会很大，如果要测量最小的RTT那么久意味着数据量非常少最大带宽就无法获得。</p><p>TCP BBR算法采用交替采样测量两个指标，取一段时间内的带宽极大值和延时极小值作为估计值。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>简单讲就是 默认的TCP 拥堵算法 是基于丢包判断带宽的理想速率</p><p>而国际带宽容易丢包 导致默认算法判断出的带宽上限并非真实带宽</p><!--在Linux4.19内核中已经将拥塞控制算法从CUBIC（该算法从2.6.19内核就引入Linux了）改为BBR，而HTTP3也使用此算法。-->]]></content>
    
    
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;</summary>
    
    
    
    <category term="TCP" scheme="https://blog.lqs1848.top/categories/TCP/"/>
    
    
    <category term="BBR" scheme="https://blog.lqs1848.top/tags/BBR/"/>
    
  </entry>
  
  <entry>
    <title>数字转换任意进制 纯数字加密</title>
    <link href="https://blog.lqs1848.top/2021/06/04/2021-06-04%20%20%E8%87%AA%E5%AE%9A%E4%B9%89%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2%20%E6%95%B0%E5%AD%97%E5%8A%A0%E5%AF%86/"/>
    <id>https://blog.lqs1848.top/2021/06/04/2021-06-04%20%20%E8%87%AA%E5%AE%9A%E4%B9%89%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2%20%E6%95%B0%E5%AD%97%E5%8A%A0%E5%AF%86/</id>
    <published>2021-06-03T16:00:00.000Z</published>
    <updated>2021-07-08T08:12:04.793Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h1 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h1><p><strong>项目中需要 加密纯数字 (加密id 防止用户随便改比如 URL?id=1 修改成 URL?id=2</strong></p><p>就想用 进制转换 10进制转换为 自定义的进制 16进制 32进制 太常见了</p><p>网上给的代码都是用 Integer.valueOf(String s, int radix); 实现</p><p>满足不了自定义进制密文的要求</p><p>只好自己实现一个咯~ </p><p>网上一搜应该一堆 但我愣是没有搜到…  感叹中文互联网的内容越来越差很多东西都搜不到了</p><h1 id="基本实现"><a href="#基本实现" class="headerlink" title="基本实现"></a>基本实现</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> String enstr = <span class="string">&quot;0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span>;<span class="comment">//62进制</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">char</span>[] array = enstr.toCharArray();</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> len = array.length;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">9999999</span>;i&lt; <span class="number">999999999</span>;i++) &#123;</span><br><span class="line">String enc = encode(i);</span><br><span class="line"><span class="keyword">if</span>(decode(enc)!=i) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;error&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">System.out.println(i + <span class="string">&quot; &quot;</span>+ enc);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">encode</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> x = id / len;</span><br><span class="line"><span class="keyword">int</span> y = id % len;</span><br><span class="line"><span class="keyword">return</span> encode(x, y, <span class="string">&quot;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">encode</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, String sb)</span> </span>&#123;</span><br><span class="line">sb = array[y] + sb;</span><br><span class="line"><span class="keyword">if</span> (x == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> sb;</span><br><span class="line"><span class="keyword">return</span> encode(x / len, x % len, sb);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">decode</span><span class="params">(String code)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> r = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; code.length(); i++) &#123;</span><br><span class="line"><span class="keyword">int</span> fd = code.length() - i - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> x = enstr.indexOf(code.charAt(i));</span><br><span class="line"><span class="keyword">if</span> (fd != <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">int</span> cur = x * len;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; fd; j++)</span><br><span class="line">cur *= len;</span><br><span class="line">r += cur;</span><br><span class="line">&#125; <span class="keyword">else</span> </span><br><span class="line">r += x;</span><br><span class="line">&#125; <span class="comment">// for</span></span><br><span class="line"><span class="keyword">return</span> r;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="实际使用"><a href="#实际使用" class="headerlink" title="实际使用"></a>实际使用</h1><p>上面的代码会有个问题 比如每次生成 id = 61 固定 会生成 id = z</p><p>为了没有规律加入随机数放到生成的字符中</p><p>为了防止被用户修改 还要再加入校验码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> String baseSecret = <span class="string">&quot;0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> len = baseSecret.length();</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> Random ran = <span class="keyword">new</span> Random();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">encode</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> x = id / len;</span><br><span class="line"><span class="keyword">int</span> y = id % len;</span><br><span class="line"><span class="keyword">int</span> r = ran.nextInt(baseSecret.length());</span><br><span class="line">String secret = getOffsetSecret(r);</span><br><span class="line">String code = encode(x, y, <span class="string">&quot;&quot;</span>, secret) + baseSecret.charAt(r);</span><br><span class="line"><span class="keyword">return</span> code + getCheckCode(code);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">encode</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, String sb, String secret)</span> </span>&#123;</span><br><span class="line">sb = secret.charAt(y) + sb;</span><br><span class="line"><span class="keyword">if</span> (x == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> sb;</span><br><span class="line"><span class="keyword">return</span> encode(x / len, x % len, sb, secret);</span><br><span class="line">&#125;<span class="comment">// mtehod</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">decode</span><span class="params">(String code)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">String checkStr = code.substring(code.length() - <span class="number">1</span>);</span><br><span class="line">code = code.substring(<span class="number">0</span>, code.length() - <span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>(!checkStr.equals(getCheckCode(code)))</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">&quot;校验无法通过!&quot;</span>);</span><br><span class="line"></span><br><span class="line">String offsetStr = code.substring(code.length() - <span class="number">1</span>);</span><br><span class="line"><span class="keyword">int</span> offset = baseSecret.indexOf(offsetStr);</span><br><span class="line">String secret = getOffsetSecret(offset);</span><br><span class="line"></span><br><span class="line">code = code.substring(<span class="number">0</span>, code.length() - <span class="number">1</span>);</span><br><span class="line"><span class="keyword">int</span> r = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; code.length(); i++) &#123;</span><br><span class="line"><span class="keyword">int</span> fd = code.length() - i - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> x = secret.indexOf(code.charAt(i));</span><br><span class="line"><span class="keyword">if</span> (fd != <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">int</span> cur = x * len;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; fd; j++)</span><br><span class="line">cur *= len;</span><br><span class="line">r += cur;</span><br><span class="line">&#125; <span class="keyword">else</span></span><br><span class="line">r += x;</span><br><span class="line">&#125; <span class="comment">// for</span></span><br><span class="line"><span class="keyword">return</span> r;</span><br><span class="line">&#125;<span class="comment">// method</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//加入随机数</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getOffsetSecret</span><span class="params">(<span class="keyword">int</span> offset)</span> </span>&#123;</span><br><span class="line">StringBuffer sb = <span class="keyword">new</span> StringBuffer();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= baseSecret.length(); i++) &#123;</span><br><span class="line"><span class="keyword">int</span> o = (i + offset) % baseSecret.length();</span><br><span class="line">sb.append(baseSecret.charAt(o));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> sb.toString();</span><br><span class="line">&#125;<span class="comment">// method</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//加入校验码</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getCheckCode</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line">str = str.substring(<span class="number">0</span>, str.length() - <span class="number">1</span>);</span><br><span class="line"><span class="keyword">int</span> code = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; str.length(); i++)</span><br><span class="line">code += baseSecret.indexOf(str.charAt(i));</span><br><span class="line"><span class="keyword">return</span> baseSecret.charAt(code % baseSecret.length()) + <span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;<span class="comment">//</span></span><br></pre></td></tr></table></figure><h2 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h2><p>为了长度大致相同 可以给一个基础的数值 比如加密前先 +100000 之后再加密</p><h1 id="玩出花来"><a href="#玩出花来" class="headerlink" title="玩出花来"></a>玩出花来</h1><p>baseSecret 可以随便换比如 “0aQ1bR2cS3dT4eU5fV6gW7hX8iY9jZAkBlCmDnEoFpGqHrIsJtKuLvMwNxOyPz” 这种没规律的</p><p>或者</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> x = <span class="number">123456</span>;</span><br><span class="line">        System.out.println(x + <span class="string">&quot; &quot;</span> + encode(x));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> String baseSecret = <span class="string">&quot;ilI&quot;</span>;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">123456 illiIIllIIlil</span></span><br><span class="line"><span class="comment">123456 lIIliiIIiiIli</span></span><br><span class="line"><span class="comment">123456 IiiIlliilliII</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> String baseSecret = <span class="string">&quot;-=*&quot;</span>;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">123456 *--*==--==-**</span></span><br><span class="line"><span class="comment">123456 =**=--**--*=-</span></span><br><span class="line"><span class="comment">123456 -==-**==**=-=</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> String baseSecret = <span class="string">&quot;oO0&quot;</span>;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">123456 0oo0OOooOOo00</span></span><br><span class="line"><span class="comment">123456 O00Ooo00oo0Oo</span></span><br><span class="line"><span class="comment">123456 oOOo00OO00OoO</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><em><strong><center><a href="https://github.com/lqs1848/java_workspace/blob/main/Test/src/org/lqs1848/test/NumberEncryption.java">源码</a></center></strong></em></p>]]></content>
    
    
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;</summary>
    
    
    
    <category term="Java" scheme="https://blog.lqs1848.top/categories/Java/"/>
    
    
    <category term="进制转换" scheme="https://blog.lqs1848.top/tags/%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2/"/>
    
    <category term="数字加密" scheme="https://blog.lqs1848.top/tags/%E6%95%B0%E5%AD%97%E5%8A%A0%E5%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>Seata</title>
    <link href="https://blog.lqs1848.top/2021/05/25/2021-05-25%20seata/"/>
    <id>https://blog.lqs1848.top/2021/05/25/2021-05-25%20seata/</id>
    <published>2021-05-24T16:00:00.000Z</published>
    <updated>2021-07-08T08:12:04.792Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h1 id="nacos-配置"><a href="#nacos-配置" class="headerlink" title="nacos 配置"></a>nacos 配置</h1><p>先创建一个 seata 的 namespace 记录ID a9cfa2b3-71b8-4c99-8a8e-5c31f74787e3</p><p>下载 <a href="https://github.com/seata/seata">https://github.com/seata/seata</a></p><p>在 seata-develop\script\config-center 目录下</p><p>config.txt 根据自己的需要修改 </p><blockquote><p>我的修改内容为</p><p>store 开头都删掉(配置从 nacos 读取了 这个应该也没什么用)</p><p>添加  service.vgroupMapping.服务名=default 有几个添加几个 ( 1.4.2 是这样的格式 旧版是其他格式 </p><p>等后面项目启动报错了再加也行</p></blockquote><p>执行 nacos/nacos-config.sh </p><blockquote><p>sh nacos-config.sh -h 192.168.101.222 -p 8848 -g SEATA_GROUP -t a9cfa2b3-71b8-4c99-8a8e-5c31f74787e3 -u nacos -w nacos</p></blockquote><p>把 config.txt 的内容导入到 nacos 中 结果如图</p><p><img src="/img/seata_1.jpg"></p><p>其实内容也就是</p><p><img src="/img/seata_2.jpg"></p><p>手动一个个添加到nacos也行</p><h1 id="docker-部署-seata"><a href="#docker-部署-seata" class="headerlink" title="docker 部署 seata"></a>docker 部署 seata</h1><blockquote><p>docker pull seataio/seata-server:1.4.2</p><p>docker run –name seata -p 8091:8091 -d  seataio/seata-server:1.4.2</p><p>docker cp seata:/seata-server  /home/dockerdata/seata      —–把 seata 的配置文件放到 /home/dockerdata/seata 中</p><p>docker stop seata</p><p>docker rm seata</p></blockquote><p>修改 /home/dockerdata/seata/seata-server/resources/registry.conf</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">registry &#123;</span><br><span class="line">  # file 、nacos 、eureka、redis、zk、consul、etcd3、sofa</span><br><span class="line">  type &#x3D; &quot;nacos&quot;</span><br><span class="line"></span><br><span class="line">  nacos &#123;</span><br><span class="line">    application &#x3D; &quot;seata-server&quot;</span><br><span class="line">    serverAddr &#x3D; &quot;192.168.101.222:8848&quot;</span><br><span class="line">    group &#x3D; &quot;SEATA_GROUP&quot;</span><br><span class="line">    namespace &#x3D; &quot;a9cfa2b3-71b8-4c99-8a8e-5c31f74787e3&quot;</span><br><span class="line">    cluster &#x3D; &quot;default&quot;</span><br><span class="line">    username &#x3D; &quot;nacos&quot;</span><br><span class="line">    password &#x3D; &quot;nacos&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">config &#123;</span><br><span class="line">  # file、nacos 、apollo、zk、consul、etcd3</span><br><span class="line">  type &#x3D; &quot;nacos&quot;</span><br><span class="line"></span><br><span class="line">  nacos &#123;</span><br><span class="line">    serverAddr &#x3D; &quot;192.168.101.222:8848&quot;</span><br><span class="line">    namespace &#x3D; &quot;a9cfa2b3-71b8-4c99-8a8e-5c31f74787e3&quot;</span><br><span class="line">    group &#x3D; &quot;SEATA_GROUP&quot;</span><br><span class="line">    username &#x3D; &quot;nacos&quot;</span><br><span class="line">    password &#x3D; &quot;nacos&quot;</span><br><span class="line">    dataId &#x3D; &quot;seataServer.properties&quot;  &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>配置后 重新运行一个以 /home/dockerdata/seata/seata-server/resources 为配置目录的 容器</p><blockquote><p>docker run -d –name seata-server -it -p 8091:8091 -e SEATA_IP=192.168.101.222 -e SEATA_CONFIG_NAME=file:/root/seata/config/registry -v /home/dockerdata/seata/seata-server/resources:/root/seata/config –net=bridge –restart=always seataio/seata-server:1.4.2;</p></blockquote><p>到 nacos 的服务中查看 服务列表 是否有 seata-server (记得切换到 seata 命名空间</p><h1 id="SpringCloud-整合-Seata"><a href="#SpringCloud-整合-Seata" class="headerlink" title="SpringCloud 整合 Seata"></a>SpringCloud 整合 Seata</h1><h2 id="Maven引入依赖"><a href="#Maven引入依赖" class="headerlink" title="Maven引入依赖"></a>Maven引入依赖</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-alibaba-seata<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.seata<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>seata-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.seata<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>seata-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    //排除掉旧版本 引入最新的 1.4.2</span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="配置yml"><a href="#配置yml" class="headerlink" title="配置yml"></a>配置yml</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">seata:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">application-id:</span> <span class="string">$&#123;spring.application.name&#125;</span></span><br><span class="line">  <span class="attr">tx-service-group:</span> <span class="string">my_test_tx_group</span>    <span class="comment">#此处配置自定义的seata事务分组名称</span></span><br><span class="line">  <span class="attr">enable-auto-data-source-proxy:</span> <span class="literal">true</span>    <span class="comment">#开启数据库代理</span></span><br><span class="line">  <span class="comment">#不需要手动去替换 datasource</span></span><br><span class="line">  <span class="attr">config:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">nacos</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">namespace:</span> <span class="string">a9cfa2b3-71b8-4c99-8a8e-5c31f74787e3</span></span><br><span class="line">      <span class="attr">server-addr:</span> <span class="number">192.168</span><span class="number">.101</span><span class="number">.222</span><span class="string">:8848</span></span><br><span class="line">      <span class="attr">group:</span> <span class="string">SEATA_GROUP</span></span><br><span class="line">      <span class="attr">username:</span> <span class="string">nacos</span></span><br><span class="line">      <span class="attr">password:</span> <span class="string">nacos</span></span><br><span class="line">  <span class="attr">registry:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">nacos</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">application:</span> <span class="string">seata-server</span></span><br><span class="line">      <span class="attr">server-addr:</span> <span class="number">192.168</span><span class="number">.101</span><span class="number">.222</span><span class="string">:8848</span></span><br><span class="line">      <span class="attr">namespace:</span> <span class="string">a9cfa2b3-71b8-4c99-8a8e-5c31f74787e3</span></span><br><span class="line">      <span class="attr">username:</span> <span class="string">nacos</span></span><br><span class="line">      <span class="attr">password:</span> <span class="string">nacos</span>  </span><br></pre></td></tr></table></figure><h2 id="创建-undo-log-表"><a href="#创建-undo-log-表" class="headerlink" title="创建 undo_log 表"></a>创建 undo_log 表</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `undo_log`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `undo_log` (</span><br><span class="line">  `id` <span class="type">bigint</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;increment id&#x27;</span>,</span><br><span class="line">  `branch_id` <span class="type">bigint</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;branch transaction id&#x27;</span>,</span><br><span class="line">  `xid` <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;global transaction id&#x27;</span>,</span><br><span class="line">  `context` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;undo_log context,such as serialization&#x27;</span>,</span><br><span class="line">  `rollback_info` longblob <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;rollback info&#x27;</span>,</span><br><span class="line">  `log_status` <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;0:normal status,1:defense status&#x27;</span>,</span><br><span class="line">  `log_created` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;create datetime&#x27;</span>,</span><br><span class="line">  `log_modified` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;modify datetime&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`),</span><br><span class="line">  <span class="keyword">UNIQUE</span> KEY `ux_undo_log` (`xid`,`branch_id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB AUTO_INCREMENT<span class="operator">=</span><span class="number">99</span> <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 COMMENT<span class="operator">=</span><span class="string">&#x27;AT transaction mode undo table&#x27;</span>;</span><br><span class="line"><span class="keyword">SET</span> FOREIGN_KEY_CHECKS<span class="operator">=</span><span class="number">1</span>;</span><br></pre></td></tr></table></figure><h1 id="碰到的问题"><a href="#碰到的问题" class="headerlink" title="碰到的问题"></a>碰到的问题</h1><h2 id="Jackson格式化-Cannot-construct-instance-of-java-time-LocalDateTime-no-Creators-like-de"><a href="#Jackson格式化-Cannot-construct-instance-of-java-time-LocalDateTime-no-Creators-like-de" class="headerlink" title="Jackson格式化 Cannot construct instance of java.time.LocalDateTime (no Creators, like de"></a>Jackson格式化 Cannot construct instance of <code>java.time.LocalDateTime</code> (no Creators, like de</h2><h3 id="解决过程"><a href="#解决过程" class="headerlink" title="解决过程"></a>解决过程</h3><p>尝试 给 Jackson 添加</p><blockquote><p>.registerModule(new ParameterNamesModule())<br>.registerModule(new Jdk8Module())<br>.registerModule(new JavaTimeModule());</p></blockquote><p>无效</p><p>看源码找到 JacksonUndoLogParser </p><blockquote><p>private final ObjectMapper mapper = new ObjectMapper();</p></blockquote><p>原来用的自己创建的 ObjectMapper  难怪 给Spring的 ObjectMapper 添加 JavaTimeModule 没有效果</p><p>在源码中找切换 jackson 的方式 看到原来读取配置 client.undo.logSerialization=jackson</p><p>然后记录在 undo_log 表的 context 字段中 serializer=jackson&amp;compressorType=NONE</p><p>在执行回滚时反序列化是根据 serializer=jackson 查找 Parser</p><p>在插入 undo_log 时 是根据 配置 client.undo.logSerialization</p><p>修改 client.undo.logSerialization 即可切换 Parser 有 fastjson jackson kryo protostuff 这些可以选择</p><p>换为 fastjson 嗯 还是 时间转换异常 错误变成   <strong>Timestamp format must be yyyy-mm-dd hh:mm:ss[.fffffffff]]</strong></p><p>┻━┻︵╰(‵□′)╯︵┻━┻</p><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>覆盖 seata 的 JacksonUndoLogParser   ( 自己定义一个一模一样的包名 和 类名 然后把 seata中的 JacksonUndoLogParser 复制进去 修改其中部分代码</p><p>在 init() 中 添加</p><blockquote><p>mapper.registerModule(new ParameterNamesModule())<br>            .registerModule(new Jdk8Module())<br>            .registerModule(new JavaTimeModule());</p></blockquote><p>解决 (๑•̀ㅂ•́)و✧</p>]]></content>
    
    
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;</summary>
    
    
    
    <category term="Java" scheme="https://blog.lqs1848.top/categories/Java/"/>
    
    <category term="SpringCloud" scheme="https://blog.lqs1848.top/categories/Java/SpringCloud/"/>
    
    
    <category term="seata" scheme="https://blog.lqs1848.top/tags/seata/"/>
    
    <category term="分布式事务" scheme="https://blog.lqs1848.top/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1/"/>
    
    <category term="nacos" scheme="https://blog.lqs1848.top/tags/nacos/"/>
    
  </entry>
  
  <entry>
    <title>JasperReport (二)设计模板</title>
    <link href="https://blog.lqs1848.top/2021/05/20/2021-05-20%20jasperreports2/"/>
    <id>https://blog.lqs1848.top/2021/05/20/2021-05-20%20jasperreports2/</id>
    <published>2021-05-19T16:00:00.000Z</published>
    <updated>2021-08-31T02:58:46.713Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><p>设计工具 选择 Jaspersoft Studio  就是升级版的 IReport(这个需要 jdk1.7 超过1.7无法启动)</p><p>大致操作方式:</p><blockquote><p><a href="https://blog.csdn.net/shiyun123zw/category_7422282.html">https://blog.csdn.net/shiyun123zw/category_7422282.html</a></p></blockquote><p>遇到的问题:</p><h3 id="Dataset-传参"><a href="#Dataset-传参" class="headerlink" title="Dataset 传参"></a>Dataset 传参</h3><p>要传递到 Dataset 中要在引用的地方添加</p><p>比如 Table 用了 Dataset </p><p>在 table 控件的 Properties -&gt; Dataset -&gt; Parameters </p><p><img src="/img/report_1.jpg"></p><h3 id="Table-合并单元格"><a href="#Table-合并单元格" class="headerlink" title="Table 合并单元格"></a>Table 合并单元格</h3><p>合并单元格必须用 Group Column</p><h3 id="Text-自动换行"><a href="#Text-自动换行" class="headerlink" title="Text 自动换行"></a>Text 自动换行</h3><p>最新版本的 JasperSoft Studio </p><p>没有 StretchWith Overflow 这么个属性</p><p><a href="https://community.jaspersoft.com/questions/911866/stretch-text-field-data-overflow">https://community.jaspersoft.com/questions/911866/stretch-text-field-data-overflow</a></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">textField</span> <span class="attr">isStretchWithOverflow</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">reportElement</span> <span class="attr">uuid</span>=<span class="string">&quot;5935ad61-77ec-4b05-84bf-6f72d3dcd0bd&quot;</span> <span class="attr">style</span>=<span class="string">&quot;table&quot;</span> <span class="attr">positionType</span>=<span class="string">&quot;Float&quot;</span> <span class="attr">stretchType</span>=<span class="string">&quot;RelativeToTallestObject&quot;</span> <span class="attr">x</span>=<span class="string">&quot;233&quot;</span> <span class="attr">y</span>=<span class="string">&quot;233&quot;</span> <span class="attr">width</span>=<span class="string">&quot;150&quot;</span> <span class="attr">height</span>=<span class="string">&quot;20&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">textElement</span> <span class="attr">textAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">verticalAlignment</span>=<span class="string">&quot;Middle&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">textFieldExpression</span>&gt;</span>&lt;![CDATA[&quot;DP-GI&quot;]]&gt;<span class="tag">&lt;/<span class="name">textFieldExpression</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">textField</span>&gt;</span></span><br></pre></td></tr></table></figure><p>需要在 textField 手动加上 isStretchWithOverflow=”true”</p><h1 id="DEMO"><a href="#DEMO" class="headerlink" title="DEMO"></a>DEMO</h1><p><img src="/img/report_2.jpg"></p><p><em><strong><center><a href="/other/demo.jrxml">点击下载 DEMO</a></center></strong></em></p>]]></content>
    
    
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;</summary>
    
    
    
    <category term="Java" scheme="https://blog.lqs1848.top/categories/Java/"/>
    
    <category term="report" scheme="https://blog.lqs1848.top/categories/Java/report/"/>
    
    
    <category term="jasperreports" scheme="https://blog.lqs1848.top/tags/jasperreports/"/>
    
    <category term="打印" scheme="https://blog.lqs1848.top/tags/%E6%89%93%E5%8D%B0/"/>
    
    <category term="报表" scheme="https://blog.lqs1848.top/tags/%E6%8A%A5%E8%A1%A8/"/>
    
    <category term="导出PDF" scheme="https://blog.lqs1848.top/tags/%E5%AF%BC%E5%87%BAPDF/"/>
    
    <category term="Jaspersoft Studio" scheme="https://blog.lqs1848.top/tags/Jaspersoft-Studio/"/>
    
  </entry>
  
  <entry>
    <title>JasperReport (一)项目集成</title>
    <link href="https://blog.lqs1848.top/2021/05/19/2021-05-19%20jasperreports1/"/>
    <id>https://blog.lqs1848.top/2021/05/19/2021-05-19%20jasperreports1/</id>
    <published>2021-05-18T16:00:00.000Z</published>
    <updated>2021-07-08T08:12:04.791Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h1 id="引入依赖包"><a href="#引入依赖包" class="headerlink" title="引入依赖包"></a>引入依赖包</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>net.sf.jasperreports<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jasperreports<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>6.17.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.lowagie<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>itext<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>net.sf.jasperreports<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jasperreports-fonts<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>6.17.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.lowagie<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>itext<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.itextpdf<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>itextpdf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.5.13.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.itextpdf<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>itext-pdfa<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.5.13.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.itextpdf<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>itext-asian<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.itextpdf<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>font-asian<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>7.1.15<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.codehaus.groovy<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>groovy-all<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.4.21<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="添加-PdfReportView"><a href="#添加-PdfReportView" class="headerlink" title="添加 PdfReportView"></a>添加 PdfReportView</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PdfReportView</span> <span class="keyword">extends</span> <span class="title">AbstractView</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String CONTENT_TYPE = <span class="string">&quot;application/pdf&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String templatePath;</span><br><span class="line">    <span class="keyword">private</span> String exportFileName;</span><br><span class="line">    <span class="keyword">private</span> Connection connection;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PdfReportView</span><span class="params">(String templatePath, String exportFileName,Connection connection)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.templatePath = templatePath;</span><br><span class="line">        <span class="keyword">if</span> (exportFileName != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                exportFileName = URLEncoder.encode(exportFileName, <span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">this</span>.exportFileName = exportFileName;</span><br><span class="line">        <span class="keyword">this</span>.connection = connection;</span><br><span class="line">        setContentType(CONTENT_TYPE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> Map&lt;String, Object&gt; <span class="title">getParamsMap</span><span class="params">(Map&lt;String, Object&gt; map)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Map&lt;String, Object&gt; params = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (String key : map.keySet()) &#123;</span><br><span class="line">            Object val = map.get(key);</span><br><span class="line">            <span class="keyword">if</span> (val <span class="keyword">instanceof</span> JRDataSource) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                params.put(key, val);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> params;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> JRDataSource <span class="title">getDataSource</span><span class="params">(Map&lt;String, Object&gt; map)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (String key : map.keySet()) &#123;</span><br><span class="line">            Object val = map.get(key);</span><br><span class="line">            <span class="keyword">if</span> (val <span class="keyword">instanceof</span> JRDataSource) &#123;</span><br><span class="line">                <span class="keyword">return</span> (JRDataSource) map.get(key);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> JREmptyDataSource();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">renderMergedOutputModel</span><span class="params">(Map&lt;String, Object&gt; map,</span></span></span><br><span class="line"><span class="function"><span class="params">        HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function">        <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">        response.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        response.setContentType(getContentType());</span><br><span class="line">        <span class="comment">//response.setContentType(&quot;application/octet-stream&quot;);</span></span><br><span class="line">        response.setHeader(<span class="string">&quot;content-disposition&quot;</span>, <span class="string">&quot;attachment;filename=&quot;</span> + exportFileName + <span class="string">&quot;.pdf&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> (InputStream inputStream = Thread.currentThread().getContextClassLoader()</span><br><span class="line">            .getResourceAsStream(templatePath)) &#123;</span><br><span class="line">            <span class="keyword">try</span> (OutputStream ouputStream = response.getOutputStream()) &#123;</span><br><span class="line"></span><br><span class="line">                JasperPrint jasperPrint = JasperFillManager</span><br><span class="line">                    .fillReport(inputStream, getParamsMap(map), connection);</span><br><span class="line"></span><br><span class="line">                JasperExportManager.exportReportToPdfStream(jasperPrint, ouputStream);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">                <span class="comment">//使用了连接池 所以是放回连接池</span></span><br><span class="line">            connection.close();</span><br><span class="line">&#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="添加Controller"><a href="#添加Controller" class="headerlink" title="添加Controller"></a>添加Controller</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引入数据源</span></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line">   <span class="keyword">private</span> DataSource dataSource;</span><br><span class="line"><span class="meta">@RequestMapping(&quot;pdf&quot;)</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">pdf</span><span class="params">(<span class="meta">@RequestParam(&quot;type&quot;)</span>String type,<span class="meta">@RequestParam(&quot;orderId&quot;)</span>String id)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">SysUser user = getLoginUserMust();</span><br><span class="line">Map&lt;String,Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"><span class="comment">//模板中的参数</span></span><br><span class="line">map.put(<span class="string">&quot;gid&quot;</span>, user.getGroupId());</span><br><span class="line">map.put(<span class="string">&quot;pid&quot;</span>, user.getPlatformId());</span><br><span class="line">map.put(<span class="string">&quot;orderid&quot;</span>, IdMixUtils.decode(id).longValue());</span><br><span class="line">       <span class="comment">//传递数据库连接</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> ModelAndView(<span class="keyword">new</span> PdfReportView(<span class="string">&quot;templates/report/&quot;</span>+type+<span class="string">&quot;.jasper&quot;</span>, type, dataSource.getConnection()),map);</span><br><span class="line">   &#125;<span class="comment">//method</span></span><br></pre></td></tr></table></figure><blockquote><p>参考</p><p><a href="https://segmentfault.com/a/1190000012526395">https://segmentfault.com/a/1190000012526395</a></p></blockquote><p>大致与参考内容相差不大 就是多了个传递 数据库连接的动作</p>]]></content>
    
    
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;</summary>
    
    
    
    <category term="Java" scheme="https://blog.lqs1848.top/categories/Java/"/>
    
    <category term="report" scheme="https://blog.lqs1848.top/categories/Java/report/"/>
    
    
    <category term="jasperreports" scheme="https://blog.lqs1848.top/tags/jasperreports/"/>
    
    <category term="ireport" scheme="https://blog.lqs1848.top/tags/ireport/"/>
    
    <category term="打印" scheme="https://blog.lqs1848.top/tags/%E6%89%93%E5%8D%B0/"/>
    
    <category term="报表" scheme="https://blog.lqs1848.top/tags/%E6%8A%A5%E8%A1%A8/"/>
    
    <category term="导出PDF" scheme="https://blog.lqs1848.top/tags/%E5%AF%BC%E5%87%BAPDF/"/>
    
  </entry>
  
  <entry>
    <title>DataBufferLimitException:Exceeded limit on max bytes to buffer</title>
    <link href="https://blog.lqs1848.top/2021/05/08/2021-05-08%20Exceeded%20limit%20on%20max%20bytes%20to%20buffer/"/>
    <id>https://blog.lqs1848.top/2021/05/08/2021-05-08%20Exceeded%20limit%20on%20max%20bytes%20to%20buffer/</id>
    <published>2021-05-07T16:00:00.000Z</published>
    <updated>2021-07-08T08:12:04.791Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h1 id="WebFlux-上传文件异常"><a href="#WebFlux-上传文件异常" class="headerlink" title="WebFlux 上传文件异常"></a>WebFlux 上传文件异常</h1><p>错误信息提示</p><blockquote><p>DataBufferLimitException: Exceeded limit on max bytes to buffer : 262144</p></blockquote><p>网上随便一搜</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">codec:</span></span><br><span class="line">    <span class="attr">max-in-memory-size:</span> <span class="string">20MB</span></span><br></pre></td></tr></table></figure><p>重启项目</p><p>报错依旧…</p><p>换个解决方式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebfluxConfig</span> <span class="keyword">implements</span> <span class="title">WebFluxConfigurer</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> WebClient <span class="title">getWebClientBuilder</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span>   WebClient.builder().exchangeStrategies(ExchangeStrategies.builder()</span><br><span class="line">            .codecs(configurer -&gt; configurer</span><br><span class="line">                      .defaultCodecs()</span><br><span class="line">                      .maxInMemorySize(<span class="number">20</span> * <span class="number">1024</span> * <span class="number">1024</span>))</span><br><span class="line">                    .build())</span><br><span class="line">                  .build();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">configureHttpMessageCodecs</span><span class="params">(ServerCodecConfigurer configurer)</span> </span>&#123;</span><br><span class="line">        configurer.defaultCodecs().maxInMemorySize(<span class="number">20</span> * <span class="number">1024</span> * <span class="number">1024</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>重启</p><p>又报错…</p><p>懵逼</p><p>仔细研究了一下</p><p>发现不是默认的Filter出错而是自己的自定义 Filter出错了</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//出错的位置</span></span><br><span class="line">ServerRequest serverRequest = <span class="keyword">new</span> DefaultServerRequest(exchange);</span><br><span class="line"></span><br><span class="line"><span class="comment">//修改为</span></span><br><span class="line">ServerRequest serverRequest = ServerRequest.create(exchange, codecConfigurer.getReaders());</span><br><span class="line"><span class="comment">//codecConfigurer 用spring注入的</span></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line">ServerCodecConfigurer codecConfigurer;</span><br></pre></td></tr></table></figure><p>简单讲就是 我自己写的 RequestBodyFilter 用的 Codecs 不是 Spring 注入的</p><p>所以之前设置的都没有生效</p><p>以前没问题是因为 这个filter 我写了 上传文件的白名单 这次接口刚添加 忘记加白名单了</p>]]></content>
    
    
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;</summary>
    
    
    
    <category term="Java" scheme="https://blog.lqs1848.top/categories/Java/"/>
    
    <category term="SpringCloud" scheme="https://blog.lqs1848.top/categories/Java/SpringCloud/"/>
    
    
    <category term="Spring" scheme="https://blog.lqs1848.top/tags/Spring/"/>
    
    <category term="Exception" scheme="https://blog.lqs1848.top/tags/Exception/"/>
    
    <category term="WebFlux" scheme="https://blog.lqs1848.top/tags/WebFlux/"/>
    
  </entry>
  
  <entry>
    <title>SpringCloud 整合 Dubbo</title>
    <link href="https://blog.lqs1848.top/2021/04/23/2021-04-23%20%20SpringCloud%20%E6%95%B4%E5%90%88%20Dubbo/"/>
    <id>https://blog.lqs1848.top/2021/04/23/2021-04-23%20%20SpringCloud%20%E6%95%B4%E5%90%88%20Dubbo/</id>
    <published>2021-04-22T16:00:00.000Z</published>
    <updated>2021-07-08T08:12:04.790Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h1 id="选择整合方式"><a href="#选择整合方式" class="headerlink" title="选择整合方式"></a>选择整合方式</h1><p>1 用 dubbo 替换 feign 的 http 请求方式</p><p>2 正常的接口远程调用方式</p><h2 id="0-共通基础"><a href="#0-共通基础" class="headerlink" title="0 共通基础"></a>0 共通基础</h2><p>不管用什么方式使用dubbo 都得引入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-dubbo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="1-用-dubbo-替代-feign"><a href="#1-用-dubbo-替代-feign" class="headerlink" title="1 用 dubbo 替代 feign"></a>1 用 dubbo 替代 feign</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> feign.Feign;</span><br><span class="line"><span class="keyword">import</span> feign.Target;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.apache.dubbo.config.annotation.DubboReference;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.ReflectionUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Objects;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> com.alibaba.spring.util.AnnotationUtils.getAttributes;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.springframework.core.annotation.AnnotationAttributes.fromMap;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Dubbo、Feign整合类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DubboFeignBuilder</span> <span class="keyword">extends</span> <span class="title">Feign</span>.<span class="title">Builder</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="meta">@SuppressWarnings(&quot;all&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> ApplicationContext applicationContext;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> DubboReference defaultReference;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">DefaultReferenceClass</span> </span>&#123;</span><br><span class="line">        <span class="meta">@DubboReference(check = false)</span></span><br><span class="line">        String field;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DubboFeignBuilder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.defaultReference = Objects.requireNonNull(ReflectionUtils.findField(DefaultReferenceClass.class, <span class="string">&quot;field&quot;</span>)).getAnnotation(DubboReference.class);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; <span class="function">T <span class="title">target</span><span class="params">(Target&lt;T&gt; target)</span> </span>&#123;</span><br><span class="line">        ReferenceBeanBuilder beanBuilder = ReferenceBeanBuilder.create(fromMap(getAttributes(defaultReference,</span><br><span class="line">                applicationContext.getEnvironment(), <span class="keyword">true</span>)), applicationContext).interfaceClass(target.type());</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            T object = (T) beanBuilder.build().getObject();</span><br><span class="line">            <span class="keyword">return</span> object;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.apache.dubbo.common.utils.ArrayUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.dubbo.config.MethodConfig;</span><br><span class="line"><span class="keyword">import</span> org.apache.dubbo.config.annotation.DubboService;</span><br><span class="line"><span class="keyword">import</span> org.apache.dubbo.config.annotation.Method;</span><br><span class="line"><span class="keyword">import</span> org.apache.dubbo.config.annotation.Service;</span><br><span class="line"><span class="keyword">import</span> org.apache.dubbo.config.spring.ServiceBean;</span><br><span class="line"><span class="keyword">import</span> org.apache.dubbo.config.spring.context.DubboBootstrapApplicationListener;</span><br><span class="line"><span class="keyword">import</span> org.apache.dubbo.config.spring.context.annotation.DubboClassPathBeanDefinitionScanner;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeansException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.MutablePropertyValues;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.BeanClassLoaderAware;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.config.*;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.support.*;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.openfeign.FeignClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.EnvironmentAware;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ResourceLoaderAware;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.AnnotationBeanNameGenerator;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.AnnotationConfigUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.ClassPathBeanDefinitionScanner;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.ConfigurationClassPostProcessor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.annotation.AnnotationAttributes;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.env.Environment;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.io.ResourceLoader;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.type.filter.AnnotationTypeFilter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Annotation;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> com.alibaba.spring.util.AnnotationUtils.getAttribute;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> com.alibaba.spring.util.BeanRegistrar.registerInfrastructureBean;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> com.alibaba.spring.util.ObjectUtils.of;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> java.util.Arrays.asList;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.apache.dubbo.config.spring.beans.factory.annotation.ServiceBeanNameBuilder.create;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.springframework.context.annotation.AnnotationConfigUtils.CONFIGURATION_BEAN_NAME_GENERATOR;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.springframework.core.annotation.AnnotatedElementUtils.findMergedAnnotation;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.springframework.core.annotation.AnnotationUtils.getAnnotationAttributes;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.springframework.util.ClassUtils.getAllInterfacesForClass;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.springframework.util.ClassUtils.resolveClassName;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.springframework.util.StringUtils.hasText;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DubboFeignProviderBeanPostProcessor</span> <span class="keyword">implements</span> <span class="title">BeanDefinitionRegistryPostProcessor</span>, <span class="title">EnvironmentAware</span>,</span></span><br><span class="line"><span class="class">        <span class="title">ResourceLoaderAware</span>, <span class="title">BeanClassLoaderAware</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> List&lt;Class&lt;? extends Annotation&gt;&gt; serviceAnnotationTypes = asList(</span><br><span class="line">            <span class="comment">// @since 2.7.7 Add the @DubboService , the issue : https://github.com/apache/dubbo/issues/6007</span></span><br><span class="line">            DubboService.class,</span><br><span class="line">            <span class="comment">// @since 2.7.0 the substitute @com.alibaba.dubbo.config.annotation.Service</span></span><br><span class="line">            Service.class,</span><br><span class="line">            <span class="comment">// @since 2.7.3 Add the compatibility for legacy Dubbo&#x27;s @Service , the issue : https://github.com/apache/dubbo/issues/4330</span></span><br><span class="line">            com.alibaba.dubbo.config.annotation.Service.class</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String SEPARATOR = <span class="string">&quot;:&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Set&lt;String&gt; packagesToScan;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Environment environment;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ResourceLoader resourceLoader;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ClassLoader classLoader;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> DubboService defaultService;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DubboFeignProviderBeanPostProcessor</span><span class="params">(String... packagesToScan)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(Arrays.asList(packagesToScan));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DubboFeignProviderBeanPostProcessor</span><span class="params">(Collection&lt;String&gt; packagesToScan)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(<span class="keyword">new</span> LinkedHashSet&lt;String&gt;(packagesToScan));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DubboFeignProviderBeanPostProcessor</span><span class="params">(Set&lt;String&gt; packagesToScan)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.packagesToScan = packagesToScan;</span><br><span class="line">        <span class="meta">@DubboService</span></span><br><span class="line">        <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">DefaultServiceClass</span> </span>&#123;</span><br><span class="line">        &#125;</span><br><span class="line">        ;</span><br><span class="line">        <span class="keyword">this</span>.defaultService = DefaultServiceClass.class.getAnnotation(DubboService.class);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">postProcessBeanDefinitionRegistry</span><span class="params">(BeanDefinitionRegistry registry)</span> <span class="keyword">throws</span> BeansException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// @since 2.7.5</span></span><br><span class="line">        registerInfrastructureBean(registry, DubboBootstrapApplicationListener.BEAN_NAME, DubboBootstrapApplicationListener.class);</span><br><span class="line"></span><br><span class="line">        Set&lt;String&gt; resolvedPackagesToScan = resolvePackagesToScan(packagesToScan);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!CollectionUtils.isEmpty(resolvedPackagesToScan)) &#123;</span><br><span class="line">            registerServiceBeans(resolvedPackagesToScan, registry);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            log.warn(<span class="string">&quot;packagesToScan is empty , ServiceBean registry will be ignored!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Registers Beans whose classes was annotated &#123;<span class="doctag">@link</span> FeignClient&#125;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> packagesToScan The base packages to scan</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> registry       &#123;<span class="doctag">@link</span> BeanDefinitionRegistry&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">registerServiceBeans</span><span class="params">(Set&lt;String&gt; packagesToScan, BeanDefinitionRegistry registry)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        DubboClassPathBeanDefinitionScanner scanner =</span><br><span class="line">                <span class="keyword">new</span> DubboClassPathBeanDefinitionScanner(registry, environment, resourceLoader);</span><br><span class="line"></span><br><span class="line">        BeanNameGenerator beanNameGenerator = resolveBeanNameGenerator(registry);</span><br><span class="line"></span><br><span class="line">        scanner.setBeanNameGenerator(beanNameGenerator);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// refactor @since 2.7.7</span></span><br><span class="line">        serviceAnnotationTypes.forEach(annotationType -&gt; &#123;</span><br><span class="line">            scanner.addIncludeFilter(<span class="keyword">new</span> AnnotationTypeFilter(annotationType));</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (String packageToScan : packagesToScan) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Registers @DubboService Bean first</span></span><br><span class="line">            scanner.scan(packageToScan);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Finds all BeanDefinitionHolders of @DubboService whether @ComponentScan scans or not.</span></span><br><span class="line">            Set&lt;BeanDefinitionHolder&gt; beanDefinitionHolders =</span><br><span class="line">                    findServiceBeanDefinitionHolders(scanner, packageToScan, registry, beanNameGenerator);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (!CollectionUtils.isEmpty(beanDefinitionHolders)) &#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span> (BeanDefinitionHolder beanDefinitionHolder : beanDefinitionHolders) &#123;</span><br><span class="line">                    registerServiceBean(beanDefinitionHolder, registry, scanner);</span><br><span class="line">                &#125;</span><br><span class="line">                log.info(beanDefinitionHolders.size() + <span class="string">&quot; annotated Dubbo&#x27;s @DubboService Components &#123; &quot;</span> +</span><br><span class="line">                        beanDefinitionHolders +</span><br><span class="line">                        <span class="string">&quot; &#125; were scanned under package[&quot;</span> + packageToScan + <span class="string">&quot;]&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                log.warn(<span class="string">&quot;No Spring Bean annotating Dubbo&#x27;s @DubboService was found under package[&quot;</span></span><br><span class="line">                        + packageToScan + <span class="string">&quot;]&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * It&#x27;d better to use BeanNameGenerator instance that should reference</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@link</span> ConfigurationClassPostProcessor&#125;,</span></span><br><span class="line"><span class="comment">     * thus it maybe a potential problem on bean name generation.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> registry &#123;<span class="doctag">@link</span> BeanDefinitionRegistry&#125;</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> &#123;<span class="doctag">@link</span> BeanNameGenerator&#125; instance</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@see</span> SingletonBeanRegistry</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@see</span> AnnotationConfigUtils#CONFIGURATION_BEAN_NAME_GENERATOR</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@see</span> ConfigurationClassPostProcessor#processConfigBeanDefinitions</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@since</span> 2.5.8</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> BeanNameGenerator <span class="title">resolveBeanNameGenerator</span><span class="params">(BeanDefinitionRegistry registry)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        BeanNameGenerator beanNameGenerator = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (registry <span class="keyword">instanceof</span> SingletonBeanRegistry) &#123;</span><br><span class="line">            SingletonBeanRegistry singletonBeanRegistry = SingletonBeanRegistry.class.cast(registry);</span><br><span class="line">            beanNameGenerator = (BeanNameGenerator) singletonBeanRegistry.getSingleton(CONFIGURATION_BEAN_NAME_GENERATOR);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (beanNameGenerator == <span class="keyword">null</span>) &#123;</span><br><span class="line">            log.info(<span class="string">&quot;BeanNameGenerator bean can&#x27;t be found in BeanFactory with name [&quot;</span></span><br><span class="line">                    + CONFIGURATION_BEAN_NAME_GENERATOR + <span class="string">&quot;]&quot;</span>);</span><br><span class="line">            log.info(<span class="string">&quot;BeanNameGenerator will be a instance of &quot;</span> +</span><br><span class="line">                    AnnotationBeanNameGenerator.class.getName() +</span><br><span class="line">                    <span class="string">&quot; , it maybe a potential problem on bean name generation.&quot;</span>);</span><br><span class="line">            beanNameGenerator = <span class="keyword">new</span> AnnotationBeanNameGenerator();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> beanNameGenerator;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Finds a &#123;<span class="doctag">@link</span> Set&#125; of &#123;<span class="doctag">@link</span> BeanDefinitionHolder BeanDefinitionHolders&#125; whose bean type annotated</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@link</span> DubboService&#125; Annotation.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> scanner       &#123;<span class="doctag">@link</span> ClassPathBeanDefinitionScanner&#125;</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> packageToScan pachage to scan</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> registry      &#123;<span class="doctag">@link</span> BeanDefinitionRegistry&#125;</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> non-null</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@since</span> 2.5.8</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Set&lt;BeanDefinitionHolder&gt; <span class="title">findServiceBeanDefinitionHolders</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">            ClassPathBeanDefinitionScanner scanner, String packageToScan, BeanDefinitionRegistry registry,</span></span></span><br><span class="line"><span class="function"><span class="params">            BeanNameGenerator beanNameGenerator)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        Set&lt;BeanDefinition&gt; beanDefinitions = scanner.findCandidateComponents(packageToScan);</span><br><span class="line"></span><br><span class="line">        Set&lt;BeanDefinitionHolder&gt; beanDefinitionHolders = <span class="keyword">new</span> LinkedHashSet&lt;BeanDefinitionHolder&gt;(beanDefinitions.size());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (BeanDefinition beanDefinition : beanDefinitions) &#123;</span><br><span class="line"></span><br><span class="line">            String beanName = beanNameGenerator.generateBeanName(beanDefinition, registry);</span><br><span class="line">            BeanDefinitionHolder beanDefinitionHolder = <span class="keyword">new</span> BeanDefinitionHolder(beanDefinition, beanName);</span><br><span class="line">            beanDefinitionHolders.add(beanDefinitionHolder);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> beanDefinitionHolders;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Registers &#123;<span class="doctag">@link</span> ServiceBean&#125; from new annotated &#123;<span class="doctag">@link</span> DubboService&#125; &#123;<span class="doctag">@link</span> BeanDefinition&#125;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> beanDefinitionHolder</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> registry</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> scanner</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@see</span> ServiceBean</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@see</span> BeanDefinition</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">registerServiceBean</span><span class="params">(BeanDefinitionHolder beanDefinitionHolder, BeanDefinitionRegistry registry,</span></span></span><br><span class="line"><span class="function"><span class="params">                                     DubboClassPathBeanDefinitionScanner scanner)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        Class&lt;?&gt; beanClass = resolveClass(beanDefinitionHolder);</span><br><span class="line"></span><br><span class="line">        Annotation service = findServiceAnnotation(beanClass);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * The &#123;<span class="doctag">@link</span> AnnotationAttributes&#125; of <span class="doctag">@Service</span> annotation</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        AnnotationAttributes serviceAnnotationAttributes = getAnnotationAttributes(service, <span class="keyword">false</span>, <span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line">        Class&lt;?&gt; interfaceClass = resolveServiceInterfaceClass(serviceAnnotationAttributes, beanClass);</span><br><span class="line"></span><br><span class="line">        String annotatedServiceBeanName = beanDefinitionHolder.getBeanName();</span><br><span class="line"></span><br><span class="line">        AbstractBeanDefinition serviceBeanDefinition =</span><br><span class="line">                buildServiceBeanDefinition(service, serviceAnnotationAttributes, interfaceClass, annotatedServiceBeanName);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// ServiceBean Bean name</span></span><br><span class="line">        String beanName = generateServiceBeanName(serviceAnnotationAttributes, interfaceClass);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (scanner.checkCandidate(beanName, serviceBeanDefinition)) &#123; <span class="comment">// check duplicated candidate bean</span></span><br><span class="line">            registry.registerBeanDefinition(beanName, serviceBeanDefinition);</span><br><span class="line">            log.warn(<span class="string">&quot;The BeanDefinition[&quot;</span> + serviceBeanDefinition +</span><br><span class="line">                    <span class="string">&quot;] of ServiceBean has been registered with name : &quot;</span> + beanName);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            log.warn(<span class="string">&quot;The Duplicated BeanDefinition[&quot;</span> + serviceBeanDefinition +</span><br><span class="line">                    <span class="string">&quot;] of ServiceBean[ bean name : &quot;</span> + beanName +</span><br><span class="line">                    <span class="string">&quot;] was be found , Did @DubboComponentScan scan to same package in many times?&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Generates the bean name of &#123;<span class="doctag">@link</span> ServiceBean&#125;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> serviceAnnotationAttributes</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> interfaceClass              the class of interface annotated &#123;<span class="doctag">@link</span> Service&#125;</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> ServiceBean@interfaceClassName#annotatedServiceBeanName</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@since</span> 2.7.3</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">generateServiceBeanName</span><span class="params">(AnnotationAttributes serviceAnnotationAttributes, Class&lt;?&gt; interfaceClass)</span> </span>&#123;</span><br><span class="line">        ServiceBeanNameBuilder builder = create(interfaceClass, environment)</span><br><span class="line">                .group(serviceAnnotationAttributes.getString(<span class="string">&quot;group&quot;</span>))</span><br><span class="line">                .version(serviceAnnotationAttributes.getString(<span class="string">&quot;version&quot;</span>));</span><br><span class="line">        <span class="keyword">return</span> builder.build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Class&lt;?&gt; resolveServiceInterfaceClass(AnnotationAttributes attributes, Class&lt;?&gt; defaultInterfaceClass)</span><br><span class="line">            <span class="keyword">throws</span> IllegalArgumentException &#123;</span><br><span class="line"></span><br><span class="line">        ClassLoader classLoader = defaultInterfaceClass != <span class="keyword">null</span> ? defaultInterfaceClass.getClassLoader() : Thread.currentThread().getContextClassLoader();</span><br><span class="line">        Class&lt;?&gt; interfaceClass = getAttribute(attributes, <span class="string">&quot;interfaceClass&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">void</span>.class.equals(interfaceClass)) &#123;</span><br><span class="line"></span><br><span class="line">            interfaceClass = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">            String interfaceClassName = getAttribute(attributes, <span class="string">&quot;interfaceName&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (hasText(interfaceClassName)) &#123;</span><br><span class="line">                <span class="keyword">if</span> (ClassUtils.isPresent(interfaceClassName, classLoader)) &#123;</span><br><span class="line">                    interfaceClass = resolveClassName(interfaceClassName, classLoader);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (interfaceClass == <span class="keyword">null</span> &amp;&amp; defaultInterfaceClass != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">// Find all interfaces from the annotated class</span></span><br><span class="line">            <span class="comment">// To resolve an issue : https://github.com/apache/dubbo/issues/3251</span></span><br><span class="line">            Class&lt;?&gt;[] allInterfaces = getAllInterfacesForClass(defaultInterfaceClass);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (allInterfaces.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                interfaceClass = allInterfaces[<span class="number">0</span>];</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        Assert.notNull(interfaceClass,</span><br><span class="line">                <span class="string">&quot;@Service interfaceClass() or interfaceName() or interface class must be present!&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Assert.isTrue(interfaceClass.isInterface(),</span><br><span class="line">                <span class="string">&quot;The annotated type must be an interface!&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> interfaceClass;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Class&lt;?&gt; resolveClass(BeanDefinitionHolder beanDefinitionHolder) &#123;</span><br><span class="line"></span><br><span class="line">        BeanDefinition beanDefinition = beanDefinitionHolder.getBeanDefinition();</span><br><span class="line">        <span class="keyword">return</span> resolveClass(beanDefinition);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Class&lt;?&gt; resolveClass(BeanDefinition beanDefinition) &#123;</span><br><span class="line"></span><br><span class="line">        String beanClassName = beanDefinition.getBeanClassName();</span><br><span class="line">        <span class="keyword">return</span> resolveClassName(beanClassName, classLoader);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Find the &#123;<span class="doctag">@link</span> Annotation annotation&#125; of <span class="doctag">@Service</span></span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> beanClass the &#123;<span class="doctag">@link</span> Class class&#125; of Bean</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> &lt;code&gt;null&lt;/code&gt; if not found</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@since</span> 2.7.3</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Annotation <span class="title">findServiceAnnotation</span><span class="params">(Class&lt;?&gt; beanClass)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> serviceAnnotationTypes</span><br><span class="line">                .stream()</span><br><span class="line">                .map(annotationType -&gt; findMergedAnnotation(beanClass, annotationType))</span><br><span class="line">                .filter(Objects::nonNull)</span><br><span class="line">                .findFirst()</span><br><span class="line">                .orElse(<span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Set&lt;String&gt; <span class="title">resolvePackagesToScan</span><span class="params">(Set&lt;String&gt; packagesToScan)</span> </span>&#123;</span><br><span class="line">        Set&lt;String&gt; resolvedPackagesToScan = <span class="keyword">new</span> LinkedHashSet&lt;String&gt;(packagesToScan.size());</span><br><span class="line">        <span class="keyword">for</span> (String packageToScan : packagesToScan) &#123;</span><br><span class="line">            <span class="keyword">if</span> (StringUtils.hasText(packageToScan)) &#123;</span><br><span class="line">                String resolvedPackageToScan = environment.resolvePlaceholders(packageToScan.trim());</span><br><span class="line">                resolvedPackagesToScan.add(resolvedPackageToScan);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> resolvedPackagesToScan;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Build the &#123;<span class="doctag">@link</span> AbstractBeanDefinition Bean Definition&#125;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> serviceAnnotation</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> serviceAnnotationAttributes</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> interfaceClass</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> annotatedServiceBeanName</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@since</span> 2.7.3</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> AbstractBeanDefinition <span class="title">buildServiceBeanDefinition</span><span class="params">(Annotation serviceAnnotation,</span></span></span><br><span class="line"><span class="function"><span class="params">                                                              AnnotationAttributes serviceAnnotationAttributes,</span></span></span><br><span class="line"><span class="function"><span class="params">                                                              Class&lt;?&gt; interfaceClass,</span></span></span><br><span class="line"><span class="function"><span class="params">                                                              String annotatedServiceBeanName)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        BeanDefinitionBuilder builder = rootBeanDefinition(ServiceBean.class);</span><br><span class="line"></span><br><span class="line">        AbstractBeanDefinition beanDefinition = builder.getBeanDefinition();</span><br><span class="line"></span><br><span class="line">        MutablePropertyValues propertyValues = beanDefinition.getPropertyValues();</span><br><span class="line"></span><br><span class="line">        String[] ignoreAttributeNames = of(<span class="string">&quot;provider&quot;</span>, <span class="string">&quot;monitor&quot;</span>, <span class="string">&quot;application&quot;</span>, <span class="string">&quot;module&quot;</span>, <span class="string">&quot;registry&quot;</span>, <span class="string">&quot;protocol&quot;</span>,</span><br><span class="line">                <span class="string">&quot;interface&quot;</span>, <span class="string">&quot;interfaceName&quot;</span>, <span class="string">&quot;parameters&quot;</span>);</span><br><span class="line"></span><br><span class="line">        propertyValues.addPropertyValues(<span class="keyword">new</span> AnnotationPropertyValuesAdapter(serviceAnnotation, environment, ignoreAttributeNames));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// References &quot;ref&quot; property to annotated-@Service Bean</span></span><br><span class="line">        addPropertyReference(builder, <span class="string">&quot;ref&quot;</span>, annotatedServiceBeanName);</span><br><span class="line">        <span class="comment">// Set interface</span></span><br><span class="line">        builder.addPropertyValue(<span class="string">&quot;interface&quot;</span>, interfaceClass.getName());</span><br><span class="line">        <span class="comment">// Convert parameters into map</span></span><br><span class="line">        builder.addPropertyValue(<span class="string">&quot;parameters&quot;</span>, convertParameters(serviceAnnotationAttributes.getStringArray(<span class="string">&quot;parameters&quot;</span>)));</span><br><span class="line">        <span class="comment">// Add methods parameters</span></span><br><span class="line">        List&lt;MethodConfig&gt; methodConfigs = convertMethodConfigs(serviceAnnotationAttributes.get(<span class="string">&quot;methods&quot;</span>));</span><br><span class="line">        <span class="keyword">if</span> (!methodConfigs.isEmpty()) &#123;</span><br><span class="line">            builder.addPropertyValue(<span class="string">&quot;methods&quot;</span>, methodConfigs);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * Add &#123;<span class="doctag">@link</span> org.apache.dubbo.config.ProviderConfig&#125; Bean reference</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        String providerConfigBeanName = serviceAnnotationAttributes.getString(<span class="string">&quot;provider&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.hasText(providerConfigBeanName)) &#123;</span><br><span class="line">            addPropertyReference(builder, <span class="string">&quot;provider&quot;</span>, providerConfigBeanName);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * Add &#123;<span class="doctag">@link</span> org.apache.dubbo.config.MonitorConfig&#125; Bean reference</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        String monitorConfigBeanName = serviceAnnotationAttributes.getString(<span class="string">&quot;monitor&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.hasText(monitorConfigBeanName)) &#123;</span><br><span class="line">            addPropertyReference(builder, <span class="string">&quot;monitor&quot;</span>, monitorConfigBeanName);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * Add &#123;<span class="doctag">@link</span> org.apache.dubbo.config.ApplicationConfig&#125; Bean reference</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        String applicationConfigBeanName = serviceAnnotationAttributes.getString(<span class="string">&quot;application&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.hasText(applicationConfigBeanName)) &#123;</span><br><span class="line">            addPropertyReference(builder, <span class="string">&quot;application&quot;</span>, applicationConfigBeanName);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * Add &#123;<span class="doctag">@link</span> org.apache.dubbo.config.ModuleConfig&#125; Bean reference</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        String moduleConfigBeanName = serviceAnnotationAttributes.getString(<span class="string">&quot;module&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.hasText(moduleConfigBeanName)) &#123;</span><br><span class="line">            addPropertyReference(builder, <span class="string">&quot;module&quot;</span>, moduleConfigBeanName);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * Add &#123;<span class="doctag">@link</span> org.apache.dubbo.config.RegistryConfig&#125; Bean reference</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        String[] registryConfigBeanNames = serviceAnnotationAttributes.getStringArray(<span class="string">&quot;registry&quot;</span>);</span><br><span class="line"></span><br><span class="line">        List&lt;RuntimeBeanReference&gt; registryRuntimeBeanReferences = toRuntimeBeanReferences(registryConfigBeanNames);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!registryRuntimeBeanReferences.isEmpty()) &#123;</span><br><span class="line">            builder.addPropertyValue(<span class="string">&quot;registries&quot;</span>, registryRuntimeBeanReferences);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * Add &#123;<span class="doctag">@link</span> org.apache.dubbo.config.ProtocolConfig&#125; Bean reference</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        String[] protocolConfigBeanNames = serviceAnnotationAttributes.getStringArray(<span class="string">&quot;protocol&quot;</span>);</span><br><span class="line"></span><br><span class="line">        List&lt;RuntimeBeanReference&gt; protocolRuntimeBeanReferences = toRuntimeBeanReferences(protocolConfigBeanNames);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!protocolRuntimeBeanReferences.isEmpty()) &#123;</span><br><span class="line">            builder.addPropertyValue(<span class="string">&quot;protocols&quot;</span>, protocolRuntimeBeanReferences);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> builder.getBeanDefinition();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> ManagedList&lt;RuntimeBeanReference&gt; <span class="title">toRuntimeBeanReferences</span><span class="params">(String... beanNames)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        ManagedList&lt;RuntimeBeanReference&gt; runtimeBeanReferences = <span class="keyword">new</span> ManagedList&lt;RuntimeBeanReference&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!ObjectUtils.isEmpty(beanNames)) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (String beanName : beanNames) &#123;</span><br><span class="line"></span><br><span class="line">                String resolvedBeanName = environment.resolvePlaceholders(beanName);</span><br><span class="line"></span><br><span class="line">                runtimeBeanReferences.add(<span class="keyword">new</span> RuntimeBeanReference(resolvedBeanName));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> runtimeBeanReferences;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">addPropertyReference</span><span class="params">(BeanDefinitionBuilder builder, String propertyName, String beanName)</span> </span>&#123;</span><br><span class="line">        String resolvedBeanName = environment.resolvePlaceholders(beanName);</span><br><span class="line">        builder.addPropertyReference(propertyName, resolvedBeanName);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">postProcessBeanFactory</span><span class="params">(ConfigurableListableBeanFactory beanFactory)</span> <span class="keyword">throws</span> BeansException </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEnvironment</span><span class="params">(Environment environment)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.environment = environment;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setResourceLoader</span><span class="params">(ResourceLoader resourceLoader)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.resourceLoader = resourceLoader;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBeanClassLoader</span><span class="params">(ClassLoader classLoader)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.classLoader = classLoader;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> List <span class="title">convertMethodConfigs</span><span class="params">(Object methodsAnnotation)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (methodsAnnotation == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> Collections.EMPTY_LIST;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> MethodConfig.constructMethodConfig((Method[]) methodsAnnotation);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Map&lt;String, String&gt; <span class="title">convertParameters</span><span class="params">(String[] parameters)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (ArrayUtils.isEmpty(parameters)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (parameters.length % <span class="number">2</span> != <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">&quot;parameter attribute must be paired with key followed by value&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Map&lt;String, String&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; parameters.length; i += <span class="number">2</span>) &#123;</span><br><span class="line">            map.put(parameters[i], parameters[i + <span class="number">1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> map;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> feign.Feign;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.apache.dubbo.config.AbstractConfig;</span><br><span class="line"><span class="keyword">import</span> org.apache.dubbo.config.spring.beans.factory.annotation.DubboFeignBuilder;</span><br><span class="line"><span class="keyword">import</span> org.apache.dubbo.config.spring.beans.factory.annotation.DubboFeignProviderBeanPostProcessor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.condition.ConditionalOnClass;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.source.ConfigurationPropertySources;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Primary;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.env.Environment;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> java.util.Collections.emptySet;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.apache.dubbo.spring.boot.util.DubboUtils.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Dubbo配置</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ConditionalOnProperty(prefix = DUBBO_PREFIX, name = &quot;enabled&quot;, matchIfMissing = true, havingValue = &quot;true&quot;)</span></span><br><span class="line"><span class="meta">@ConditionalOnClass(AbstractConfig.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DubboFeignConfiguration</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ConditionalOnProperty(prefix = DUBBO_SCAN_PREFIX, name = BASE_PACKAGES_PROPERTY_NAME)</span></span><br><span class="line">    <span class="meta">@ConditionalOnClass(ConfigurationPropertySources.class)</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> DubboFeignProviderBeanPostProcessor <span class="title">dubboFeignProviderBeanPostProcessor</span><span class="params">(Environment environment)</span> </span>&#123;</span><br><span class="line">        Set&lt;String&gt; packagesToScan = environment.getProperty(DUBBO_SCAN_PREFIX + BASE_PACKAGES_PROPERTY_NAME, Set.class, emptySet());</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> DubboFeignProviderBeanPostProcessor(packagesToScan);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Primary</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> Feign.<span class="function">Builder <span class="title">feignDubboBuilder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> DubboFeignBuilder();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这种方式我目前没有实践过 代码参考 <a href="https://github.com/matevip/matecloud">https://github.com/matevip/matecloud</a> 的 mate-starter-dubbo 模块</p><h2 id="2-dubbo-单独使用"><a href="#2-dubbo-单独使用" class="headerlink" title="2 dubbo 单独使用"></a>2 dubbo 单独使用<span id="2"></span></h2><p>首先 代码前提是 SpringCloud Nacos</p><h3 id="provider"><a href="#provider" class="headerlink" title="provider"></a>provider</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">provider</span>   <span class="comment">#你的provider 名称 填写到 下面的 subscribed-services 中</span></span><br><span class="line"></span><br><span class="line"><span class="attr">dubbo:</span></span><br><span class="line">    <span class="attr">cloud:</span></span><br><span class="line">      <span class="attr">subscribed-services:</span> <span class="string">provider</span> <span class="comment">#这里要填写 $&#123;spring.application.name&#125; 表示自己订阅自己 否则默认是 &#x27;*&#x27; 会订阅所有服务</span></span><br><span class="line">      <span class="comment">#https://github.com/alibaba/spring-cloud-alibaba/issues/1564</span></span><br><span class="line">      <span class="comment">#https://github.com/alibaba/spring-cloud-alibaba/issues/1141</span></span><br><span class="line">    <span class="attr">protocol:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">dubbo</span></span><br><span class="line">        <span class="comment">#-1是自增长</span></span><br><span class="line">        <span class="attr">port:</span> <span class="number">-1</span></span><br><span class="line">    <span class="attr">registry:</span></span><br><span class="line">        <span class="attr">address:</span> <span class="string">nacos://$&#123;spring.cloud.nacos.config.server-addr&#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#address: spring-cloud://127.0.0.1  </span></span><br></pre></td></tr></table></figure><blockquote><ul><li><code>dubbo.scan.base-packages</code>：指定 Dubbo 服务实现类的扫描基准包</li><li><code>dubbo.protocol</code>：Dubbo服务暴露的协议配置，其中子属性name为协议名称，port为协议端口（-1 表示自增端口，从 20880 开始）</li><li><code>dubbo.registry</code>：Dubbo 服务注册中心配置，其中子属性address 的值 “spring-cloud://192.168.44.129”，说明挂载到 Spring Cloud 注册中心</li><li><code>spring.application.name</code>：Spring 应用名称，用于 Spring Cloud 服务注册和发现。该值在 Dubbo Spring Cloud 加持下被视作<code>dubbo.application.name</code>，因此，无需再显示地配置<code>dubbo.application.name</code>。</li><li><code>spring.main.allow-bean-definition-overriding</code>：在 Spring Boot 2.1 以及更高的版本增加该设定，因为 Spring Boot 默认调整了 Bean 定义覆盖行为。</li><li><code>spring.cloud.nacos.discovery</code>：Nacos 服务发现与注册配置，其中子属性 server-addr 指定 Nacos 服务器主机和端口。</li></ul></blockquote><p><code>dubbo.scan.base-packages</code> 这个可以用 @DubboComponentScan 替代</p><p>配置文件我都放到 nacos 中公用了 这里就用 注解来扫描吧 毕竟每个 provider 扫描的包可能不一样</p><p>先定义一个基础 api 包</p><p>添加上接口</p><p> 在 provider 中实现该接口 并添加 @DubboService 注解</p><h3 id="consumer"><a href="#consumer" class="headerlink" title="consumer"></a>consumer</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">dubbo:</span></span><br><span class="line">    <span class="attr">protocol:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">dubbo</span></span><br><span class="line">        <span class="attr">port:</span> <span class="number">-1</span></span><br><span class="line">    <span class="attr">registry:</span></span><br><span class="line">        <span class="attr">address:</span> <span class="string">nacos://$&#123;spring.cloud.nacos.config.server-addr&#125;</span></span><br><span class="line">    <span class="attr">cloud:</span></span><br><span class="line">      <span class="attr">subscribed-services:</span> <span class="string">provider</span>  <span class="comment">#要订阅的服务  默认是 * </span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">consumer</span></span><br><span class="line">  <span class="attr">main:</span></span><br><span class="line">    <span class="attr">allow-bean-definition-overriding:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">config:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8848</span>   <span class="comment">#registry address 引用这个</span></span><br><span class="line">        <span class="attr">file-extension:</span> <span class="string">yml</span></span><br><span class="line">        <span class="attr">shared-configs:</span></span><br><span class="line">           <span class="bullet">-</span> <span class="attr">data-id:</span> <span class="string">application-$&#123;spring.profiles.active&#125;.$&#123;spring.cloud.nacos.config.file-extension&#125;</span></span><br><span class="line">           <span class="bullet">-</span> <span class="attr">data-id:</span> <span class="string">database-$&#123;spring.profiles.active&#125;.$&#123;spring.cloud.nacos.config.file-extension&#125;</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8848</span></span><br></pre></td></tr></table></figure><p>需要调用 provider 的地方使用</p><p>@DubboReference 注解需要调用的接口即可</p><p>具体可以参考</p><p><a href="https://github.com/nemowang/springcloud-dubbo-nacos-example">https://github.com/nemowang/springcloud-dubbo-nacos-example</a></p><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><h4 id="consumer-先启动不报错配置"><a href="#consumer-先启动不报错配置" class="headerlink" title="consumer 先启动不报错配置"></a>consumer 先启动不报错配置</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.dubbo.config.ConsumerConfig;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DubboConfig</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 消费者配置不主动监督服务</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ConsumerConfig <span class="title">consumerConfig</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       ConsumerConfig consumerConfig = <span class="keyword">new</span> ConsumerConfig();</span><br><span class="line">       consumerConfig.setCheck(<span class="keyword">false</span>);</span><br><span class="line">       consumerConfig.setTimeout(<span class="number">5000</span>);</span><br><span class="line">       <span class="keyword">return</span> consumerConfig;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="链路追踪"><a href="#链路追踪" class="headerlink" title="链路追踪"></a>链路追踪</h4><p>消费者 访问 供应者 前把追踪码携带到请求中</p><p>MDC 在 “2021-03-31分布式 日志追踪 链路追踪.md” 中有提到过</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Activate(group = CommonConstants.CONSUMER)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DubboConsumerFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Result <span class="title">invoke</span><span class="params">(Invoker&lt;?&gt; invoker, Invocation invocation)</span> </span>&#123;</span><br><span class="line">RpcContext context = RpcContext.getContext();</span><br><span class="line">        String trace = MDC.get(<span class="string">&quot;logTrackId&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(trace != <span class="keyword">null</span>) </span><br><span class="line">context.setAttachment(<span class="string">&quot;logTrackId&quot;</span>, trace);</span><br><span class="line">Result result =  invoker.invoke(invocation);</span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>供应者在执行准确方法前把追踪码放入 MDC</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Activate(group = CommonConstants.PROVIDER)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DubboProviderFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Result <span class="title">invoke</span><span class="params">(Invoker&lt;?&gt; invoker, Invocation invocation)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//消费者携带的参数</span></span><br><span class="line">Map&lt;String, Object&gt; attachments = RpcContext.getContext().getObjectAttachments();</span><br><span class="line">String trace = attachments.get(<span class="string">&quot;logTrackId&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(trace != <span class="keyword">null</span>) </span><br><span class="line">MDC.set(<span class="string">&quot;logTrackId&quot;</span>,trace);</span><br><span class="line">Result result =  invoker.invoke(invocation);</span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>链路追踪 完~</p><h4 id="封装-dubbo-隐式传递"><a href="#封装-dubbo-隐式传递" class="headerlink" title="封装 dubbo 隐式传递"></a>封装 dubbo 隐式传递</h4><p>如果在调用 dubbo时 需要传递或转换的信息较多可以用一下方式处理</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Activate(group = CommonConstants.CONSUMER)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DubboConsumerFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Result <span class="title">invoke</span><span class="params">(Invoker&lt;?&gt; invoker, Invocation invocation)</span> </span>&#123;</span><br><span class="line">RpcContext context = RpcContext.getContext();</span><br><span class="line"><span class="keyword">for</span> (DubboProcess processor : ProcessUtils.getAllProcessor()) &#123;</span><br><span class="line">processor.before(context);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">long</span> startTime = System.currentTimeMillis();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">Result result =  invoker.invoke(invocation);</span><br><span class="line"><span class="keyword">for</span>(DubboTransfer transfer : TransferUtils.getAllTransfer()) &#123;</span><br><span class="line">result = transfer.devanning(result);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line"><span class="keyword">long</span> endTime = System.currentTimeMillis();</span><br><span class="line">log.debug(<span class="string">&quot;Dubbo Call [&quot;</span> + context.getMethodName() + <span class="string">&quot;] Elapsed [&quot;</span> + (endTime - startTime) + <span class="string">&quot;]&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Activate(group = CommonConstants.PROVIDER)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DubboProviderFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Result <span class="title">invoke</span><span class="params">(Invoker&lt;?&gt; invoker, Invocation invocation)</span> </span>&#123;</span><br><span class="line">Map&lt;String, Object&gt; attachments = RpcContext.getContext().getObjectAttachments();</span><br><span class="line"><span class="keyword">for</span> (DubboProcess processor : ProcessUtils.getAllProcessor()) &#123;</span><br><span class="line">processor.after(attachments);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Result result =  invoker.invoke(invocation);</span><br><span class="line"><span class="keyword">for</span>(DubboTransfer transfer : TransferUtils.getAllTransfer()) &#123;</span><br><span class="line">result = transfer.encasement(result);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">DubboProcess</span> </span>&#123;</span><br><span class="line"><span class="keyword">static</span> String prefix = <span class="string">&quot;rpc_hide_param_&quot;</span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">(RpcContext context)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">after</span><span class="params">(Map&lt;String, Object&gt; params)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProcessUtils</span> </span>&#123;</span><br><span class="line"><span class="keyword">static</span> List&lt;DubboProcess&gt; list = <span class="keyword">null</span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> List&lt;DubboProcess&gt; <span class="title">getAllProcessor</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(list == <span class="keyword">null</span>) &#123;</span><br><span class="line">list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">List&lt;Class&lt;?&gt;&gt; processors = CommClass.getAllClassByInterface(DubboProcess.class, <span class="string">&quot;org.lqs1848.common.dubbo.process.impl&quot;</span>);</span><br><span class="line"><span class="keyword">for</span>(Class&lt;?&gt; p :  processors) &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">list.add((DubboProcess) p.newInstance());</span><br><span class="line">&#125; <span class="keyword">catch</span> (InstantiationException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">catch</span> (IllegalAccessException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> list;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//分页处理器</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PageProcess</span> <span class="keyword">implements</span> <span class="title">DubboProcess</span> </span>&#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">(RpcContext context)</span> </span>&#123;</span><br><span class="line">Page page = PagePass.getLocalPage();</span><br><span class="line"><span class="keyword">if</span>(page != <span class="keyword">null</span>) &#123;</span><br><span class="line">context.setAttachment(prefix + <span class="string">&quot;isStartPage&quot;</span>, page.getOrderBy());</span><br><span class="line">context.setAttachment(prefix + Constants.PAGE_NUM, page.getPageNum());</span><br><span class="line">context.setAttachment(prefix + Constants.PAGE_SIZE, page.getPageSize());</span><br><span class="line">context.setAttachment(prefix + Constants.IS_ASC, page.getOrderBy());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">after</span><span class="params">(Map&lt;String, Object&gt; params)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(params.containsKey(prefix + <span class="string">&quot;isStartPage&quot;</span>)) &#123;</span><br><span class="line">PagePass.tolerancePage(Convert.toInt(params.get(prefix + Constants.PAGE_NUM)), Convert.toInt(params.get(prefix + Constants.PAGE_SIZE)), Convert.toStr(params.get(prefix + Constants.IS_ASC)));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//分表标示携带</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SliciTableProcess</span> <span class="keyword">implements</span> <span class="title">DubboProcess</span> </span>&#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">(RpcContext context)</span> </span>&#123;</span><br><span class="line">Integer flag = SliciTableUtils.getCurSubFlag();</span><br><span class="line"><span class="keyword">if</span>(flag != <span class="keyword">null</span>)</span><br><span class="line">context.setAttachment(prefix + <span class="string">&quot;sliciTableFlag&quot;</span>, flag);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">after</span><span class="params">(Map&lt;String, Object&gt; params)</span> </span>&#123;</span><br><span class="line">SliciTableUtils.clearSubFlag();</span><br><span class="line">Integer flag = Convert.toInt(params.get(prefix + <span class="string">&quot;sliciTableFlag&quot;</span>));</span><br><span class="line"><span class="keyword">if</span>(flag != <span class="keyword">null</span>)</span><br><span class="line">SliciTableUtils.setCurSubFlag(flag);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//追踪码</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TraceProcess</span> <span class="keyword">implements</span> <span class="title">DubboProcess</span> </span>&#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">(RpcContext context)</span> </span>&#123;</span><br><span class="line">String trace = Convert.toStr(TraceUtils.getTrace());</span><br><span class="line"><span class="keyword">if</span>(trace != <span class="keyword">null</span>) </span><br><span class="line">context.setAttachment(prefix + <span class="string">&quot;logTrackId&quot;</span>, trace);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">after</span><span class="params">(Map&lt;String, Object&gt; params)</span> </span>&#123;</span><br><span class="line">String trace = Convert.toStr(params.get(prefix + <span class="string">&quot;logTrackId&quot;</span>));</span><br><span class="line"><span class="keyword">if</span>(trace != <span class="keyword">null</span>) </span><br><span class="line">TraceUtils.setTrace(trace);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">DubboTransfer</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">order</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="comment">//消费者实现</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Result <span class="title">devanning</span><span class="params">(Result result)</span></span>;</span><br><span class="line">    <span class="comment">//提供者实现</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Result <span class="title">encasement</span><span class="params">(Result result)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TransferUtils</span> </span>&#123;</span><br><span class="line"><span class="keyword">static</span> List&lt;DubboTransfer&gt; list = <span class="keyword">null</span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> List&lt;DubboTransfer&gt; <span class="title">getAllTransfer</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(list == <span class="keyword">null</span>) &#123;</span><br><span class="line">list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">List&lt;Class&lt;?&gt;&gt; transfers = CommClass.getAllClassByInterface(DubboTransfer.class, <span class="string">&quot;org.lqs1848.common.dubbo.transfer.impl&quot;</span>);</span><br><span class="line"><span class="keyword">for</span>(Class&lt;?&gt; p :  transfers) &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">list.add((DubboTransfer) p.newInstance());</span><br><span class="line">&#125; <span class="keyword">catch</span> (InstantiationException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">catch</span> (IllegalAccessException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">list.sort(<span class="keyword">new</span> Comparator&lt;DubboTransfer&gt;() &#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compare</span><span class="params">(DubboTransfer o1, DubboTransfer o2)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(o1.order() &gt; o2.order())</span><br><span class="line"><span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(o1.order() &lt; o2.order())</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> list;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//PageHelper 分页转换</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PageTransfer</span> <span class="keyword">implements</span> <span class="title">DubboTransfer</span> </span>&#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">order</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Result <span class="title">devanning</span><span class="params">(Result result)</span> </span>&#123;</span><br><span class="line">Object obj = result.getValue();</span><br><span class="line"><span class="keyword">if</span> (obj == <span class="keyword">null</span>)</span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">PageMessage page = (PageMessage) result.getObjectAttachment(<span class="string">&quot;PageMessage&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (page != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">//消费者 查看传递的参数中有 Page 的分页信息</span></span><br><span class="line">            <span class="comment">//把传输过程中丢失分页信息的 Page 重新封装成 PageHelper的Page</span></span><br><span class="line">result.setValue(page.getPageToPageHelper((List) obj));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Result <span class="title">encasement</span><span class="params">(Result result)</span> </span>&#123;</span><br><span class="line">Object obj = result.getValue();</span><br><span class="line"><span class="keyword">if</span> (obj == <span class="keyword">null</span>)</span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line"><span class="keyword">if</span> (obj <span class="keyword">instanceof</span> Page) &#123;</span><br><span class="line"><span class="comment">//提供者发现 返回的结果是 PageHelper 插件提供的 Page对象 把Page 转换成可以json传递的对象</span></span><br><span class="line">result.setAttachment(<span class="string">&quot;PageMessage&quot;</span>, <span class="keyword">new</span> PageMessage((Page)obj));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>process 用来传递参数 比如携带追踪码 分表标示信息 还有分页信息 等</p><p>​    MyBatis 的 PageHelper 插件的 Page 就是个 List 在传递过程中 被转换为 JSON 会丢失分页信息 所以 Page 需要单独处理</p><p>transfer 用来处理 result</p><p>这样封装后 有使用 dubbo的就集成这个jar包 provider和consumer都同时集成</p><p><strong>注意:</strong></p><p><strong>要让dubbo的过滤器生效必须配置</strong></p><p>​    <strong>META-INF 下添加 dubbo/internal/org.apache.dubbo.rpc.Filter 文件</strong></p><p><strong>文件内容为:</strong></p><p><strong>providerFilter=org.lqs1848.common.dubbo.filter.DubboProviderFilter</strong><br><strong>consumerFilter=org.lqs1848.common.dubbo.filter.DubboConsumerFilter</strong></p><p><strong>指明 Filter 的路径</strong></p><p>反正过滤器不生效 百度下 org.apache.dubbo.rpc.Filter 或者 dubbo SPI</p><h4 id="异常传递"><a href="#异常传递" class="headerlink" title="异常传递"></a>异常传递</h4><p>Dubbo默认会把 项目的自定义异常 转换为 RuntimeException 给 consumer</p><p>会导致 consumer 全局异常拦截不生效</p><p>首先看一下 dubbo 自己的默认实现</p><p>org.apache.dubbo.rpc.filter.ExceptionFilter</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Activate(group = CommonConstants.PROVIDER)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ExceptionFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span>, <span class="title">Filter</span>.<span class="title">Listener</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Logger logger = LoggerFactory.getLogger(ExceptionFilter.class);</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Result <span class="title">invoke</span><span class="params">(Invoker&lt;?&gt; invoker, Invocation invocation)</span> <span class="keyword">throws</span> RpcException </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> invoker.invoke(invocation);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onResponse</span><span class="params">(Result appResponse, Invoker&lt;?&gt; invoker, Invocation invocation)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (appResponse.hasException() &amp;&amp; GenericService.class != invoker.getInterface()) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Throwable exception = appResponse.getException();</span><br><span class="line">                <span class="keyword">if</span> (!(exception <span class="keyword">instanceof</span> RuntimeException) &amp;&amp; (exception <span class="keyword">instanceof</span> Exception)) &#123;</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    Method method = invoker.getInterface().getMethod(invocation.getMethodName(), invocation.getParameterTypes());</span><br><span class="line">                    Class&lt;?&gt;[] exceptionClassses = method.getExceptionTypes();</span><br><span class="line">                    <span class="keyword">for</span> (Class&lt;?&gt; exceptionClass : exceptionClassses) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (exception.getClass().equals(exceptionClass)) &#123;</span><br><span class="line">                            <span class="keyword">return</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">catch</span> (NoSuchMethodException e) &#123;</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                logger.error(<span class="string">&quot;Got unchecked and undeclared exception which called by &quot;</span> + RpcContext.getContext().getRemoteHost() + <span class="string">&quot;. service: &quot;</span> + invoker.getInterface().getName() + <span class="string">&quot;, method: &quot;</span> + invocation.getMethodName() + <span class="string">&quot;, exception: &quot;</span> + exception.getClass().getName() + <span class="string">&quot;: &quot;</span> + exception.getMessage(), exception);</span><br><span class="line">                String serviceFile = ReflectUtils.getCodeBase(invoker.getInterface());</span><br><span class="line">                String exceptionFile = ReflectUtils.getCodeBase(exception.getClass());</span><br><span class="line">                <span class="keyword">if</span> (serviceFile == <span class="keyword">null</span> || exceptionFile == <span class="keyword">null</span> || serviceFile.equals(exceptionFile)) &#123;</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                String className = exception.getClass().getName();</span><br><span class="line">                <span class="keyword">if</span> (className.startsWith(<span class="string">&quot;java.&quot;</span>) || className.startsWith(<span class="string">&quot;javax.&quot;</span>)) &#123;</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (exception <span class="keyword">instanceof</span> RpcException) &#123;</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                appResponse.setException(<span class="keyword">new</span> RuntimeException(StringUtils.toString(exception)));</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Throwable e) &#123;</span><br><span class="line">                logger.warn(<span class="string">&quot;Fail to ExceptionFilter when called by &quot;</span> + RpcContext.getContext().getRemoteHost() + <span class="string">&quot;. service: &quot;</span> + invoker.getInterface().getName() + <span class="string">&quot;, method: &quot;</span> + invocation.getMethodName() + <span class="string">&quot;, exception: &quot;</span> + e.getClass().getName() + <span class="string">&quot;: &quot;</span> + e.getMessage(), e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onError</span><span class="params">(Throwable e, Invoker&lt;?&gt; invoker, Invocation invocation)</span> </span>&#123;</span><br><span class="line">        logger.error(<span class="string">&quot;Got unchecked and undeclared exception which called by &quot;</span> + RpcContext.getContext().getRemoteHost() + <span class="string">&quot;. service: &quot;</span> + invoker.getInterface().getName() + <span class="string">&quot;, method: &quot;</span> + invocation.getMethodName() + <span class="string">&quot;, exception: &quot;</span> + e.getClass().getName() + <span class="string">&quot;: &quot;</span> + e.getMessage(), e);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLogger</span><span class="params">(Logger logger)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.logger = logger;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>网上大多数文章都是只写了 这一段 但是不告诉你 这个是dubbo 自己的实现</p><p>并且也没说 如果不配置 spi 覆盖 dubbo 中默认的 ExceptionFilter 并不会生效</p><p>要想自己的自定义异常不被dubbo拦截掉 就得覆盖 默认 ExceptionFilter</p><p>首先 SPI 配置文件   dubbo/internal/org.apache.dubbo.rpc.Filter</p><p>添加一行</p><p>exception=org.lqs1848.common.dubbo.filter.DubboExceptionFilter</p><p>再把 dubbo 默认ExceptionFilter(org.apache.dubbo.rpc.filter.ExceptionFilter) 复制到 org.lqs1848.common.dubbo.filter 目录 并改名 DubboExceptionFilter</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(className.startsWith(<span class="string">&quot;org.lqs1848.&quot;</span>)) &#123;</span><br><span class="line">    <span class="comment">//过滤掉自己的自定义异常</span></span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//dubbo 把它无法识别的异常封装为 RuntimeException 之前把自己的异常放过 ↑↑↑↑↑↑↑↑↑↑↑↑</span></span><br><span class="line">appResponse.setException(<span class="keyword">new</span> RuntimeException(StringUtils.toString(exception)));</span><br></pre></td></tr></table></figure><p>这里只写了自定义异常</p><p>实际使用中 可能还有 com.netflix.client.ClientException: Load balancer does not have available server for client</p><p>这样的降级熔断之类的项目公用的异常</p><p>也是需要单独处理</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>我引入 dubbo 时面临的需求是 service 已经写完了 必须把 部分 service 分到一个单独的微服务进行维护</p><p>所以在不改动任何业务代码的情况下 引入 dubbo</p><p>引入 dubbo 后 原先 controller 调用 service 时 分页是 PageHelper  内部是用 ThreadLocal 传递的 分页信息</p><p>不想改所有service 就只能在 dubbo 调用上进行传递了</p><p>我并没有用 dubbo 来替代 feign</p><p>引入 dubbo 纯粹是解决业务上的需求 所以只使用了 <a href="#2">2 dubbo 单独使用</a></p>]]></content>
    
    
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;</summary>
    
    
    
    <category term="Java" scheme="https://blog.lqs1848.top/categories/Java/"/>
    
    <category term="Dubbo" scheme="https://blog.lqs1848.top/categories/Java/Dubbo/"/>
    
    
    <category term="Spring" scheme="https://blog.lqs1848.top/tags/Spring/"/>
    
    <category term="SpringCloud" scheme="https://blog.lqs1848.top/tags/SpringCloud/"/>
    
    <category term="Dubbo" scheme="https://blog.lqs1848.top/tags/Dubbo/"/>
    
    <category term="SPI" scheme="https://blog.lqs1848.top/tags/SPI/"/>
    
    <category term="异常传递" scheme="https://blog.lqs1848.top/tags/%E5%BC%82%E5%B8%B8%E4%BC%A0%E9%80%92/"/>
    
    <category term="封装" scheme="https://blog.lqs1848.top/tags/%E5%B0%81%E8%A3%85/"/>
    
  </entry>
  
  <entry>
    <title>Mysql Using join buffer (Block Nested Loop) join</title>
    <link href="https://blog.lqs1848.top/2021/04/16/2021-04-16%20%20Mysql%20Using%20join%20buffer%20(Block%20Nested%20Loop)%20join/"/>
    <id>https://blog.lqs1848.top/2021/04/16/2021-04-16%20%20Mysql%20Using%20join%20buffer%20(Block%20Nested%20Loop)%20join/</id>
    <published>2021-04-15T16:00:00.000Z</published>
    <updated>2021-07-08T08:12:04.789Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h3 id="Mysql-Using-join-buffer-Block-Nested-Loop"><a href="#Mysql-Using-join-buffer-Block-Nested-Loop" class="headerlink" title="Mysql Using join buffer (Block Nested Loop)"></a>Mysql Using join buffer (Block Nested Loop)</h3><p>EXPLAIN  中的 extra 字段 有数据是 Using where; Using join buffer (Block Nested Loop)</p><p>1.未建立索引</p><p>2.数据类型不一致</p><p> 都是 verchar 但是 编码不一致也会导致此问题</p><p> 比如一个表的字段是 utf8 编码 另一个是 utf8mb4 编码</p>]]></content>
    
    
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;</summary>
    
    
    
    <category term="SQL" scheme="https://blog.lqs1848.top/categories/SQL/"/>
    
    <category term="MySQL" scheme="https://blog.lqs1848.top/categories/SQL/MySQL/"/>
    
    
    <category term="MySQL" scheme="https://blog.lqs1848.top/tags/MySQL/"/>
    
    <category term="SQL" scheme="https://blog.lqs1848.top/tags/SQL/"/>
    
    <category term="EXPLAIN" scheme="https://blog.lqs1848.top/tags/EXPLAIN/"/>
    
  </entry>
  
</feed>
