<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Chaos</title>
  
  
  <link href="https://blog.lqs1848.top/atom.xml" rel="self"/>
  
  <link href="https://blog.lqs1848.top/"/>
  <updated>2024-09-05T01:29:53.871Z</updated>
  <id>https://blog.lqs1848.top/</id>
  
  <author>
    <name>lqs1848</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>WebFlux WebClient无法打满CPU</title>
    <link href="https://blog.lqs1848.top/2024/09/05/2024-09-05%20WebFlux%20WebClient%E6%97%A0%E6%B3%95%E6%89%93%E6%BB%A1CPU/"/>
    <id>https://blog.lqs1848.top/2024/09/05/2024-09-05%20WebFlux%20WebClient%E6%97%A0%E6%B3%95%E6%89%93%E6%BB%A1CPU/</id>
    <published>2024-09-04T16:00:00.000Z</published>
    <updated>2024-09-05T01:29:53.871Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><p>项目大概是 WebFlux 通过 WebClient 转发http请求 中间进行逻辑处理</p><p>验收需要提供性能测试报告</p><p>使用 wrk 进行测试</p><p>目标接口原始性能</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"> # wrk -c600 -t4 -T10  -d180 --latency http:&#x2F;&#x2F;192.168.101.164:8086</span><br><span class="line">Running 3m test @ http:&#x2F;&#x2F;192.168.101.164:8086</span><br><span class="line">  4 threads and 600 connections</span><br><span class="line">  Thread Stats   Avg      Stdev     Max   +&#x2F;- Stdev</span><br><span class="line">    Latency    46.19ms   46.03ms 794.41ms   92.85%</span><br><span class="line">    Req&#x2F;Sec     3.85k   771.54     7.05k    85.61%</span><br><span class="line">  Latency Distribution</span><br><span class="line">     50%   35.74ms</span><br><span class="line">     75%   40.53ms</span><br><span class="line">     90%   78.09ms</span><br><span class="line">     99%  255.88ms</span><br><span class="line">  2756389 requests in 3.00m, 473.17MB read</span><br><span class="line">  Socket errors: connect 0, read 0, write 440, timeout 0</span><br><span class="line">Requests&#x2F;sec:  15306.22</span><br><span class="line">Transfer&#x2F;sec:      2.63MB</span><br></pre></td></tr></table></figure><p>Nginx转发性能</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># wrk -c600 -t4 -T10  -d180 --latency http:&#x2F;&#x2F;192.168.101.233:901</span><br><span class="line">Running 3m test @ http:&#x2F;&#x2F;192.168.101.233:901</span><br><span class="line">  4 threads and 600 connections</span><br><span class="line">  Thread Stats   Avg      Stdev     Max   +&#x2F;- Stdev</span><br><span class="line">    Latency   524.59ms    1.04s    9.54s    93.65%</span><br><span class="line">    Req&#x2F;Sec   474.22    135.68     1.38k    74.30%</span><br><span class="line">  Latency Distribution</span><br><span class="line">     50%  250.51ms</span><br><span class="line">     75%  312.01ms</span><br><span class="line">     90%  590.12ms</span><br><span class="line">     99%    6.14s</span><br><span class="line">  338358 requests in 3.00m, 90.03MB read</span><br><span class="line">  Socket errors: connect 0, read 9830, write 2898, timeout 0</span><br><span class="line">Requests&#x2F;sec:   1879.47</span><br><span class="line">Transfer&#x2F;sec:    512.08KB</span><br></pre></td></tr></table></figure><p>WebClient性能</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># wrk -c600 -t4 -T10 -d180 --latency http:&#x2F;&#x2F;192.168.101.233:9195&#x2F;gateway&#x2F;sys&#x2F;api</span><br><span class="line">Running 3m test @ http:&#x2F;&#x2F;192.168.101.233:9195&#x2F;gateway&#x2F;sys&#x2F;api</span><br><span class="line">  4 threads and 600 connections</span><br><span class="line">  Thread Stats   Avg      Stdev     Max   +&#x2F;- Stdev</span><br><span class="line">    Latency     3.17s     3.10s    9.84s    76.92%</span><br><span class="line">    Req&#x2F;Sec   473.03    366.87     1.79k    55.65%</span><br><span class="line">  Latency Distribution</span><br><span class="line">     50%    2.32s</span><br><span class="line">     75%    5.89s</span><br><span class="line">     90%    7.60s</span><br><span class="line">     99%    9.78s</span><br><span class="line">  35926 requests in 3.00m, 8.81MB read</span><br><span class="line">  Socket errors: connect 0, read 0, write 2669, timeout 712</span><br><span class="line">Requests&#x2F;sec:    199.51</span><br><span class="line">Transfer&#x2F;sec:     50.07KB</span><br></pre></td></tr></table></figure><p>网络环境和电脑状态一直有变化 所以每次测试都有上下浮动 但是差距不会到10倍 电脑Cpu也没打满</p><p>并且项目开始是按 ShenYu 为参考 技术架构也相同 性能理应相同</p><p>但实际 WebClient 转发延迟一直在秒级 性能差到两个数量级了 看日志基本都停留在等待请求结果上</p><p>给我整不会了 开始查资料优化 WebClient 线程池什么都用上了 netty 的 ioWorkerCount 也设置了</p><p>都没有效果 又以为是Windows有什么Tcp连接数什么的问题 但是nginx性能又正常</p><p>在Linux上重新部署了一套 情况依旧 </p><p>对比 Apache ShenYu 的源码一行一行比较 转发逻辑应该是相同的</p><p>ShenYu 600并发性能为</p><table><thead><tr><th>currency</th><th>QPS</th><th>50% latency (ms)</th><th>75% latency (ms)</th><th>90% latency (ms)</th><th>99% latency (ms)</th><th>平均响应时间(ms)</th><th>最大响应时间(ms)</th></tr></thead><tbody><tr><td>600 并发</td><td>18640.47</td><td>15.77</td><td>24.77</td><td>38.26</td><td>80.31</td><td>20.32</td><td>852.06</td></tr></tbody></table><p>差距过大</p><p>并且我的Mock接口报文只是把请求来源的header ip之类的返回出来的测试接口 理论上来说应该 延迟会更低</p><p>但是 QPS比 ShenYu 好 延迟却高了太多</p><p>修改了两天延迟还是降不下来</p><p>反复观看ShenYu的基准测试报告时发现</p><p>有这么一条 日志级别为WARN</p><p>那不就是不打日志 马上修改日志配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># wrk -c600 -t4 -T10 -d180 --latency http:&#x2F;&#x2F;192.168.101.233:9195&#x2F;gateway&#x2F;sys&#x2F;api</span><br><span class="line">Running 3m test @ http:&#x2F;&#x2F;192.168.101.233:9195&#x2F;gateway&#x2F;sys&#x2F;api</span><br><span class="line">  4 threads and 600 connections</span><br><span class="line">  Thread Stats   Avg      Stdev     Max   +&#x2F;- Stdev</span><br><span class="line">    Latency    85.97ms   35.67ms 662.17ms   89.15%</span><br><span class="line">    Req&#x2F;Sec     1.79k   538.31     3.60k    70.62%</span><br><span class="line">  Latency Distribution</span><br><span class="line">     50%   74.64ms</span><br><span class="line">     75%   89.36ms</span><br><span class="line">     90%  123.86ms</span><br><span class="line">     99%  231.92ms</span><br><span class="line">  1276703 requests in 3.00m, 312.91MB read</span><br><span class="line">  Socket errors: connect 0, read 0, write 2142, timeout 0</span><br><span class="line">Requests&#x2F;sec:   7089.33</span><br><span class="line">Transfer&#x2F;sec:      1.74MB</span><br></pre></td></tr></table></figure><p>性能立刻翻了两个数量级 延迟也正常了</p><p>测试环境性能波动很大 一会性能会超过Nginx 一会又低 主要是 mock的项目放同事电脑上了 看了大概就行</p>]]></content>
    
    
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;</summary>
    
    
    
    <category term="WebFlux" scheme="https://blog.lqs1848.top/categories/WebFlux/"/>
    
    
    <category term="WebFlux" scheme="https://blog.lqs1848.top/tags/WebFlux/"/>
    
    <category term="Gateway" scheme="https://blog.lqs1848.top/tags/Gateway/"/>
    
    <category term="WebClient" scheme="https://blog.lqs1848.top/tags/WebClient/"/>
    
    <category term="ShenYu" scheme="https://blog.lqs1848.top/tags/ShenYu/"/>
    
  </entry>
  
  <entry>
    <title>CXF异常</title>
    <link href="https://blog.lqs1848.top/2024/07/23/2024-07-23%20CXF%E5%BC%82%E5%B8%B8/"/>
    <id>https://blog.lqs1848.top/2024/07/23/2024-07-23%20CXF%E5%BC%82%E5%B8%B8/</id>
    <published>2024-07-22T16:00:00.000Z</published>
    <updated>2024-07-23T09:33:49.430Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><p>上线时长两年半的项目 突然出现异常<br>报错内容如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br></pre></td><td class="code"><pre><span class="line">org.apache.cxf.interceptor.Fault: Unmarshalling Error: Illegal character entity: <span class="function">expansion <span class="title">character</span> <span class="params">(code <span class="number">0xd855</span>)</span></span></span><br><span class="line"><span class="function"> at [row,col </span>&#123;unknown-source&#125;]: [<span class="number">1</span>,<span class="number">986</span>] </span><br><span class="line">at org.apache.cxf.jaxb.JAXBEncoderDecoder.unmarshall(JAXBEncoderDecoder.java:<span class="number">931</span>)</span><br><span class="line">at org.apache.cxf.jaxb.JAXBEncoderDecoder.unmarshall(JAXBEncoderDecoder.java:<span class="number">737</span>)</span><br><span class="line">at org.apache.cxf.jaxb.io.DataReaderImpl.read(DataReaderImpl.java:<span class="number">168</span>)</span><br><span class="line">at org.apache.cxf.wsdl.interceptors.DocLiteralInInterceptor.handleMessage(DocLiteralInInterceptor.java:<span class="number">109</span>)</span><br><span class="line">at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:<span class="number">307</span>)</span><br><span class="line">at org.apache.cxf.endpoint.ClientImpl.onMessage(ClientImpl.java:<span class="number">921</span>)</span><br><span class="line">at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponseInternal(HTTPConduit.java:<span class="number">1760</span>)</span><br><span class="line">at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponse(HTTPConduit.java:<span class="number">1626</span>)</span><br><span class="line">at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.close(HTTPConduit.java:<span class="number">1420</span>)</span><br><span class="line">at org.apache.cxf.transport.http.HttpClientHTTPConduit$HttpClientWrappedOutputStream.close(HttpClientHTTPConduit.java:<span class="number">662</span>)</span><br><span class="line">at org.apache.cxf.transport.AbstractConduit.close(AbstractConduit.java:<span class="number">56</span>)</span><br><span class="line">at org.apache.cxf.transport.http.HTTPConduit.close(HTTPConduit.java:<span class="number">717</span>)</span><br><span class="line">at org.apache.cxf.transport.http.HttpClientHTTPConduit.close(HttpClientHTTPConduit.java:<span class="number">249</span>)</span><br><span class="line">at org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor.handleMessage(MessageSenderInterceptor.java:<span class="number">63</span>)</span><br><span class="line">at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:<span class="number">307</span>)</span><br><span class="line">at org.apache.cxf.endpoint.ClientImpl.doInvoke(ClientImpl.java:<span class="number">530</span>)</span><br><span class="line">at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:<span class="number">441</span>)</span><br><span class="line">at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:<span class="number">356</span>)</span><br><span class="line">at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:<span class="number">314</span>)</span><br><span class="line">at org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:<span class="number">96</span>)</span><br><span class="line">at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:<span class="number">140</span>)</span><br><span class="line">at com.sun.proxy.$Proxy497.service(Unknown Source)</span><br><span class="line">at com.mysd.fast.ssp.SspWsUtils.execute(SspWsUtils.java:<span class="number">113</span>)</span><br><span class="line">at com.mysd.fast.ssp.SspWsUtils.queryObject(SspWsUtils.java:<span class="number">91</span>)</span><br><span class="line">at com.mysd.project.service.DataExchangeServiceImpl.syncContractInfoTransaction(DataExchangeServiceImpl.java:<span class="number">819</span>)</span><br><span class="line">at com.mysd.project.service.DataExchangeServiceImpl$$FastClassBySpringCGLIB$$422a7876.invoke(&lt;generated&gt;)</span><br><span class="line">at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:<span class="number">218</span>)</span><br><span class="line">at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:<span class="number">771</span>)</span><br><span class="line">at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:<span class="number">163</span>)</span><br><span class="line">at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:<span class="number">749</span>)</span><br><span class="line">at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:<span class="number">367</span>)</span><br><span class="line">at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:<span class="number">118</span>)</span><br><span class="line">at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:<span class="number">186</span>)</span><br><span class="line">at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:<span class="number">749</span>)</span><br><span class="line">at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:<span class="number">691</span>)</span><br><span class="line">at com.mysd.project.service.DataExchangeServiceImpl$$EnhancerBySpringCGLIB$$c8337f24.syncContractInfoTransaction(&lt;generated&gt;)</span><br><span class="line">at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</span><br><span class="line">at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:<span class="number">62</span>)</span><br><span class="line">at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:<span class="number">43</span>)</span><br><span class="line">at java.base/java.lang.reflect.Method.invoke(Method.java:<span class="number">566</span>)</span><br><span class="line">at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:<span class="number">344</span>)</span><br><span class="line">at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:<span class="number">205</span>)</span><br><span class="line">at com.sun.proxy.$Proxy505.syncContractInfoTransaction(Unknown Source)</span><br><span class="line">at com.mysd.project.service.DataExchangeServiceImpl.syncContractInfo(DataExchangeServiceImpl.java:<span class="number">587</span>)</span><br><span class="line">at com.mysd.project.service.DataExchangeServiceImpl$$FastClassBySpringCGLIB$$422a7876.invoke(&lt;generated&gt;)</span><br><span class="line">at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:<span class="number">218</span>)</span><br><span class="line">at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:<span class="number">687</span>)</span><br><span class="line">at com.mysd.project.service.DataExchangeServiceImpl$$EnhancerBySpringCGLIB$$c8337f24.syncContractInfo(&lt;generated&gt;)</span><br><span class="line">at com.mysd.realty.api.webservice.RealtyWsServiceImpl.syncContractInfo(RealtyWsServiceImpl.java:<span class="number">842</span>)</span><br><span class="line">at com.mysd.realty.api.webservice.RealtyWsServiceImpl$$FastClassBySpringCGLIB$$<span class="number">46568144.</span>invoke(&lt;generated&gt;)</span><br><span class="line">at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:<span class="number">218</span>)</span><br><span class="line">at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:<span class="number">687</span>)</span><br><span class="line">at com.mysd.realty.api.webservice.RealtyWsServiceImpl$$EnhancerBySpringCGLIB$$73a48a4e.syncContractInfo(&lt;generated&gt;)</span><br><span class="line">at com.mysd.project.controller.ExternalCallController.syncContractInfoTest(ExternalCallController.java:<span class="number">74</span>)</span><br><span class="line">at com.mysd.project.controller.ExternalCallController$$FastClassBySpringCGLIB$$45542be.invoke(&lt;generated&gt;)</span><br><span class="line">at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:<span class="number">218</span>)</span><br><span class="line">at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:<span class="number">771</span>)</span><br><span class="line">at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:<span class="number">163</span>)</span><br><span class="line">at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:<span class="number">749</span>)</span><br><span class="line">at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:<span class="number">47</span>)</span><br><span class="line">at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:<span class="number">186</span>)</span><br><span class="line">at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:<span class="number">749</span>)</span><br><span class="line">at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:<span class="number">95</span>)</span><br><span class="line">at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:<span class="number">186</span>)</span><br><span class="line">at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:<span class="number">749</span>)</span><br><span class="line">at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:<span class="number">691</span>)</span><br><span class="line">at com.mysd.project.controller.ExternalCallController$$EnhancerBySpringCGLIB$$d35e8fc9.syncContractInfoTest(&lt;generated&gt;)</span><br><span class="line">at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</span><br><span class="line">at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:<span class="number">62</span>)</span><br><span class="line">at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:<span class="number">43</span>)</span><br><span class="line">at java.base/java.lang.reflect.Method.invoke(Method.java:<span class="number">566</span>)</span><br><span class="line">at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:<span class="number">190</span>)</span><br><span class="line">at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:<span class="number">138</span>)</span><br><span class="line">at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:<span class="number">105</span>)</span><br><span class="line">at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:<span class="number">878</span>)</span><br><span class="line">at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:<span class="number">792</span>)</span><br><span class="line">at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:<span class="number">87</span>)</span><br><span class="line">at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:<span class="number">1040</span>)</span><br><span class="line">at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:<span class="number">943</span>)</span><br><span class="line">at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:<span class="number">1006</span>)</span><br><span class="line">at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:<span class="number">909</span>)</span><br><span class="line">at javax.servlet.http.HttpServlet.service(HttpServlet.java:<span class="number">681</span>)</span><br><span class="line">at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:<span class="number">883</span>)</span><br><span class="line">at javax.servlet.http.HttpServlet.service(HttpServlet.java:<span class="number">764</span>)</span><br><span class="line">at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:<span class="number">227</span>)</span><br><span class="line">at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:<span class="number">162</span>)</span><br><span class="line">at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:<span class="number">53</span>)</span><br><span class="line">at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:<span class="number">189</span>)</span><br><span class="line">at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:<span class="number">162</span>)</span><br><span class="line">at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:<span class="number">92</span>)</span><br><span class="line">at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:<span class="number">119</span>)</span><br><span class="line">at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:<span class="number">189</span>)</span><br><span class="line">at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:<span class="number">162</span>)</span><br><span class="line">at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:<span class="number">124</span>)</span><br><span class="line">at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:<span class="number">189</span>)</span><br><span class="line">at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:<span class="number">162</span>)</span><br><span class="line">at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:<span class="number">100</span>)</span><br><span class="line">at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:<span class="number">119</span>)</span><br><span class="line">at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:<span class="number">189</span>)</span><br><span class="line">at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:<span class="number">162</span>)</span><br><span class="line">at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:<span class="number">93</span>)</span><br><span class="line">at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:<span class="number">119</span>)</span><br><span class="line">at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:<span class="number">189</span>)</span><br><span class="line">at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:<span class="number">162</span>)</span><br><span class="line">at com.mysd.framework.web.filter.TraceFilter.filter(TraceFilter.java:<span class="number">151</span>)</span><br><span class="line">at com.mysd.framework.web.filter.ActionFilter.doFilter(ActionFilter.java:<span class="number">34</span>)</span><br><span class="line">at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:<span class="number">189</span>)</span><br><span class="line">at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:<span class="number">162</span>)</span><br><span class="line">at org.springframework.boot.web.servlet.support.ErrorPageFilter.doFilter(ErrorPageFilter.java:<span class="number">126</span>)</span><br><span class="line">at org.springframework.boot.web.servlet.support.ErrorPageFilter.access$<span class="number">000</span>(ErrorPageFilter.java:<span class="number">64</span>)</span><br><span class="line">at org.springframework.boot.web.servlet.support.ErrorPageFilter$<span class="number">1.</span>doFilterInternal(ErrorPageFilter.java:<span class="number">101</span>)</span><br><span class="line">at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:<span class="number">119</span>)</span><br><span class="line">at org.springframework.boot.web.servlet.support.ErrorPageFilter.doFilter(ErrorPageFilter.java:<span class="number">119</span>)</span><br><span class="line">at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:<span class="number">189</span>)</span><br><span class="line">at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:<span class="number">162</span>)</span><br><span class="line">at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:<span class="number">201</span>)</span><br><span class="line">at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:<span class="number">119</span>)</span><br><span class="line">at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:<span class="number">189</span>)</span><br><span class="line">at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:<span class="number">162</span>)</span><br><span class="line">at com.mysd.framework.web.filter.CryptoFilter.filter(CryptoFilter.java:<span class="number">72</span>)</span><br><span class="line">at com.mysd.framework.web.filter.ActionFilter.doFilter(ActionFilter.java:<span class="number">34</span>)</span><br><span class="line">at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:<span class="number">189</span>)</span><br><span class="line">at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:<span class="number">162</span>)</span><br><span class="line">at com.mysd.framework.core.filter.XssFilter.doFilter(XssFilter.java:<span class="number">65</span>)</span><br><span class="line">at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:<span class="number">189</span>)</span><br><span class="line">at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:<span class="number">162</span>)</span><br><span class="line">at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:<span class="number">197</span>)</span><br><span class="line">at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:<span class="number">97</span>)</span><br><span class="line">at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:<span class="number">540</span>)</span><br><span class="line">at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:<span class="number">135</span>)</span><br><span class="line">at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:<span class="number">92</span>)</span><br><span class="line">at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:<span class="number">687</span>)</span><br><span class="line">at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:<span class="number">78</span>)</span><br><span class="line">at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:<span class="number">357</span>)</span><br><span class="line">at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:<span class="number">382</span>)</span><br><span class="line">at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:<span class="number">65</span>)</span><br><span class="line">at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:<span class="number">895</span>)</span><br><span class="line">at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:<span class="number">1732</span>)</span><br><span class="line">at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:<span class="number">49</span>)</span><br><span class="line">at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:<span class="number">1191</span>)</span><br><span class="line">at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:<span class="number">659</span>)</span><br><span class="line">at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:<span class="number">61</span>)</span><br><span class="line">at java.base/java.lang.Thread.run(Thread.java:<span class="number">834</span>)</span><br><span class="line">Caused by: javax.xml.bind.UnmarshalException: <span class="keyword">null</span></span><br><span class="line">at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl.handleStreamException(UnmarshallerImpl.java:<span class="number">485</span>)</span><br><span class="line">at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl.unmarshal0(UnmarshallerImpl.java:<span class="number">417</span>)</span><br><span class="line">at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl.unmarshal(UnmarshallerImpl.java:<span class="number">394</span>)</span><br><span class="line">at org.apache.cxf.jaxb.JAXBEncoderDecoder.doUnmarshal(JAXBEncoderDecoder.java:<span class="number">880</span>)</span><br><span class="line">at org.apache.cxf.jaxb.JAXBEncoderDecoder$<span class="number">3.</span>run(JAXBEncoderDecoder.java:<span class="number">919</span>)</span><br><span class="line">at java.base/java.security.AccessController.doPrivileged(Native Method)</span><br><span class="line">at org.apache.cxf.jaxb.JAXBEncoderDecoder.unmarshall(JAXBEncoderDecoder.java:<span class="number">917</span>)</span><br><span class="line">... <span class="number">142</span> common frames omitted</span><br><span class="line">Caused by: com.ctc.wstx.exc.WstxParsingException: Illegal character entity: <span class="function">expansion <span class="title">character</span> <span class="params">(code <span class="number">0xd855</span>)</span></span></span><br><span class="line"><span class="function"> at [row,col </span>&#123;unknown-source&#125;]: [<span class="number">1</span>,<span class="number">986</span>]</span><br><span class="line">at com.ctc.wstx.sr.StreamScanner.constructWfcException(StreamScanner.java:<span class="number">634</span>)</span><br><span class="line">at com.ctc.wstx.sr.StreamScanner.throwParseError(StreamScanner.java:<span class="number">504</span>)</span><br><span class="line">at com.ctc.wstx.sr.StreamScanner.reportIllegalChar(StreamScanner.java:<span class="number">2463</span>)</span><br><span class="line">at com.ctc.wstx.sr.StreamScanner.validateChar(StreamScanner.java:<span class="number">2392</span>)</span><br><span class="line">at com.ctc.wstx.sr.StreamScanner.resolveCharEnt(StreamScanner.java:<span class="number">2376</span>)</span><br><span class="line">at com.ctc.wstx.sr.StreamScanner.resolveCharOnlyEntity(StreamScanner.java:<span class="number">1358</span>)</span><br><span class="line">at com.ctc.wstx.sr.BasicStreamReader.nextFromTree(BasicStreamReader.java:<span class="number">2838</span>)</span><br><span class="line">at com.ctc.wstx.sr.BasicStreamReader.next(BasicStreamReader.java:<span class="number">1122</span>)</span><br><span class="line">at com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector.bridge(StAXStreamConnector.java:<span class="number">196</span>)</span><br><span class="line">at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl.unmarshal0(UnmarshallerImpl.java:<span class="number">415</span>)</span><br><span class="line">... <span class="number">147</span> common frames omitted</span><br></pre></td></tr></table></figure><p>线上代码 在CXF调用WebService时出现异常</p><p>cxf未打印出xml异常</p><p>实际是 cxf 调用 XML解析时对方返回的数据有异常</p><p>传递时变为</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">soap:Envelope</span> <span class="attr">xmlns:soap</span>=<span class="string">&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;</span> <span class="attr">xmlns:xsd</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">soap:Body</span>&gt;</span><span class="tag">&lt;<span class="name">ns1:serviceResponse</span> <span class="attr">xmlns:ns1</span>=<span class="string">&quot;http://service.ssp.pansky.com.cn&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">ns1:out</span>&gt;</span>&#123;&quot;xxx&quot;:&quot;中文<span class="symbol">&amp;#55381;</span><span class="symbol">&amp;#56708;</span>&quot;&#125;<span class="tag">&lt;/<span class="name">ns1:out</span>&gt;</span><span class="tag">&lt;/<span class="name">ns1:serviceResponse</span>&gt;</span><span class="tag">&lt;/<span class="name">soap:Body</span>&gt;</span><span class="tag">&lt;/<span class="name">soap:Envelope</span>&gt;</span></span><br></pre></td></tr></table></figure><p>原文字为 𥖄 变成了 <code>&amp;#55381;&amp;#56708;</code></p><p>导致解析 xml 转义&amp;时出现异常了</p><p>cxf框架不好修改 直接使用 <a href="https://blog.csdn.net/weixin_44917045/article/details/139175628">http请求WebService</a> 获取原始 xml</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">service</span><span class="params">(String url, String param1, String param2, String param3)</span> </span>&#123;</span><br><span class="line">String xml = getServiceParam(param1, param2, param3);</span><br><span class="line"><span class="keyword">try</span> (CloseableHttpClient httpClient = HttpClients.createDefault()) &#123;</span><br><span class="line">HttpPost httpPost = <span class="keyword">new</span> HttpPost(url);</span><br><span class="line">httpPost.setHeader(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;text/xml;charset=UTF-8&quot;</span>);</span><br><span class="line">httpPost.setEntity(<span class="keyword">new</span> StringEntity(xml));</span><br><span class="line">HttpResponse response = httpClient.execute(httpPost);</span><br><span class="line">String responseXml = EntityUtils.toString(response.getEntity());</span><br><span class="line">log.info(<span class="string">&quot;httpWsResult:&quot;</span> + responseXml);</span><br><span class="line">responseXml = responseXml.replace(<span class="string">&quot;&amp;lt;&quot;</span>, <span class="string">&quot;&lt;&quot;</span>).replace(<span class="string">&quot;&amp;gt;&quot;</span>, <span class="string">&quot;&gt;&quot;</span>).replace(<span class="string">&quot;&amp;amp;&quot;</span>, <span class="string">&quot;&amp;&quot;</span>)</span><br><span class="line">.replace(<span class="string">&quot;&amp;apos;&quot;</span>, <span class="string">&quot;&#x27;&quot;</span>).replace(<span class="string">&quot;&amp;quot;&quot;</span>, <span class="string">&quot;\&quot;&quot;</span>);</span><br><span class="line">Pattern pattern = Pattern.compile(<span class="string">&quot;&lt;ns1\\:out&gt;(.*?)&lt;/ns1\\:out&gt;&quot;</span>);</span><br><span class="line">Matcher matcher = pattern.matcher(responseXml);</span><br><span class="line"><span class="keyword">if</span> (matcher.find())</span><br><span class="line"><span class="keyword">return</span> StringEscapeUtils.unescapeHtml4(matcher.group(<span class="number">1</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> responseXml;</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">log.info(<span class="string">&quot;httpWsError:&quot;</span> + e.getMessage());</span><br><span class="line">e.printStackTrace();</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="comment">// method</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//用SoapUI 解析xml生成</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">getServiceParam</span><span class="params">(String param0,String param1,String param2)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;&lt;soapenv:Envelope xmlns:soapenv=\&quot;http://schemas.xmlsoap.org/soap/envelope/\&quot; xmlns:ser=\&quot;http://service.ssp.pansky.com.cn\&quot;&gt;&quot;</span></span><br><span class="line">+ <span class="string">&quot;   &lt;soapenv:Header/&gt;&quot;</span></span><br><span class="line">+ <span class="string">&quot;   &lt;soapenv:Body&gt;&quot;</span></span><br><span class="line">+ <span class="string">&quot;      &lt;ser:service&gt;&quot;</span></span><br><span class="line">+ <span class="string">&quot;         &lt;ser:in0&gt;&quot;</span>+param0+<span class="string">&quot;&lt;/ser:in0&gt;&quot;</span></span><br><span class="line">+ <span class="string">&quot;         &lt;ser:in1&gt;&quot;</span>+param1+<span class="string">&quot;&lt;/ser:in1&gt;&quot;</span></span><br><span class="line">+ <span class="string">&quot;         &lt;ser:in2&gt;&quot;</span>+param2+<span class="string">&quot;&lt;/ser:in2&gt;&quot;</span></span><br><span class="line">+ <span class="string">&quot;      &lt;/ser:service&gt;&quot;</span></span><br><span class="line">+ <span class="string">&quot;   &lt;/soapenv:Body&gt;&quot;</span></span><br><span class="line">+ <span class="string">&quot;&lt;/soapenv:Envelope&gt;&quot;</span>;</span><br><span class="line">&#125;<span class="comment">// method</span></span><br></pre></td></tr></table></figure><p>使用 StringEscapeUtils 工具将乱码转为中文</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.StringEscapeUtils;</span><br><span class="line"></span><br><span class="line">StringEscapeUtils.unescapeHtml4(<span class="string">&quot;&amp;#55381;&amp;#56708;&quot;</span>);</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;</summary>
    
    
    
    <category term="WebService" scheme="https://blog.lqs1848.top/categories/WebService/"/>
    
    
    <category term="CXF" scheme="https://blog.lqs1848.top/tags/CXF/"/>
    
    <category term="编码" scheme="https://blog.lqs1848.top/tags/%E7%BC%96%E7%A0%81/"/>
    
    <category term="乱码" scheme="https://blog.lqs1848.top/tags/%E4%B9%B1%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>WebFlux做项目碰到的一些问题</title>
    <link href="https://blog.lqs1848.top/2024/07/23/2024-07-23%20WebFlux%E5%81%9A%E9%A1%B9%E7%9B%AE%E7%A2%B0%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/"/>
    <id>https://blog.lqs1848.top/2024/07/23/2024-07-23%20WebFlux%E5%81%9A%E9%A1%B9%E7%9B%AE%E7%A2%B0%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/</id>
    <published>2024-07-22T16:00:00.000Z</published>
    <updated>2024-07-23T10:06:50.660Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><p>之前一直不明白为什么WebFlux 在SpringCloud Gateway用了这么久怎么没有直接用它写服务和单独的项目 直到我自己踩坑以后…</p><h4 id="1-数据库"><a href="#1-数据库" class="headerlink" title="1 数据库"></a>1 数据库</h4><p>首先 r2bdc 太不成熟 多表查询根本就不完善 需要闭坑 老老实实用阻塞的方式去请求数据库</p><h4 id="2-用户请求参数"><a href="#2-用户请求参数" class="headerlink" title="2 用户请求参数"></a>2 用户请求参数</h4><p>WebFlux 的 ServerWebExchange 的 getRequest().getHeaders() 获取到的参数有很多是获取不到的 比如 date </p><p>还有些其它隐性规则 比如 x_param1 这样不行 必须 x-param1</p><p>还有大小写问题 前端传递 XXX 后端获取到 xxx </p><p>等使用 SpringMVC 不会碰到的异常</p><p>其实就是完全按http协议来 http协议说header忽略大小写 WebFlux获取到的header就全是小写的</p><h4 id="3-WebClient"><a href="#3-WebClient" class="headerlink" title="3 WebClient"></a>3 WebClient</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">webClient.method(method).uri(url).headers(httpHeaders -&gt; &#123;</span><br><span class="line">httpHeaders.addAll(exchange.getRequest().getHeaders());</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>想把所有的请求头信息全部转发到WebClient 要注意</p><p>header 关键字等信息无法转发</p><p>我用这个是要实现接口转发 但是 header中的数据 原始接口有个 date参数 WebClient就完全无法转发</p><p>只能单独设置为 date: 时间戳  </p><p>但是用户是上帝 人接口就是不符合http协议规范 传递参数愣是携带的header关键字…</p><h4 id="4-报错"><a href="#4-报错" class="headerlink" title="4 报错"></a>4 报错</h4><p>我写的项目类似 Apache ShenYu 和 Soul 网关这样的系统</p><p>不过我把 管理和集群写成同一个项目 </p><p>就导致我的项目既有 WebHandle 处理 plugin 又有 DispatcherHandler 处理 MVC</p><p>这时我碰到一个问题</p><p>前端请求MVC时 参数错误之类的导致 进入 DispatcherHandler 但是 参数对应不上时 会没有任何异常抛出并且没有任何返回</p><p>解决方案</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> dispatcherHandler.handle(exchange).doOnError(e-&gt;&#123;</span><br><span class="line">    <span class="comment">//handle ServerWebExchange 时单独处理 doOnError 这里直接抛出 全局异常处理就能接收到 </span></span><br><span class="line">    <span class="comment">//否则 ServerWebInputException NoResourceFoundException MethodNotAllowedException等</span></span><br><span class="line">    <span class="comment">//这些在进入Controller之前的异常 全局异常会捕获不到 导致没有任何响应和日志</span></span><br><span class="line"><span class="keyword">throw</span> (RuntimeException)e;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;</summary>
    
    
    
    <category term="WebFlux" scheme="https://blog.lqs1848.top/categories/WebFlux/"/>
    
    
    <category term="WebFlux" scheme="https://blog.lqs1848.top/tags/WebFlux/"/>
    
    <category term="Gateway" scheme="https://blog.lqs1848.top/tags/Gateway/"/>
    
    <category term="WebClient" scheme="https://blog.lqs1848.top/tags/WebClient/"/>
    
  </entry>
  
  <entry>
    <title>浏览器无法QQ快速登录</title>
    <link href="https://blog.lqs1848.top/2023/11/23/2023-11-23%20%E6%B5%8F%E8%A7%88%E5%99%A8%E6%97%A0%E6%B3%95QQ%E5%BF%AB%E9%80%9F%E7%99%BB%E5%BD%95/"/>
    <id>https://blog.lqs1848.top/2023/11/23/2023-11-23%20%E6%B5%8F%E8%A7%88%E5%99%A8%E6%97%A0%E6%B3%95QQ%E5%BF%AB%E9%80%9F%E7%99%BB%E5%BD%95/</id>
    <published>2023-11-22T16:00:00.000Z</published>
    <updated>2023-11-27T05:57:54.557Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><p>公司开发了自己的套壳浏览器</p><p>有用户反馈 我们的浏览器在登录QQ的情况下 访问 <a href="https://mail.qq.com/">https://mail.qq.com</a> 登录时没有出现已经登录的QQ 无法快速登录</p><h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><p>首先用我平时使用的浏览器Yandex访问 QQ邮箱  嗯 也没有出现 快速登陆</p><p>换Chrome 访问QQ邮箱 出现了快速登录</p><p>看了下网络请求</p><p><a href="https://localhost.ptlogin2.qq.com:4301/pt_get_uins?callback=ptui_getuins_CB&amp;r=0.5179631540816915&amp;pt_local_tk=1345995641">https://localhost.ptlogin2.qq.com:4301/pt_get_uins?callback=ptui_getuins_CB&amp;r=0.5179631540816915&amp;pt_local_tk=1345995641</a></p><p>网页访问了 localhost.ptlogin2.qq.com 对应的地址是 127.0.0.1</p><p>看来是 QQ启动了个web服务</p><p>用postman试试先 chrome和自己封装的浏览器差别应该只有ua</p><p>postman 模拟 chrome 的user-agent 也不行</p><p>百度</p><p><a href="https://blog.csdn.net/qq_39190622/article/details/128907064">2023年最新版获取QQ Clientkey。</a></p><p>尝试了下文章提供的工具和代码 也不行</p><p>继续百度</p><p><a href="https://blog.csdn.net/weolar/article/details/100528075">19.9.3日报：QQ快捷登录无法显示本地已登录QQ的问题</a></p><p>讲的有点不明不白的 没搞懂 到底是限制了什么</p><p>23年的blog说可以获取 19年的blog说QQ检测访问的来源</p><p>给整不会了 按理说 http 请求 客户端是没办法知道是谁发送的</p><p>陷入迷茫</p><h1 id="转折"><a href="#转折" class="headerlink" title="转折"></a>转折</h1><p>抓包对比查看请求有什么区别发现</p><p>TCP握手成功 刚发送 TLS 的 client hello包 时 QQ立刻就回复 rst包 断开连接了 根本还没到传输HTTP</p><p>问题应该出在 TLS 的 client hello上</p><p>搜索 TLS区分客户端时 看到了 TLS指纹 JA3指纹</p><p>猜测是因为QQ有校验JA3指纹</p><h1 id="再转折"><a href="#再转折" class="headerlink" title="再转折"></a>再转折</h1><p>有同事的电脑 右键以管理员权限运行 就能显示快捷登录</p><p>排查到这已经裂开…</p><p>应该是QQ的问题吧</p><p>让朋友下载浏览器测试了一下 人不用管理员权限也能显示快捷登录</p><p>自己的电脑卸载QQ 安装新版本 QQNT 也能显示了</p><p>这下给我整不会了</p><p>找不到问题了  有异常的时候 Edge能访问 Chrome也能访问 就自己封装的浏览器不行</p><p>实在没找到问题</p><p>就当多了解了下 ja3吧</p>]]></content>
    
    
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;</summary>
    
    
    
    <category term="NetWork" scheme="https://blog.lqs1848.top/categories/NetWork/"/>
    
    
    <category term="QQ" scheme="https://blog.lqs1848.top/tags/QQ/"/>
    
    <category term="JA3" scheme="https://blog.lqs1848.top/tags/JA3/"/>
    
    <category term="TLS指纹" scheme="https://blog.lqs1848.top/tags/TLS%E6%8C%87%E7%BA%B9/"/>
    
  </entry>
  
  <entry>
    <title>路径中有非法字符导致FTP异常</title>
    <link href="https://blog.lqs1848.top/2022/09/13/2022-09-13%20%E8%B7%AF%E5%BE%84%E4%B8%AD%E6%9C%89%E9%9D%9E%E6%B3%95%E5%AD%97%E7%AC%A6%E5%AF%BC%E8%87%B4FTP%E5%BC%82%E5%B8%B8/"/>
    <id>https://blog.lqs1848.top/2022/09/13/2022-09-13%20%E8%B7%AF%E5%BE%84%E4%B8%AD%E6%9C%89%E9%9D%9E%E6%B3%95%E5%AD%97%E7%AC%A6%E5%AF%BC%E8%87%B4FTP%E5%BC%82%E5%B8%B8/</id>
    <published>2022-09-12T16:00:00.000Z</published>
    <updated>2022-09-13T10:34:09.461Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><p>仓鼠症晚期 硬盘总是有无数的资源</p><p>这么多资源的整理总是令人头痛</p><p>特别是各种五花八门的命名方式 简直是要踩在Windows Linux 的目录非法字符上跳舞</p><h1 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h1><p>首先 Windows 上有个 文件夹末尾不能有空格的问题</p><p>在资源管理器上访问 末尾带空格的文件夹时 可以正常访问</p><p>但是 FTP 访问报没有权限</p><p>详细问题百度 <strong>文件夹后面有带有空格无法删除</strong></p><p>我自己的文件夹末尾带空格 是由于自己写的一个bat</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="keyword">for</span> %%i <span class="keyword">in</span> (*.avi,*.mov,*.mpg,*.RA,*.RM,*.RMVB,*.WMV,*.mkv,*.mp4,*.asf,*.m4v,*.VOB,*.ts) <span class="keyword">do</span> (</span><br><span class="line">md <span class="string">&quot;%~dp0\%%~ni\&quot;</span></span><br><span class="line"><span class="string">move &quot;</span>%%i<span class="string">&quot; &quot;</span>%~dp0\%%~ni\&quot;</span><br><span class="line">)</span><br><span class="line">pause</span><br></pre></td></tr></table></figure><p>用来处理某些下载下来就没有文件夹的视频文件</p><p>由于部分视频文件有xxx空格.mp4</p><p>根据文件名创建出来的文件夹就有了空格导致路径错误</p><p>可以删除但是不能重命名</p><p>在命令提示符下，进入相对路径，输入：rd /s /q “文件夹名 \“</p><p>必须删除前复制文件到新路径 然后删除旧目录 再重命名新路径</p><p>太麻烦了 百度 谷歌 微软自己的问题社区都没有解决方法</p><h1 id="解决方式"><a href="#解决方式" class="headerlink" title="解决方式"></a>解决方式</h1><p>我自己用 C# 写了个重命名的 exe(<a href="https://github.com/lqs1848/FileNameRepair">源码</a>)</p><p>一开始也是 直接访问路径 无法访问</p><p>最后发现C# 有路径忽略 Windows 优化的前缀 “\\?\“</p><p>一试 问题解决</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Director</span>(<span class="params"><span class="built_in">string</span> dir</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DirectoryInfo fdir = <span class="keyword">new</span> DirectoryInfo(dir);</span><br><span class="line">    FileSystemInfo[] fsinfos = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        fsinfos = fdir.GetFileSystemInfos();</span><br><span class="line">    &#125;</span><br><span class="line">    catch </span><br><span class="line">    &#123;   </span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            fdir = <span class="keyword">new</span> DirectoryInfo(<span class="string">&quot;\\\\?\\&quot;</span> + dir);</span><br><span class="line">            fsinfos = fdir.GetFileSystemInfos();</span><br><span class="line">        &#125;</span><br><span class="line">        catch &#123;</span><br><span class="line">            _syncContext.Post(OutLog, <span class="string">&quot;Error(&quot;</span> + dir + <span class="string">&quot;)&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">foreach</span> (FileSystemInfo fsinfo <span class="keyword">in</span> fsinfos)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ((fsinfo.Attributes &amp; FileAttributes.Hidden) == FileAttributes.Hidden &amp;&amp; (fsinfo.Attributes &amp; FileAttributes.System) == FileAttributes.System)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//_syncContext.Post(OutLog, &quot;跳过&quot; + fsinfo.FullName);</span></span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (fsinfo <span class="keyword">is</span> DirectoryInfo)     <span class="comment">//判断是否为文件夹</span></span><br><span class="line">            Director(fsinfo.FullName);   <span class="comment">//递归调用</span></span><br><span class="line">        </span><br><span class="line">        rename(fsinfo);</span><br><span class="line">    &#125;<span class="comment">//foreach</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;<span class="comment">//method</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">rename</span>(<span class="params">FileSystemInfo fsinfo</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">string</span> oldName = fsinfo <span class="keyword">is</span> DirectoryInfo ? fsinfo.Name : Path.GetFileNameWithoutExtension(fsinfo.FullName);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//去除不可见字符</span></span><br><span class="line">    <span class="built_in">string</span> newName = Regex.Replace(oldName, <span class="string">&quot;\\p&#123;C&#125;&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">    <span class="comment">//去除所有 Emoji</span></span><br><span class="line">    newName = Regex.Replace(newName, <span class="string">@&quot;(\ud83c[\udf00-\udfff])|(\ud83d[\udc00-\ude4f\ude80-\udeff])|[\u2600-\u2B55]&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">    newName = newName.Replace(<span class="string">&quot;\\&quot;</span>, <span class="string">&quot;＼&quot;</span>);</span><br><span class="line">    newName = newName.Replace(<span class="string">&quot;/&quot;</span>, <span class="string">&quot;／&quot;</span>);</span><br><span class="line">    newName = newName.Replace(<span class="string">&quot;:&quot;</span>, <span class="string">&quot;：&quot;</span>);</span><br><span class="line">    newName = newName.Replace(<span class="string">&quot;*&quot;</span>, <span class="string">&quot;＊&quot;</span>);</span><br><span class="line">    newName = newName.Replace(<span class="string">&quot;!&quot;</span>, <span class="string">&quot;！&quot;</span>);</span><br><span class="line">    newName = newName.Replace(<span class="string">&quot;?&quot;</span>, <span class="string">&quot;？&quot;</span>);</span><br><span class="line">    newName = newName.Replace(<span class="string">&quot;&lt;&quot;</span>, <span class="string">&quot;〈&quot;</span>);</span><br><span class="line">    newName = newName.Replace(<span class="string">&quot;&gt;&quot;</span>, <span class="string">&quot;〉&quot;</span>);</span><br><span class="line">    newName = newName.Replace(<span class="string">&quot;+&quot;</span>, <span class="string">&quot;＋&quot;</span>);</span><br><span class="line">    newName = newName.Replace(<span class="string">&quot;-&quot;</span>, <span class="string">&quot;－&quot;</span>);</span><br><span class="line">    newName = newName.Replace(<span class="string">&quot;#&quot;</span>, <span class="string">&quot;＃&quot;</span>);</span><br><span class="line">    newName = newName.Replace(<span class="string">&quot;$&quot;</span>, <span class="string">&quot;￥&quot;</span>);</span><br><span class="line">    newName = newName.Replace(<span class="string">&quot;%&quot;</span>, <span class="string">&quot;％&quot;</span>);</span><br><span class="line">    newName = newName.Replace(<span class="string">&quot;&amp;&quot;</span>, <span class="string">&quot;＆&quot;</span>);</span><br><span class="line">    newName = newName.Replace(<span class="string">&quot;\&quot;&quot;</span>, <span class="string">&quot;＂&quot;</span>);</span><br><span class="line">    newName = newName.Replace(<span class="string">&quot;&#x27;&quot;</span>, <span class="string">&quot;＇&quot;</span>);</span><br><span class="line">    newName = newName.Replace(<span class="string">&quot;(&quot;</span>, <span class="string">&quot;（&quot;</span>);</span><br><span class="line">    newName = newName.Replace(<span class="string">&quot;)&quot;</span>, <span class="string">&quot;）&quot;</span>);</span><br><span class="line">    newName = newName.Replace(<span class="string">&quot;.&quot;</span>, <span class="string">&quot;．&quot;</span>);</span><br><span class="line">    newName = Regex.Replace(newName, <span class="string">@&quot;\s&quot;</span>, <span class="string">&quot; &quot;</span>);</span><br><span class="line">    <span class="comment">//去除名称开头结尾的空格</span></span><br><span class="line">    <span class="comment">//结尾有空格会触发 文件系统 BUG</span></span><br><span class="line">    newName = newName.Trim();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!newName.Equals(oldName))</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (fsinfo <span class="keyword">is</span> DirectoryInfo)</span><br><span class="line">                Directory.Move(fsinfo.FullName, Path.GetDirectoryName(fsinfo.FullName) + <span class="string">&quot;\\&quot;</span> + newName);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                File.Move(fsinfo.FullName, Path.GetDirectoryName(fsinfo.FullName) + <span class="string">&quot;\\&quot;</span> + newName + Path.GetExtension(fsinfo.FullName));</span><br><span class="line">            _syncContext.Post(OutError, <span class="string">&quot;(&quot;</span> + oldName + <span class="string">&quot;) -&gt; (&quot;</span> + newName + <span class="string">&quot;)&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        catch &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (fsinfo <span class="keyword">is</span> DirectoryInfo)</span><br><span class="line">                    Directory.Move(<span class="string">&quot;\\\\?\\&quot;</span> + fsinfo.FullName, <span class="string">&quot;\\\\?\\&quot;</span> + Path.GetDirectoryName(fsinfo.FullName) + <span class="string">&quot;\\&quot;</span> + newName);</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    File.Move(<span class="string">&quot;\\\\?\\&quot;</span> + fsinfo.FullName, <span class="string">&quot;\\\\?\\&quot;</span> + Path.GetDirectoryName(fsinfo.FullName) + <span class="string">&quot;\\&quot;</span> + newName + Path.GetExtension(fsinfo.FullName));</span><br><span class="line">            &#125;</span><br><span class="line">            catch </span><br><span class="line">            &#123;</span><br><span class="line">                _syncContext.Post(OutLog, fsinfo.FullName + <span class="string">&quot; ERROR(&quot;</span> + oldName + <span class="string">&quot;) -&gt; (&quot;</span> + newName + <span class="string">&quot;)&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        errName++;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">&#125;<span class="comment">// method</span></span><br></pre></td></tr></table></figure><p>顺便把部分非法字符都删掉 或 替换掉 </p><p>不替换这些非法字符 经常会导致 FTP 用着用着 突然乱码 无法访问</p>]]></content>
    
    
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;</summary>
    
    
    
    <category term="NAS" scheme="https://blog.lqs1848.top/categories/NAS/"/>
    
    
    <category term="NAS" scheme="https://blog.lqs1848.top/tags/NAS/"/>
    
    <category term="FTP" scheme="https://blog.lqs1848.top/tags/FTP/"/>
    
    <category term="Linux" scheme="https://blog.lqs1848.top/tags/Linux/"/>
    
    <category term="Windows" scheme="https://blog.lqs1848.top/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>MyBatisPlusJoin单表Join多次</title>
    <link href="https://blog.lqs1848.top/2022/08/25/2022-08-25%20%20MyBatisPlusJoin%E5%8D%95%E8%A1%A8Join%E5%A4%9A%E6%AC%A1/"/>
    <id>https://blog.lqs1848.top/2022/08/25/2022-08-25%20%20MyBatisPlusJoin%E5%8D%95%E8%A1%A8Join%E5%A4%9A%E6%AC%A1/</id>
    <published>2022-08-24T16:00:00.000Z</published>
    <updated>2022-08-25T06:20:44.094Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><p>MyBatis Plus Join<br>用的是 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.github.yulichang&lt;&#x2F;groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;mybatis-plus-join&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.2.4&lt;&#x2F;version&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure><h1 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h1><p>大概是 一个轨迹逻辑信息表 需要关联多个点位的名称<br>点位表 需要被 轨迹信息关联多次<br>而 我使用的这个 MyBatisPlusJoin 无法关联单表多次 (特指 Lambda 形式)</p><h1 id="解决方式"><a href="#解决方式" class="headerlink" title="解决方式"></a>解决方式</h1><p>研究源码发现<br>无法链接单表多次的主要原因是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line">    * 关联的表</span><br><span class="line">    *&#x2F;</span><br><span class="line">   protected Map&lt;Class&lt;?&gt;, Integer&gt; subTable &#x3D; new HashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * 表序号</span><br><span class="line"> *&#x2F;</span><br><span class="line">private int tableIndex &#x3D; 1;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>框架用于记录本次查询的SQL 使用了<br>Class 作为 Key<br>tableIndex 作为 Value<br>导致 同一张表 Join 多次 生成出来的SQL<br>都会是最后一次JOIN的那个表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">join.leftJoin(FwServicePoint.class, FwServicePoint::getServicePointId, FwTrackDistance::getSpBeginId);</span><br><span class="line">join.leftJoin(FwServicePoint.class, FwServicePoint::getServicePointId, FwTrackDistance::getSpEndId);</span><br></pre></td></tr></table></figure><p>同样的 FwServicePoint.class 给到的 TABLE_ALIAS 会是一样的<br>生成出来的SQL会是<br>JOIN FW_SERVICE_POINT t2 on(xx=xx)<br>JOIN FW_SERVICE_POINT t2 on(xx=xx)</p><p>这样就有两种方式去解决</p><p>一种是<br>    将 FwServicePoint 这张表 建立多个映射的 javabean<br>如</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">join.leftJoin(FwServicePointStart.class, FwServicePointStart::getServicePointId, FwTrackDistance::getSpBeginId);</span><br><span class="line">join.leftJoin(FwServicePointEnd.class, FwServicePointEnd::getServicePointId, FwTrackDistance::getSpEndId);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@TableName(&quot;FW_SERVICE_POINT&quot;)</span><br><span class="line">public class FwServicePoint &#123;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br><span class="line">@TableName(&quot;FW_SERVICE_POINT&quot;)</span><br><span class="line">public class FwServicePointStart &#123;</span><br><span class="line">&#x2F;&#x2F;复制出来只用于 join的映射对象</span><br><span class="line">&#125;</span><br><span class="line">@TableName(&quot;FW_SERVICE_POINT&quot;)</span><br><span class="line">public class FwServicePointEnd &#123;</span><br><span class="line">&#x2F;&#x2F;复制出来只用于 join的映射对象</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>另一种就是修改框架了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line"> * 别名对应表名</span><br><span class="line"> *&#x2F;</span><br><span class="line">   protected Map&lt;String, Integer&gt; tableAliasMap &#x3D; new HashMap&lt;&gt;();</span><br><span class="line">&#x2F;*</span><br><span class="line">大概逻辑就是 leftjoin 时携带一个 表别名 然后记录 当前表 join 时的 tableIndex</span><br><span class="line">生成 join条件时 从 tableAliasMap 去获取 tableIndex 而不是 subTable</span><br><span class="line"></span><br><span class="line">修改 MPJLambdaWrapper 中的 SelectColumn 添加 tableAlias 字段</span><br><span class="line">在 leftJoin 方法中添加 tableAlias 参数</span><br><span class="line">*&#x2F;</span><br></pre></td></tr></table></figure><p>修改后调用方式为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">join.leftJoin(FwServicePoint.class, FwServicePoint::getServicePointId, FwTrackDistance::getSpBeginId,&quot;start&quot;);</span><br><span class="line">join.leftJoin(FwServicePoint.class, FwServicePoint::getServicePointId, FwTrackDistance::getSpEndId, &quot;end&quot;);</span><br><span class="line">join.selectAs(&quot;start&quot;, FwServicePoint::getPlaceName, FwTrackDistance::getSpBeginName);</span><br><span class="line">join.selectAs(&quot;end&quot;, FwServicePoint::getPlaceName, FwTrackDistance::getSpEndName);</span><br></pre></td></tr></table></figure><p>修改源码如下</p><p>JoinWrapper = MPJLambdaWrapper</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br></pre></td><td class="code"><pre><span class="line">import java.util.ArrayList;</span><br><span class="line">import java.util.List;</span><br><span class="line">import java.util.Map;</span><br><span class="line">import java.util.Objects;</span><br><span class="line">import java.util.concurrent.atomic.AtomicInteger;</span><br><span class="line">import java.util.function.Predicate;</span><br><span class="line">import java.util.stream.Collectors;</span><br><span class="line"></span><br><span class="line">import com.baomidou.mybatisplus.core.conditions.SharedString;</span><br><span class="line">import com.baomidou.mybatisplus.core.conditions.segments.MergeSegments;</span><br><span class="line">import com.baomidou.mybatisplus.core.metadata.TableFieldInfo;</span><br><span class="line">import com.baomidou.mybatisplus.core.metadata.TableInfo;</span><br><span class="line">import com.baomidou.mybatisplus.core.metadata.TableInfoHelper;</span><br><span class="line">import com.baomidou.mybatisplus.core.toolkit.ArrayUtils;</span><br><span class="line">import com.baomidou.mybatisplus.core.toolkit.Assert;</span><br><span class="line">import com.baomidou.mybatisplus.core.toolkit.CollectionUtils;</span><br><span class="line">import com.baomidou.mybatisplus.core.toolkit.StringPool;</span><br><span class="line">import com.baomidou.mybatisplus.core.toolkit.StringUtils;</span><br><span class="line">import com.baomidou.mybatisplus.core.toolkit.support.SFunction;</span><br><span class="line">import com.github.yulichang.toolkit.Constant;</span><br><span class="line">import com.github.yulichang.toolkit.LambdaUtils;</span><br><span class="line">import com.github.yulichang.wrapper.enums.BaseFuncEnum;</span><br><span class="line">import com.github.yulichang.wrapper.interfaces.Query;</span><br><span class="line">import com.mysd.framework.mybatis.wrapper.interfaces.QuickJoinFunction;</span><br><span class="line"></span><br><span class="line">import lombok.Data;</span><br><span class="line">import lombok.Getter;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * 魔改 mybatis-plus-join</span><br><span class="line"> * </span><br><span class="line"> * </span><br><span class="line"> * 允许两张表 允许同时 join 多次</span><br><span class="line"> * selectAll 忽略 select &#x3D; false 的字段</span><br><span class="line"> *&#x2F;</span><br><span class="line">public class JoinWrapper&lt;T&gt; extends JoinAbstractLambdaWrapper&lt;T, JoinWrapper&lt;T&gt;&gt;</span><br><span class="line">implements Query&lt;JoinWrapper&lt;T&gt;&gt;, LambdaJoin&lt;JoinWrapper&lt;T&gt;&gt; &#123;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * </span><br><span class="line"> *&#x2F;</span><br><span class="line">private static final long serialVersionUID &#x3D; 1L;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * 查询字段 sql</span><br><span class="line"> *&#x2F;</span><br><span class="line">private SharedString sqlSelect &#x3D; new SharedString();</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * 查询表</span><br><span class="line"> *&#x2F;</span><br><span class="line">private final SharedString from &#x3D; new SharedString();</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * 主表别名</span><br><span class="line"> *&#x2F;</span><br><span class="line">private final SharedString alias &#x3D; new SharedString(Constant.TABLE_ALIAS);</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * 查询的字段</span><br><span class="line"> *&#x2F;</span><br><span class="line">private final List&lt;SelectColumn&gt; selectColumns &#x3D; new ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * 忽略查询的字段</span><br><span class="line"> *&#x2F;</span><br><span class="line">private final List&lt;SelectColumn&gt; ignoreColumns &#x3D; new ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * 是否 select distinct</span><br><span class="line"> *&#x2F;</span><br><span class="line">private boolean selectDistinct &#x3D; false;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * 表序号</span><br><span class="line"> *&#x2F;</span><br><span class="line">private int tableIndex &#x3D; 1;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * ON sql wrapper集合</span><br><span class="line"> *&#x2F;</span><br><span class="line">private final List&lt;JoinWrapper&lt;?&gt;&gt; onWrappers &#x3D; new ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * 连表关键字 on 条件 func 使用</span><br><span class="line"> *&#x2F;</span><br><span class="line">@Getter</span><br><span class="line">private String keyWord;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * 连表实体类 on 条件 func 使用</span><br><span class="line"> *&#x2F;</span><br><span class="line">@Getter</span><br><span class="line">private Class&lt;?&gt; joinClass;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * 连表别名</span><br><span class="line"> *&#x2F;</span><br><span class="line">@Getter</span><br><span class="line">private String tableAlias;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * 不建议直接 new 该实例，使用 JoinWrapper.&lt;UserDO&gt;lambdaQuery()</span><br><span class="line"> *&#x2F;</span><br><span class="line">public JoinWrapper() &#123;</span><br><span class="line">super.initNeed();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * 不建议直接 new 该实例，使用 JoinWrapper.&lt;UserDO&gt;lambdaQuery()</span><br><span class="line"> *&#x2F;</span><br><span class="line">JoinWrapper(T entity, Class&lt;T&gt; entityClass, SharedString sqlSelect, AtomicInteger paramNameSeq,</span><br><span class="line">Map&lt;String, Object&gt; paramNameValuePairs, MergeSegments mergeSegments, SharedString lastSql,</span><br><span class="line">SharedString sqlComment, SharedString sqlFirst, Map&lt;Class&lt;?&gt;, Integer&gt; subTable, String keyWord,</span><br><span class="line">Class&lt;?&gt; joinClass, String tableAlias) &#123;</span><br><span class="line">super.setEntity(entity);</span><br><span class="line">super.setEntityClass(entityClass);</span><br><span class="line">this.paramNameSeq &#x3D; paramNameSeq;</span><br><span class="line">this.paramNameValuePairs &#x3D; paramNameValuePairs;</span><br><span class="line">this.expression &#x3D; mergeSegments;</span><br><span class="line">this.sqlSelect &#x3D; sqlSelect;</span><br><span class="line">this.lastSql &#x3D; lastSql;</span><br><span class="line">this.sqlComment &#x3D; sqlComment;</span><br><span class="line">this.sqlFirst &#x3D; sqlFirst;</span><br><span class="line">this.subTable &#x3D; subTable;</span><br><span class="line">this.keyWord &#x3D; keyWord;</span><br><span class="line">this.joinClass &#x3D; joinClass;</span><br><span class="line">this.tableAlias &#x3D; tableAlias;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * sql去重 select distinct</span><br><span class="line"> *&#x2F;</span><br><span class="line">public JoinWrapper&lt;T&gt; distinct() &#123;</span><br><span class="line">this.selectDistinct &#x3D; true;</span><br><span class="line">return typedThis;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">@SafeVarargs</span><br><span class="line">public final &lt;S&gt; JoinWrapper&lt;T&gt; select(SFunction&lt;S, ?&gt;... columns) &#123;</span><br><span class="line">if (ArrayUtils.isNotEmpty(columns)) &#123;</span><br><span class="line">for (SFunction&lt;S, ?&gt; s : columns) &#123;</span><br><span class="line">selectColumns.add(SelectColumn.of(LambdaUtils.getEntityClass(s), getCache(s).getColumn()));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">return typedThis;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public &lt;E&gt; JoinWrapper&lt;T&gt; select(Class&lt;E&gt; entityClass, Predicate&lt;TableFieldInfo&gt; predicate) &#123;</span><br><span class="line">TableInfo info &#x3D; TableInfoHelper.getTableInfo(entityClass);</span><br><span class="line">Assert.notNull(info, &quot;table can not be find&quot;);</span><br><span class="line">info.getFieldList().stream().filter(predicate).collect(Collectors.toList())</span><br><span class="line">.forEach(i -&gt; selectColumns.add(SelectColumn.of(entityClass, i.getColumn())));</span><br><span class="line">return typedThis;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public &lt;S, X&gt; JoinWrapper&lt;T&gt; selectAs(String tableAlias, SFunction&lt;S, ?&gt; column, SFunction&lt;X, ?&gt; alias) &#123;</span><br><span class="line">selectColumns.add(SelectColumn.of(LambdaUtils.getEntityClass(column), getCache(column).getColumn(),</span><br><span class="line">LambdaUtils.getName(alias), tableAlias));</span><br><span class="line">return typedThis;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public &lt;S&gt; JoinWrapper&lt;T&gt; selectAs(SFunction&lt;S, ?&gt; column, String alias) &#123;</span><br><span class="line">selectColumns.add(SelectColumn.of(LambdaUtils.getEntityClass(column), getCache(column).getColumn(), alias));</span><br><span class="line">return typedThis;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public &lt;S&gt; JoinWrapper&lt;T&gt; selectFunc(boolean condition, BaseFuncEnum funcEnum, SFunction&lt;S, ?&gt; column,</span><br><span class="line">String alias) &#123;</span><br><span class="line">if (condition) &#123;</span><br><span class="line">selectColumns.add(</span><br><span class="line">SelectColumn.of(LambdaUtils.getEntityClass(column), getCache(column).getColumn(), alias, funcEnum));</span><br><span class="line">&#125;</span><br><span class="line">return typedThis;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public JoinWrapper&lt;T&gt; selectFunc(boolean condition, BaseFuncEnum funcEnum, Object column, String alias) &#123;</span><br><span class="line">if (condition) &#123;</span><br><span class="line">selectColumns.add(SelectColumn.of(null, column.toString(), alias, funcEnum));</span><br><span class="line">&#125;</span><br><span class="line">return typedThis;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public final JoinWrapper&lt;T&gt; selectAll(Class&lt;?&gt; clazz) &#123;</span><br><span class="line">TableInfo info &#x3D; TableInfoHelper.getTableInfo(clazz);</span><br><span class="line">Assert.notNull(info, &quot;table can not be find -&gt; %s&quot;, clazz);</span><br><span class="line">if (info.havePK()) &#123;</span><br><span class="line">selectColumns.add(SelectColumn.of(clazz, info.getKeyColumn()));</span><br><span class="line">&#125;</span><br><span class="line">info.getFieldList().forEach(c -&gt; &#123;</span><br><span class="line">if (c.isSelect())</span><br><span class="line">selectColumns.add(SelectColumn.of(clazz, c.getColumn()));</span><br><span class="line">&#125;);</span><br><span class="line">return typedThis;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">@SafeVarargs</span><br><span class="line">public final &lt;S&gt; JoinWrapper&lt;T&gt; selectIgnore(SFunction&lt;S, ?&gt;... columns) &#123;</span><br><span class="line">if (ArrayUtils.isNotEmpty(columns)) &#123;</span><br><span class="line">for (SFunction&lt;S, ?&gt; s : columns) &#123;</span><br><span class="line">ignoreColumns.add(SelectColumn.of(LambdaUtils.getEntityClass(s), getCache(s).getColumn()));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">return typedThis;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * 查询条件 SQL 片段</span><br><span class="line"> *&#x2F;</span><br><span class="line">@Override</span><br><span class="line">public String getSqlSelect() &#123;</span><br><span class="line">if (StringUtils.isBlank(sqlSelect.getStringValue())) &#123;</span><br><span class="line">if (CollectionUtils.isNotEmpty(ignoreColumns)) &#123;</span><br><span class="line">selectColumns.removeIf(c -&gt; c.getFuncEnum() &#x3D;&#x3D; null &amp;&amp; ignoreColumns.stream().anyMatch(</span><br><span class="line">i -&gt; i.getClazz() &#x3D;&#x3D; c.getClazz() &amp;&amp; Objects.equals(c.getColumnName(), i.getColumnName())));</span><br><span class="line">&#125;</span><br><span class="line">String s &#x3D; selectColumns.stream().map(i -&gt; &#123;</span><br><span class="line">String str &#x3D; Constant.TABLE_ALIAS + getDefault(</span><br><span class="line">i.getTableAlias() !&#x3D; null ? tableAliasMap.get(i.getTableAlias()) : subTable.get(i.getClazz()))</span><br><span class="line">+ StringPool.DOT + i.getColumnName();</span><br><span class="line">return (i.getFuncEnum() &#x3D;&#x3D; null ? str : String.format(i.getFuncEnum().getSql(), str))</span><br><span class="line">+ (StringUtils.isBlank(i.getAlias()) ? StringPool.EMPTY : (Constant.AS + i.getAlias()));</span><br><span class="line">&#125;).collect(Collectors.joining(StringPool.COMMA));</span><br><span class="line">sqlSelect.setStringValue(s);</span><br><span class="line">&#125;</span><br><span class="line">return sqlSelect.getStringValue();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * 获取连表部分语句</span><br><span class="line"> *&#x2F;</span><br><span class="line">public String getFrom() &#123;</span><br><span class="line">if (StringUtils.isBlank(from.getStringValue())) &#123;</span><br><span class="line">StringBuilder value &#x3D; new StringBuilder();</span><br><span class="line">for (JoinWrapper&lt;?&gt; wrapper : onWrappers) &#123;</span><br><span class="line">String tableName &#x3D; TableInfoHelper.getTableInfo(wrapper.getJoinClass()).getTableName();</span><br><span class="line"></span><br><span class="line">String tableNameDefAlias &#x3D; Constant.TABLE_ALIAS + subTable.get(wrapper.getJoinClass());</span><br><span class="line">String tableNameAlias &#x3D; Constant.TABLE_ALIAS</span><br><span class="line">+ (wrapper.getTableAlias() !&#x3D; null ? tableAliasMap.get(wrapper.getTableAlias())</span><br><span class="line">: subTable.get(wrapper.getJoinClass()));</span><br><span class="line"></span><br><span class="line">String whereSql &#x3D; wrapper.getExpression().getNormal().getSqlSegment();</span><br><span class="line">&#x2F;&#x2F; 为了实现 多次关联的表 可以写在 左边 也可以写在 右边 使用 replace 进行补救</span><br><span class="line">if (!tableNameDefAlias.equals(tableNameAlias))</span><br><span class="line">whereSql &#x3D; whereSql.replaceAll(tableNameDefAlias + StringPool.BACK_SLASH + StringPool.DOT,</span><br><span class="line">tableNameAlias + StringPool.BACK_SLASH + StringPool.DOT);</span><br><span class="line"></span><br><span class="line">value.append(wrapper.getKeyWord()).append(tableName).append(StringPool.SPACE).append(tableNameAlias)</span><br><span class="line">.append(Constant.ON).append(whereSql);</span><br><span class="line">&#125;</span><br><span class="line">from.setStringValue(value.toString());</span><br><span class="line">&#125;</span><br><span class="line">return from.getStringValue();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public String getAlias() &#123;</span><br><span class="line">return alias.getStringValue();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public boolean getSelectDistinct() &#123;</span><br><span class="line">return selectDistinct;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * 用于生成嵌套 sql</span><br><span class="line"> * &lt;p&gt;</span><br><span class="line"> * 故 sqlSelect 不向下传递</span><br><span class="line"> * &lt;&#x2F;p&gt;</span><br><span class="line"> *&#x2F;</span><br><span class="line">@Override</span><br><span class="line">protected JoinWrapper&lt;T&gt; instance() &#123;</span><br><span class="line">return instance(null, null, null);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">protected JoinWrapper&lt;T&gt; instance(String keyWord, Class&lt;?&gt; joinClass, String tableAlias) &#123;</span><br><span class="line">return new JoinWrapper&lt;&gt;(getEntity(), getEntityClass(), null, paramNameSeq, paramNameValuePairs,</span><br><span class="line">new MergeSegments(), SharedString.emptyString(), SharedString.emptyString(), SharedString.emptyString(),</span><br><span class="line">this.subTable, keyWord, joinClass, tableAlias);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void clear() &#123;</span><br><span class="line">super.clear();</span><br><span class="line">sqlSelect.toNull();</span><br><span class="line">from.toNull();</span><br><span class="line">selectColumns.clear();</span><br><span class="line">ignoreColumns.clear();</span><br><span class="line">subTable.clear();</span><br><span class="line">tableAliasMap.clear();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public &lt;R&gt; JoinWrapper&lt;T&gt; join(String keyWord, boolean condition, Class&lt;R&gt; clazz, QuickJoinFunction function,</span><br><span class="line">String tableAlias) &#123;</span><br><span class="line">if (condition) &#123;</span><br><span class="line">JoinWrapper&lt;?&gt; apply &#x3D; function.apply(instance(keyWord, clazz, tableAlias));</span><br><span class="line">onWrappers.add(apply);</span><br><span class="line">subTable.put(clazz, tableIndex);</span><br><span class="line">if (tableAlias !&#x3D; null)</span><br><span class="line">tableAliasMap.put(tableAlias, tableIndex);</span><br><span class="line">tableIndex++;</span><br><span class="line">&#125;</span><br><span class="line">return typedThis;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public JoinWrapper&lt;T&gt; limit(Integer num)&#123;</span><br><span class="line">return last(&quot;limit &quot; + num);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * select字段</span><br><span class="line"> *&#x2F;</span><br><span class="line">@Data</span><br><span class="line">private static class SelectColumn &#123;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * 字段实体类</span><br><span class="line"> *&#x2F;</span><br><span class="line">private Class&lt;?&gt; clazz;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * 表 别名</span><br><span class="line"> *&#x2F;</span><br><span class="line">private String tableAlias;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * 数据库字段名</span><br><span class="line"> *&#x2F;</span><br><span class="line">private String columnName;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * 字段别名</span><br><span class="line"> *&#x2F;</span><br><span class="line">private String alias;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * 字段函数</span><br><span class="line"> *&#x2F;</span><br><span class="line">private BaseFuncEnum funcEnum;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * 自定义函数填充参数</span><br><span class="line"> *&#x2F;</span><br><span class="line">private List&lt;SFunction&lt;?, ?&gt;&gt; funcArgs;</span><br><span class="line"></span><br><span class="line">private SelectColumn(Class&lt;?&gt; clazz, String columnName, String alias, String tableAlias,</span><br><span class="line">BaseFuncEnum funcEnum) &#123;</span><br><span class="line">this.clazz &#x3D; clazz;</span><br><span class="line">this.columnName &#x3D; columnName;</span><br><span class="line">this.alias &#x3D; alias;</span><br><span class="line">this.tableAlias &#x3D; tableAlias;</span><br><span class="line">this.funcEnum &#x3D; funcEnum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public static SelectColumn of(Class&lt;?&gt; clazz, String columnName) &#123;</span><br><span class="line">return new SelectColumn(clazz, columnName, null, null, null);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public static SelectColumn of(Class&lt;?&gt; clazz, String columnName, String alias) &#123;</span><br><span class="line">return new SelectColumn(clazz, columnName, alias, null, null);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public static SelectColumn of(Class&lt;?&gt; clazz, String columnName, String alias, BaseFuncEnum funcEnum) &#123;</span><br><span class="line">return new SelectColumn(clazz, columnName, alias, null, funcEnum);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public static SelectColumn of(Class&lt;?&gt; clazz, String columnName, String alias, String tableAlias) &#123;</span><br><span class="line">return new SelectColumn(clazz, columnName, alias, tableAlias, null);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>JoinAbstractLambdaWrapper = MPJAbstractLambdaWrapper</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">import com.baomidou.mybatisplus.core.toolkit.StringPool;</span><br><span class="line">import com.baomidou.mybatisplus.core.toolkit.support.ColumnCache;</span><br><span class="line">import com.baomidou.mybatisplus.core.toolkit.support.SFunction;</span><br><span class="line">import com.github.yulichang.toolkit.Constant;</span><br><span class="line">import com.github.yulichang.toolkit.LambdaUtils;</span><br><span class="line">import com.github.yulichang.wrapper.MPJAbstractWrapper;</span><br><span class="line"></span><br><span class="line">import java.util.Arrays;</span><br><span class="line">import java.util.HashMap;</span><br><span class="line">import java.util.Map;</span><br><span class="line">import java.util.Objects;</span><br><span class="line"></span><br><span class="line">import static java.util.stream.Collectors.joining;</span><br><span class="line"></span><br><span class="line">public abstract class JoinAbstractLambdaWrapper&lt;T, Children extends JoinAbstractLambdaWrapper&lt;T, Children&gt;&gt;</span><br><span class="line">        extends MPJAbstractWrapper&lt;T, Children&gt; &#123;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 关联的表</span><br><span class="line">     *&#x2F;</span><br><span class="line">    protected Map&lt;Class&lt;?&gt;, Integer&gt; subTable &#x3D; new HashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line"> * 别名对应表名</span><br><span class="line"> *&#x2F;</span><br><span class="line">    protected Map&lt;String, Integer&gt; tableAliasMap &#x3D; new HashMap&lt;&gt;();</span><br><span class="line">    </span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 缓存字段</span><br><span class="line">     *&#x2F;</span><br><span class="line">    protected Map&lt;Class&lt;?&gt;, Map&lt;String, ColumnCache&gt;&gt; columnMap &#x3D; new HashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    protected &lt;X&gt; String columnToString(X column) &#123;</span><br><span class="line">        return columnToString((SFunction&lt;?, ?&gt;) column);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    @SafeVarargs</span><br><span class="line">    protected final &lt;X&gt; String columnsToString(X... columns) &#123;</span><br><span class="line">        return Arrays.stream(columns).map(i -&gt; columnToString((SFunction&lt;?, ?&gt;) i)).collect(joining(StringPool.COMMA));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    protected String columnToString(SFunction&lt;?, ?&gt; column) &#123;</span><br><span class="line">&#x2F;&#x2F;这里还是用的 subTable 因为我没有在 where 里面过滤关联表的需求 就不写了</span><br><span class="line">        return Constant.TABLE_ALIAS + getDefault(subTable.get(LambdaUtils.getEntityClass(column))) + StringPool.DOT +</span><br><span class="line">                getCache(column).getColumn();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    protected ColumnCache getCache(SFunction&lt;?, ?&gt; fn) &#123;</span><br><span class="line">        Class&lt;?&gt; aClass &#x3D; LambdaUtils.getEntityClass(fn);</span><br><span class="line">        Map&lt;String, ColumnCache&gt; cacheMap &#x3D; columnMap.get(aClass);</span><br><span class="line">        if (cacheMap &#x3D;&#x3D; null) &#123;</span><br><span class="line">            cacheMap &#x3D; LambdaUtils.getColumnMap(aClass);</span><br><span class="line">            columnMap.put(aClass, cacheMap);</span><br><span class="line">        &#125;</span><br><span class="line">        return cacheMap.get(LambdaUtils.formatKey(LambdaUtils.getName(fn)));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    protected String getDefault(Integer i) &#123;</span><br><span class="line">        if (Objects.nonNull(i)) &#123;</span><br><span class="line">            return i.toString();</span><br><span class="line">        &#125;</span><br><span class="line">        return StringPool.EMPTY;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>LambdaJoin</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br></pre></td><td class="code"><pre><span class="line">import com.baomidou.mybatisplus.core.toolkit.support.SFunction;</span><br><span class="line">import com.github.yulichang.interfaces.MPJBaseJoin;</span><br><span class="line">import com.github.yulichang.toolkit.Constant;</span><br><span class="line">import com.mysd.framework.mybatis.wrapper.interfaces.QuickJoinFunction;</span><br><span class="line"></span><br><span class="line">public interface LambdaJoin&lt;Children&gt; extends MPJBaseJoin &#123;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * left join</span><br><span class="line"> *</span><br><span class="line"> * @param clazz 关联的实体类</span><br><span class="line"> * @param left  条件</span><br><span class="line"> * @param right 条件</span><br><span class="line"> *&#x2F;</span><br><span class="line">default &lt;T, X&gt; Children leftJoin(Class&lt;T&gt; clazz, SFunction&lt;T, ?&gt; left, SFunction&lt;X, ?&gt; right) &#123;</span><br><span class="line">return leftJoin(true, clazz, left, right, null);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">default &lt;T, X&gt; Children leftJoin(Class&lt;T&gt; clazz, SFunction&lt;T, ?&gt; left, SFunction&lt;X, ?&gt; right, String tableAlias) &#123;</span><br><span class="line">return leftJoin(true, clazz, left, right, tableAlias);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * left join</span><br><span class="line"> * &lt;p&gt;</span><br><span class="line"> * 例 leftJoin(UserDO.class, on -&gt;</span><br><span class="line"> * on.eq(UserDO::getId,UserAddressDO::getUserId).le().gt()...)</span><br><span class="line"> *</span><br><span class="line"> * @param clazz    关联的实体类</span><br><span class="line"> * @param function 条件</span><br><span class="line"> *&#x2F;</span><br><span class="line">default &lt;T&gt; Children leftJoin(Class&lt;T&gt; clazz, QuickJoinFunction function) &#123;</span><br><span class="line">return leftJoin(true, clazz, function, null);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">default &lt;T&gt; Children leftJoin(Class&lt;T&gt; clazz, QuickJoinFunction function, String tableAlias) &#123;</span><br><span class="line">return leftJoin(true, clazz, function, tableAlias);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * left join</span><br><span class="line"> *</span><br><span class="line"> * @param condition 是否执行</span><br><span class="line"> * @param clazz     关联的实体类</span><br><span class="line"> * @param left      条件</span><br><span class="line"> * @param right     条件</span><br><span class="line"> *&#x2F;</span><br><span class="line">default &lt;T, X&gt; Children leftJoin(boolean condition, Class&lt;T&gt; clazz, SFunction&lt;T, ?&gt; left, SFunction&lt;X, ?&gt; right,</span><br><span class="line">String tableAlias) &#123;</span><br><span class="line">return leftJoin(condition, clazz, on -&gt; &#123;</span><br><span class="line">return on.eq(left, right);</span><br><span class="line">&#125;, tableAlias);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * left join</span><br><span class="line"> * &lt;p&gt;</span><br><span class="line"> * 例 leftJoin(UserDO.class, on -&gt;</span><br><span class="line"> * on.eq(UserDO::getId,UserAddressDO::getUserId).le().gt()...)</span><br><span class="line"> *</span><br><span class="line"> * @param condition 是否执行</span><br><span class="line"> * @param clazz     关联实体类</span><br><span class="line"> * @param function  条件</span><br><span class="line"> *&#x2F;</span><br><span class="line">default &lt;T&gt; Children leftJoin(boolean condition, Class&lt;T&gt; clazz, QuickJoinFunction function, String tableAlias) &#123;</span><br><span class="line">return join(Constant.LEFT_JOIN, condition, clazz, function, tableAlias);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * ignore 参考 left join</span><br><span class="line"> *&#x2F;</span><br><span class="line">default &lt;T, X&gt; Children rightJoin(Class&lt;T&gt; clazz, SFunction&lt;T, ?&gt; left, SFunction&lt;X, ?&gt; right) &#123;</span><br><span class="line">return rightJoin(true, clazz, left, right);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * ignore 参考 left join</span><br><span class="line"> *&#x2F;</span><br><span class="line">default &lt;T&gt; Children rightJoin(Class&lt;T&gt; clazz, QuickJoinFunction function) &#123;</span><br><span class="line">return rightJoin(true, clazz, function);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * ignore 参考 left join</span><br><span class="line"> *&#x2F;</span><br><span class="line">default &lt;T, X&gt; Children rightJoin(boolean condition, Class&lt;T&gt; clazz, SFunction&lt;T, ?&gt; left, SFunction&lt;X, ?&gt; right) &#123;</span><br><span class="line">return rightJoin(condition, clazz, on -&gt; on.eq(left, right));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * ignore 参考 left join</span><br><span class="line"> *&#x2F;</span><br><span class="line">default &lt;T&gt; Children rightJoin(boolean condition, Class&lt;T&gt; clazz, QuickJoinFunction function) &#123;</span><br><span class="line">return join(Constant.RIGHT_JOIN, condition, clazz, function, null);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * ignore 参考 left join</span><br><span class="line"> *&#x2F;</span><br><span class="line">default &lt;T, X&gt; Children innerJoin(Class&lt;T&gt; clazz, SFunction&lt;T, ?&gt; left, SFunction&lt;X, ?&gt; right) &#123;</span><br><span class="line">return innerJoin(true, clazz, left, right);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * ignore 参考 left join</span><br><span class="line"> *&#x2F;</span><br><span class="line">default &lt;T&gt; Children innerJoin(Class&lt;T&gt; clazz, QuickJoinFunction function) &#123;</span><br><span class="line">return innerJoin(true, clazz, function);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * ignore 参考 left join</span><br><span class="line"> *&#x2F;</span><br><span class="line">default &lt;T, X&gt; Children innerJoin(boolean condition, Class&lt;T&gt; clazz, SFunction&lt;T, ?&gt; left, SFunction&lt;X, ?&gt; right) &#123;</span><br><span class="line">return innerJoin(condition, clazz, on -&gt; on.eq(left, right));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * ignore 参考 left join</span><br><span class="line"> *&#x2F;</span><br><span class="line">default &lt;T&gt; Children innerJoin(boolean condition, Class&lt;T&gt; clazz, QuickJoinFunction function) &#123;</span><br><span class="line">return join(Constant.INNER_JOIN, condition, clazz, function, null);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * 查询基类 可以直接调用此方法实现以上所有功能</span><br><span class="line"> *</span><br><span class="line"> * @param keyWord   连表关键字</span><br><span class="line"> * @param condition 是否执行</span><br><span class="line"> * @param clazz     连表实体类</span><br><span class="line"> * @param function  关联条件</span><br><span class="line"> *&#x2F;</span><br><span class="line">&lt;T&gt; Children join(String keyWord, boolean condition, Class&lt;T&gt; clazz, QuickJoinFunction function, String tableAlias);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;</summary>
    
    
    
    <category term="Java" scheme="https://blog.lqs1848.top/categories/Java/"/>
    
    <category term="MyBatis" scheme="https://blog.lqs1848.top/categories/Java/MyBatis/"/>
    
    
    <category term="Java" scheme="https://blog.lqs1848.top/tags/Java/"/>
    
    <category term="MyBatis" scheme="https://blog.lqs1848.top/tags/MyBatis/"/>
    
    <category term="MyBatis Plus" scheme="https://blog.lqs1848.top/tags/MyBatis-Plus/"/>
    
    <category term="MyBatis Plus Join" scheme="https://blog.lqs1848.top/tags/MyBatis-Plus-Join/"/>
    
  </entry>
  
  <entry>
    <title>Spring参数绑定(三)</title>
    <link href="https://blog.lqs1848.top/2022/05/12/2022-05-12%20%20Spring%E5%8F%82%E6%95%B0%E7%BB%91%E5%AE%9A(%E4%B8%89)/"/>
    <id>https://blog.lqs1848.top/2022/05/12/2022-05-12%20%20Spring%E5%8F%82%E6%95%B0%E7%BB%91%E5%AE%9A(%E4%B8%89)/</id>
    <published>2022-05-11T16:00:00.000Z</published>
    <updated>2022-05-12T10:53:26.401Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><p>之前写的能接受所有Content-Type参数的方法</p><h1 id="可能会导致的问题"><a href="#可能会导致的问题" class="headerlink" title="可能会导致的问题"></a>可能会导致的问题</h1><p>最近面前端 经常问面试者 有没有碰到过跨域然后怎么处理</p><p>突然想到一点</p><p>跨域这件事 都是浏览器在控制</p><p>如果 后端的所有参数都可以随意传递</p><p>那么原本是需要判断 跨域的复杂请求</p><p>就可以被前端以简单请求的方式去请求到</p><h1 id="栗子"><a href="#栗子" class="headerlink" title="栗子"></a>栗子</h1><p>后端一个接口 </p><p>只接收 JSON 参数 Content-Type 为 application/json</p><p>但是由于后端一般不会去写限制 Content-Type 的逻辑</p><p>一般就区分个 Get Post</p><p>JSON 参数 的接口 是复杂请求接口 </p><p>本来如果被浏览器调用时需要判断跨域的</p><p>但是如果参数可以随意携带 后端也能获取到的话</p><p>前端可以用 multipart/form-data 或 application/x-www-http-urlencoded</p><p>将请求变成 简单请求 浏览器就不会发出 预检请求(OPTIONS请求)</p><h1 id="怎么解决"><a href="#怎么解决" class="headerlink" title="怎么解决"></a>怎么解决</h1><p>如果可以的话 判断请求的 referer 必须是自己的网站就好了</p><h1 id="end"><a href="#end" class="headerlink" title="end"></a>end</h1><p>大概这也就是 Spring 要区分 @RquestParam @RquestBody 的部分原因吧</p><p>不过如果是提供 API 给其它后端调用就无所谓了</p>]]></content>
    
    
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;</summary>
    
    
    
    <category term="Java" scheme="https://blog.lqs1848.top/categories/Java/"/>
    
    <category term="Spring" scheme="https://blog.lqs1848.top/categories/Java/Spring/"/>
    
    
    <category term="Java" scheme="https://blog.lqs1848.top/tags/Java/"/>
    
    <category term="Spring" scheme="https://blog.lqs1848.top/tags/Spring/"/>
    
    <category term="RequestBody" scheme="https://blog.lqs1848.top/tags/RequestBody/"/>
    
    <category term="RequestParam" scheme="https://blog.lqs1848.top/tags/RequestParam/"/>
    
  </entry>
  
  <entry>
    <title>SSL/TSL SNI</title>
    <link href="https://blog.lqs1848.top/2022/03/15/2022-03-15%20%20SNI/"/>
    <id>https://blog.lqs1848.top/2022/03/15/2022-03-15%20%20SNI/</id>
    <published>2022-03-14T16:00:00.000Z</published>
    <updated>2022-03-15T08:49:47.779Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h1 id="SNI-Server-Name-Indication-是什么"><a href="#SNI-Server-Name-Indication-是什么" class="headerlink" title="SNI(Server Name Indication)是什么"></a>SNI(Server Name Indication)是什么</h1><blockquote><p>在使用TLS的时候，http server希望根据HTTP请求中HOST的不同，来决定使用不同的证书。</p></blockquote><p>在使用没有使用 TLS时 服务器可以通过 http 请求中的 Host 区分用户请求的是哪个网站</p><p>但是通过 TLS 请求握手时 并不知道 Host 早期的服务器是直接返回第一个证书</p><p>就导致了 1个ip 只能绑定一个 域名的 https</p><blockquote><p>这个问题是早期 SSL2.0 时就引入的一个问题，由此 SNI 协议就诞生了。SNI 协议允许客户端在发起 SSL 握手请求时，就提交请求的 Host 信息，使服务器能够切换到正确的域并返回相应的证书。</p><p>SNI（Server Name Indication）是为了解决一个服务器使用多个域名和证书的 SSL/TLS 扩展。一句话简述它的工作原理就是，在连接到服务器建立 SSL 连接之前先发送要访问站点的域名（Hostname），这样服务器根据这个域名返回一个合适的证书。目前，大多数操作系统和浏览器都已经很好地支持 SNI 扩展，OpenSSL 0.9.8 已经内置这一功能。</p></blockquote><h1 id="SNI阻断"><a href="#SNI阻断" class="headerlink" title="SNI阻断"></a>SNI阻断</h1><p>以下内容摘自《SNI阻断与解决方案》：</p><blockquote><p>在建立新的TLS连接时，客户端（如浏览器）发出的第一个握手包（称为Client Hello）中，包含了想要访问的域名信息（称为SNI，Server Name Indication）。<br>某些服务器会同时支持多个域名。在加密传输之前，它需要知道客户端访问的是哪个域名。于是SNI必须以明文的方式传输。并且由于浏览器并不知道服务器是否需要SNI，浏览器会对所有的TLS握手都加入SNI。<br>于是，根据黑名单，某些防火墙可以根据明文SNI信息，对TLS连接进行精确阻断。</p></blockquote><h1 id="解决SNI阻断"><a href="#解决SNI阻断" class="headerlink" title="解决SNI阻断"></a>解决SNI阻断</h1><h2 id="1-去除SNI"><a href="#1-去除SNI" class="headerlink" title="1.去除SNI"></a>1.去除SNI</h2><p>大部分解决SNI阻断的工具基本就是 去除掉 SNI 让服务端 以旧版本SSL的逻辑 提供默认证书</p><p>这需要 GFW 没有把这些网站的IP封锁 只阻断 SNI </p><h2 id="2-域前置-Domain-Fronting"><a href="#2-域前置-Domain-Fronting" class="headerlink" title="2.域前置(Domain Fronting)"></a>2.域前置(Domain Fronting)</h2><p>也是去除SNI或者说是替换掉SNI</p><p>SNI 写访问A网站 但是http host填写的是B 网站</p><p>cloudflare CDN就有这个功能</p><p>我自己弄的使用 cloudflare 搭建的 免翻墙 <a href="https://ancient-mud-95e3.lqs1848.workers.dev/">Pronhub</a> </p><p>(原先是域前置 现在应该变成纯粹的 CDN 了Host给的也是 CDN的加速域名)</p><p>Domain Fronting的工作原理:</p><blockquote><ul><li>用户用合法的域名<code>allow.com</code>向DNS请求CDN的IP，然后向CDN发起请求，这一步自然是没有任何问题的</li><li>因为在处理HTTPS请求时，CDN会首先将它解密，并根据HTTP Host的值做请求转发，所以用户想要访问一个非法网站<code>forbidden.com</code>，可以使用一个CDN上的合法的域名<code>allow.com</code>作为SNI，然后使用<code>forbidden.com</code>作为HTTP Host与CDN进行HTTPS通信</li><li>由于HTTP Host只能被转发看到，而审查者是看不到的，故CDN会放过这条请求，并将HTTP请求根据HTTP Host重新封装，发往<code>forbidden.com</code>的服务器</li><li>这种情况下，客户端实际通信的对象是<code>forbidden.com</code>，但在流量监控设备看来，客户端是在与<code>allow.com</code>通信，即客户端将流量成功伪装成了与<code>allow.com</code>通信的流量</li></ul></blockquote><h1 id="ESNI（Encrypted-SNI）"><a href="#ESNI（Encrypted-SNI）" class="headerlink" title="ESNI（Encrypted SNI）"></a>ESNI（Encrypted SNI）</h1><p>SNI 是明文的 会被 GFW 识别阻断 并且SPI 或任何中间代理 都可以获取到 SSL请求中的SNI 从而记录你访问的内容</p><p>ESNI 就是为了解决该问题而诞生的</p><blockquote><p>ESNI（Encrypted SNI）正如其名，其设计的目标就是为了加密 SNI，是最先为解决这一问题提出的一个 TLS 拓展。虽然这一方案即将被废弃，但对于了解其后继者 ECH 有着极大的帮助。</p><p>ESNI 为了能够让客户端获得密钥发送密文，依赖于另一个服务 DNS 来分发密钥。客户端在使用 ESNI 连接服务器之前，会在常规的请求网站 IP 的 A/AAAA 请求上再进行一次 TXT 的请求以获得 ESNI 的公钥</p></blockquote><p>将加密的公钥放到 记录到DNS当中 DNS必须采用 DoH（DNS over HTTPS）</p><p>DNS把公钥给到客户端后 客户端使用 公钥加密 SNI 得到 ESNI</p><h1 id="ECH（Encrypted-Client-Hello）"><a href="#ECH（Encrypted-Client-Hello）" class="headerlink" title="ECH（Encrypted Client Hello）"></a>ECH（Encrypted Client Hello）</h1><p>相比 ESNI 只加密了 SNI </p><p>ECH 把 SSL中的  Client Hello 消息 整个加密了</p><h1 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h1><p>有点圆环套圆环的感觉</p><p>SSL 通过证书信任建立了安全通信</p><p>但为了一个IP能部署多个域名 使用多个证书</p><p>SSL 引入了 SNI 来识别本次加密使用的证书</p><p>又为了加密 SNI 让 DNS 使用 DoH 加密通信 再提供一个公钥</p><p>保护本次 SSL 的 握手请求</p><p>最终 DNS 的 DoH 其实还是只能有一个证书</p><p>ESNI和ECH的普及 必定会导致 GFW 升级</p><p>一刀切把所有加密请求 和 黑名单网站的所有IP都拦截</p>]]></content>
    
    
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;</summary>
    
    
    
    <category term="NetWork" scheme="https://blog.lqs1848.top/categories/NetWork/"/>
    
    
    <category term="Nginx" scheme="https://blog.lqs1848.top/tags/Nginx/"/>
    
    <category term="HTTPS" scheme="https://blog.lqs1848.top/tags/HTTPS/"/>
    
    <category term="GFW" scheme="https://blog.lqs1848.top/tags/GFW/"/>
    
  </entry>
  
  <entry>
    <title>Dubbo ExceedPayloadLimitException</title>
    <link href="https://blog.lqs1848.top/2022/03/08/2022-03-08%20Dubbo%20Data%20length%20too%20large/"/>
    <id>https://blog.lqs1848.top/2022/03/08/2022-03-08%20Dubbo%20Data%20length%20too%20large/</id>
    <published>2022-03-07T16:00:00.000Z</published>
    <updated>2022-03-15T01:47:59.410Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h1 id="Data-length-too-large"><a href="#Data-length-too-large" class="headerlink" title="Data length too large"></a>Data length too large</h1><p>这个异常的详细堆栈信息如下所示：</p><blockquote><p>Caused by: org.apache.dubbo.remoting.transport.ExceedPayloadLimitException: Data length too large: 11557979, max payload: 11557050, channel: NettyChannel [channel=[id: 0x59059885, L:/172.30.0.3:50822 - R:/172.30.0.3:20880]]</p></blockquote><p>已经从8388608 改到 11557979 依旧报错</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ProviderConfig <span class="title">providerConfig</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ProviderConfig config = <span class="keyword">new</span> ProviderConfig();</span><br><span class="line">    config.setRetries(<span class="number">0</span>);</span><br><span class="line">    config.setTimeout(<span class="number">60000</span>);</span><br><span class="line">    config.setPayload(<span class="number">11557979</span>);</span><br><span class="line">    <span class="keyword">return</span> config;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>本来想从 11557979  直接改到 104857600 100兆</p><p>仔细想想不对</p><p>这里是 请求或者响应的报文体长度超过了8k </p><p>我请求的内容应该没有这么长</p><p>检查了下</p><p>原来是之前写的 SpringCloud 整合 Dubbo (<a href="/2021/04/23/2021-04-23%20%20SpringCloud%20%E6%95%B4%E5%90%88%20Dubbo/">Link</a>) <strong>#### 封装 dubbo 隐式传递</strong></p><p>中写了一个 日志收集</p><p>这个调用时 同步数据 同步了一个多小时 产生了超过8兆的日志</p><p>而我为了日志追踪 把日志放在 dubbo 的请求参数中 导致了长度超过dubbo的限制</p><p>还有个类似 <a href="https://github.com/apache/dubbo/issues/111">dubbo 抛不出自定义的异常</a> 的问题</p><p>这个我已经自己写了一个异常过滤器(SpringCloud 整合 Dubbo <strong># 异常传递</strong>) 但是偶尔还是有自定义异常 被认定为 Rpc 异常的问题</p><p>大概是我封装的依赖包 有时 几个微服务依赖的依赖包版本不相同 加密出来的jar包逻辑不同导致</p><p>有空再研究下</p>]]></content>
    
    
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;</summary>
    
    
    
    <category term="Java" scheme="https://blog.lqs1848.top/categories/Java/"/>
    
    <category term="Dubbo" scheme="https://blog.lqs1848.top/categories/Java/Dubbo/"/>
    
    
    <category term="SpringCloud" scheme="https://blog.lqs1848.top/tags/SpringCloud/"/>
    
    <category term="Dubbo" scheme="https://blog.lqs1848.top/tags/Dubbo/"/>
    
  </entry>
  
  <entry>
    <title>自定义排序</title>
    <link href="https://blog.lqs1848.top/2022/01/27/2022-01-27%20%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%92%E5%BA%8F/"/>
    <id>https://blog.lqs1848.top/2022/01/27/2022-01-27%20%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%92%E5%BA%8F/</id>
    <published>2022-01-26T16:00:00.000Z</published>
    <updated>2022-01-27T08:38:46.581Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>新增功能时发现 修改个 栏目 修改了2秒多 速度很慢</p><p>查找了下代码 原来是 自定义 栏目排序的 order</p><p>同事写的逻辑 </p><p>查出所有的 栏目 再一个个 Update 数量一多就会慢的要死</p><p>借鉴下网上其他人的思路</p><h1 id="偏代码角度描述方案-link"><a href="#偏代码角度描述方案-link" class="headerlink" title="偏代码角度描述方案(link)"></a>偏代码角度描述方案(<a href="https://www.jianshu.com/p/9ee708e43ebf">link</a>)</h1><h2 id="方法一-全量更新元素位置法"><a href="#方法一-全量更新元素位置法" class="headerlink" title="方法一 全量更新元素位置法"></a>方法一 全量更新元素位置法</h2><p>适用场景：排序元素数量较少</p><p>原理：每个元素拥有一个字段，表示元素当前排序的位置。通过前端排序，将排好的元素位置，一次性发送到后端。然后，后端统一更新所有元素的位置。</p><h3 id="具体实现"><a href="#具体实现" class="headerlink" title="具体实现"></a>具体实现</h3><p>实体设计：增加排序字段 <code>sort</code>，表示元素当前的位置。例如，<code>sort = 1</code>，则表示元素处于第一位。</p><p>接口设计：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 排序接口</span></span><br><span class="line">POST /courses/sorting</span><br><span class="line"></span><br><span class="line"><span class="comment">// 格式：JSON</span></span><br><span class="line"><span class="comment">// 数组中为元素的ID</span></span><br><span class="line"><span class="comment">// 元素在数组中的序号，表示了元素的位置</span></span><br><span class="line"><span class="comment">// 例如，ID为3的元素，排序为 1，ID为2的元素，排序为2</span></span><br><span class="line">[<span class="meta">3, 2, 4, 1</span>]</span><br></pre></td></tr></table></figure><p>前端逻辑：当前端排序后，或删除元素后，将剩余元素ID，以数组的形式发送给后端。数组的索引序号，则表示元素当前的排序。</p><p>后端实现逻辑：</p><ul><li>删除不存在前端数组中的ID。将前端 <code>ids</code>，与服务器端的 <code>ids</code> 进行对比。删除服务器端存在但前端不存在的 <code>ids</code>。</li><li>按照数组的排序，更新所有元素排序。</li></ul><p>总结，此方法仅适用于排序元素较少（例如，总元素为5~15个）的场景。对于大量数据排序并不适用，适合首页轮播图管理、任务卡片管理。<a href="https://links.jianshu.com/go?to=https://www.leangoo.com/">leangoo 的看板卡片管理就是采用这种方式。</a></p><h2 id="方法二-取中值法（推荐）"><a href="#方法二-取中值法（推荐）" class="headerlink" title="方法二 取中值法（推荐）"></a>方法二 取中值法（推荐）</h2><p>原理与实现步骤：</p><ol><li>创建元素时给元素赋默认位置（<code>pos</code>字段记录该值）。赋值规则为，当创建第一个元素时，默认位置赋值为65536，第二个元素为 <code>2 * 65536 = 13172</code>，增加第N个元素时，位置赋值为N*65536。</li><li>当拖拽改变元素位置时，更新 <code>pos</code>。更新规则如下：</li></ol><ul><li>调整一个元素到两个元素中间时，<code>(pre_item.pos + after_item.pos）/ 2 = pos</code></li><li>调整一个元素到第一个元素时， <code>old_first_item.pos / 2 = pos</code></li><li>调整一个元素到最后一个元素时， <code>old_last_item.post + 65536 = pos</code></li></ul><ol><li>当前后两个元素的数值，不满足整数时，更新所有元素的排序。依次给每个元素的 <code>pos</code>赋新值。例如，第一位赋值65536，第二位为<code>2 * 65536</code>，第N位赋值N*65536。</li></ol><p>通过取中值的方法，改变元素的位置。当需要按序获取时，只需要对 <code>pos</code>进行排序，就可以获取元素的位置。</p><p>关于中值重排的问题，解决方法有多种。例如，我们可以使用浮点数储存 <code>pos</code>，但是需要考虑数据库存储的精度问题。而且，数值过小，会在前端丢失精度，元素排序会出现问题。当然，如果在接口层，当检测到中值过小，则对所有元素进行重排，接口相应速度会存在问题（如果是后端管理系统就不用考虑性能问题了）。</p><p>有人提出，利用定时任务每天对所有元素定时重排，来解决单次接口的性能问题。个人觉得这个方法，还是存在问题。若定时任务不及时，那么排序由于精度问题，发生了排序错乱的问题。那么，定时重排已经无意义。</p><h2 id="方法三-单表单列"><a href="#方法三-单表单列" class="headerlink" title="方法三 单表单列"></a>方法三 单表单列</h2><p>每个元素，都有一个字段<code>index</code>，表示元素的排序信息。<br>规定元素从0开始递增。<br>基本操作如下：</p><ul><li>增加数据。 新增元素时，序号为当前元素数据总量值。</li><li>删除元素。删除元素时，将大于该元素的序号，都减1。</li><li>修改元素排序。当元素从 x 移动到 y 时，<ul><li>若 x &lt; y 时，则将(x, y)范围内的元素都减1</li><li>若 x &gt; y 时，则将(y, x)范围内的元素都加1</li></ul></li><li>查询元素。展示列表时，按照 <code>index</code> 字段进行排序即可。若需要查第n位元素时，元素位置为 <code>index = n - 1</code>。</li></ul><p>这种方式优点是，查询快，修改慢。而且，修改接口的逻辑较重，处理起来比较麻烦。我们很多项目都是采用这种模式。在接口设计方面，我们让前端传给后端是一个偏移值（<code>offset</code>），<code>offset = y - x。当元素向排序大的方向移动时，</code>offset<code>的为正值；若往排序小的方向移动时，</code>offset`为负值。</p><h1 id="偏数据库角度描述方案-link"><a href="#偏数据库角度描述方案-link" class="headerlink" title="偏数据库角度描述方案(link)"></a>偏数据库角度描述方案(<a href="https://www.cnblogs.com/kesimin/p/9441448.html">link</a>)</h1><h4 id="1-单表单列结构（数组结构）"><a href="#1-单表单列结构（数组结构）" class="headerlink" title="1. 单表单列结构（数组结构）"></a>1. 单表单列结构（数组结构）</h4><p>此设计是使用一个表中的一列来表示数据的序号，通常我们使用的方法就是这种。</p><p>数据表tb_data(n)：</p><table><thead><tr><th>data</th><th>index</th></tr></thead><tbody><tr><td>···</td><td>0</td></tr><tr><td>···</td><td>1</td></tr><tr><td>···</td><td>2</td></tr></tbody></table><p>这里规定序号从0开始递增。</p><p>其基本数据操作如下：</p><ul><li>增 → 当增加一个数据时，定义data的序号为数据总数量值。</li><li>删 → 当删除一个数据时，将大于该序号的数据的序号都减1。</li><li>改 → 当修改位置将数据a从x移动到y时，若x小于y，则将(x,y]范围内的数据序号都减1；若x大于y，则将[y,x)范围内的数据序号都加1（注：修改数据库时，要先将a的序号x修改为未被使用的序号z，然后再修改范围内的数据，最后再将z修改为y，顺序不能乱）。</li><li>查 → 当查找数据时添加 order by index 即可得到自定义排列的数据，查找第n个数据时查找条件为 index=n-1 即可。</li></ul><p>总结：此方法查找速度最快，修改速度最慢。</p><h4 id="2-单表双列结构（链表结构）"><a href="#2-单表双列结构（链表结构）" class="headerlink" title="2.单表双列结构（链表结构）"></a>2.单表双列结构（链表结构）</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">此设计是使用一个表中的两列来表示数据的序号，一列表示该数据的前置id，一列表示该数据的后置序id（id为数据表本身的自增序号），即相当于我们经常使用的双向链表。</span><br></pre></td></tr></table></figure><p>数据表tb_data(n)：</p><table><thead><tr><th>id</th><th>data</th><th>pre_no</th><th>next_no</th></tr></thead><tbody><tr><td>0</td><td>···</td><td>-1</td><td>1</td></tr><tr><td>1</td><td>···</td><td>0</td><td>2</td></tr><tr><td>2</td><td>···</td><td>1</td><td>3</td></tr><tr><td>3</td><td>···</td><td>2</td><td>-1</td></tr></tbody></table><p>这里规定第一个数据的pre_no为-1，最后一个数据的next_no为-1。</p><p>其基本数据操作如下：</p><ul><li>增 → 当增加一个数据a时，先查找出最后一个数据b的id号，a的pre_no定义为b的id号（若此数据为第一个则定义为-1），next_no定义为-1，再将b的next_no定义为a的id号。</li><li>删 → 当删除一个数据a时，取出a的pre_no和next_no，将pre_no对应的id的数据的next_no修改为a的next_no，将next_no对应的id的数据的pre_no修改为a的pre_no。</li><li>改 → 令位置x-1、x+1数据分别为b、c，位置y-1、y、y+1的数据分别为d、e、f，现修改位置将数据a从x移动到y时，<br>当x小于y时，修改b的next_no为c的id，修改c的pre_no为b的id，修改e的next_no为a的id，修改f的pre_no为a的id，最后修改a的pre_no为e的id，next_no为f的id；<br>当x大于y时，修改b的next_no为c的id，修改c的pre_no为b的id，修改d的next_no为a的id，修改e的pre_no为a的id，最后修改a的pre_no为d的id，next_no为e的id。</li><li>查 → 当查找第n个数据时，需要先查找出第一个数据，在根据第一个数据逐个往后查找数据的next_no，查找n次后得到第n个数据。</li></ul><p>总结：此方法查找速度最慢，修改速度最快。</p><h4 id="3-双表双列结构（分页结构）"><a href="#3-双表双列结构（分页结构）" class="headerlink" title="3.双表双列结构（分页结构）"></a>3.双表双列结构（分页结构）</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">此设计是使用一个页码表记录全部页码和页码的序号范围，另一个数据表来记录基本数据、自身序号和页码，通过在一个表中给数据设置不同的序号和页码来达到分页排序的效果。</span><br></pre></td></tr></table></figure><p>页码表tb_page：</p><table><thead><tr><th>tb_name</th><th>page</th><th>start_index</th><th>end_index</th></tr></thead><tbody><tr><td>tb_data0</td><td>0</td><td>1</td><td>1000</td></tr><tr><td>tb_data0</td><td>1</td><td>1</td><td>1000</td></tr><tr><td>tb_data0</td><td>2</td><td>1</td><td>120</td></tr><tr><td>tb_data1</td><td>0</td><td>1</td><td>1000</td></tr><tr><td>tb_data1</td><td>1</td><td>1</td><td>130</td></tr></tbody></table><p>table_name为一个基本数据表的表名，对于每一个table_name，其对应的page都从0开始递增且不能重复，每个page有一定的数据范围（这里设定为一页有1000条数据），则每个数据表对应的数据总量即可计算出来。</p><p>基本数据表tb_data(n)：</p><table><thead><tr><th>data</th><th>page</th><th>index</th></tr></thead><tbody><tr><td>···</td><td>0</td><td>1</td></tr><tr><td>···</td><td>0</td><td>···</td></tr><tr><td>···</td><td>0</td><td>1000</td></tr><tr><td>···</td><td>1</td><td>1</td></tr><tr><td>···</td><td>1</td><td>···</td></tr><tr><td>···</td><td>1</td><td>1000</td></tr><tr><td>···</td><td>2</td><td>1</td></tr><tr><td>···</td><td>2</td><td>···</td></tr><tr><td>···</td><td>2</td><td>120</td></tr></tbody></table><p>data为数据域，记录基本数据，对于每一个不相同的data都有对应的page和index，通过page、index和每一页的数据范围即可计算出对应的全局序号。</p><p>其基本数据操作如下：</p><ul><li>增 → 当增加一个数据时，先从页码表中查找出最后的page及其对应的start_index和end_index，若end_index-start_index+1没有数据超出范围，则插入数据的page不变，index为end_index+1，若超出范围，则需在页码表中新建一页，插入数据的page自加一，index赋值初始值。</li><li>删 → 当删除一个数据时，因为需要保证除末页以外的页码的数据范围都为规定值，所以需要对删除数据对应的页码及以上页码的数据进行调整，对于删除数据的页码，可以通过对比该数据在页码中的相对位置来调整较小数据量的一方数据执行加减1，对于大于其的页码，可以将每一页的首数据调整为上一页的末数据（末页数量为0即可将末页删除）。</li><li>改 → 当修改位置将数据a从x移动到y，计算x、y对应的页码，当x、y的页码相同时，只需调整该页数据，可通过对比x到y的数量和页码数量来决定调整x、y范围内还是范围外的数据信息；当x、y页码不同时，可通过对x、y在页码中的相对位置来调整较小数据量的一方数据执行加减1，若x小于y，(x,y]范围内的页的首数据调整为上一页的末数据，若x大于y，[y,x)范围内的页的末数据调整为下一页的首数据。</li><li>查 → 当查找数据总量时，可以通过查找页码表计算得出；当查找序号为n的数据时，可以通过页码表计算得到对应的page和index，然后再通过查找数据表取得数据（由于页码表的数据会经常使用，所以最好从数据库取出一次后保存在内存中再进行使用即可提高速度）。</li></ul><p>总结：此方法查找速度和修改速度比较均衡，适合大多数情况使用。</p><h1 id="其他方案"><a href="#其他方案" class="headerlink" title="其他方案"></a>其他方案</h1><p>手动控制加数值or减数值 +1/-1   +10/-10</p><p>按照数值大小排序</p><p>和指定 数值 差不多的逻辑</p>]]></content>
    
    
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;</summary>
    
    
    
    <category term="编程" scheme="https://blog.lqs1848.top/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="排序" scheme="https://blog.lqs1848.top/tags/%E6%8E%92%E5%BA%8F/"/>
    
    <category term="转载" scheme="https://blog.lqs1848.top/tags/%E8%BD%AC%E8%BD%BD/"/>
    
  </entry>
  
  <entry>
    <title>Spring参数绑定 适应多种提交方式(二)</title>
    <link href="https://blog.lqs1848.top/2022/01/24/2022-01-24%20Spring%E5%8F%82%E6%95%B0%E7%BB%91%E5%AE%9A(%E4%BA%8C)/"/>
    <id>https://blog.lqs1848.top/2022/01/24/2022-01-24%20Spring%E5%8F%82%E6%95%B0%E7%BB%91%E5%AE%9A(%E4%BA%8C)/</id>
    <published>2022-01-23T16:00:00.000Z</published>
    <updated>2022-01-24T10:43:45.721Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>一点点补充之前没有考虑到的细节</p><h1 id="Validation"><a href="#Validation" class="headerlink" title="Validation"></a>Validation</h1><p>自定义参数注入 会导致 Validation 失效</p><p>获得到对象后 手动调用 validate(obj);</p><p>如下 validate方法</p><h1 id="List"><a href="#List" class="headerlink" title="List"></a>List</h1><p>上次写的逻辑 对简单参数做了处理</p><p>但是 如果前端传递的是List就无法处理了</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">请求参数 JSON</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">    &quot;resultCode&quot;:&quot;b&quot;,</span></span><br><span class="line"><span class="comment">    &quot;orders&quot;: [</span></span><br><span class="line"><span class="comment">        &#123;</span></span><br><span class="line"><span class="comment">            &quot;sequence&quot;: &quot;4&quot;,</span></span><br><span class="line"><span class="comment">            &quot;superviseBankXh&quot;: &quot;10000222&quot;</span></span><br><span class="line"><span class="comment">        &#125;,</span></span><br><span class="line"><span class="comment">        &#123;</span></span><br><span class="line"><span class="comment">            &quot;sequence&quot;: &quot;3&quot;,</span></span><br><span class="line"><span class="comment">            &quot;superviseBankXh&quot;: &quot;10000223&quot;</span></span><br><span class="line"><span class="comment">        &#125;,</span></span><br><span class="line"><span class="comment">        &#123;</span></span><br><span class="line"><span class="comment">            &quot;sequence&quot;: &quot;2&quot;,</span></span><br><span class="line"><span class="comment">            &quot;superviseBankXh&quot;: &quot;10000224&quot;</span></span><br><span class="line"><span class="comment">        &#125;,</span></span><br><span class="line"><span class="comment">        &#123;</span></span><br><span class="line"><span class="comment">            &quot;sequence&quot;: &quot;1&quot;,</span></span><br><span class="line"><span class="comment">            &quot;superviseBankXh&quot;: &quot;10000225&quot;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">    ]</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"> <span class="meta">@PostMapping(&quot;/jgzhyxjsz&quot;)</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> R <span class="title">jgzhyxjsz</span><span class="params">(List&lt;JgzhyxjszDTO&gt; orders)</span></span>&#123;</span><br><span class="line"> <span class="keyword">return</span> R.data(merchantMngmtService.jgzhyxjsz(orders));</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>后台如果不想用 @RequestBody 并且封装一个对象去接收的话</p><p>而是这样直接就能获取到 那就必须实现一个 List 的自定义参数转换器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HandlerArrayResolver</span> <span class="keyword">implements</span> <span class="title">HandlerMethodArgumentResolver</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"> <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> Validator validator;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">supportsParameter</span><span class="params">(MethodParameter parameter)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> Collection.class.isAssignableFrom(parameter.getParameterType());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">resolveArgument</span><span class="params">(MethodParameter parameter, ModelAndViewContainer container,</span></span></span><br><span class="line"><span class="function"><span class="params">NativeWebRequest nativeWebRequest, WebDataBinderFactory factory)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">ContentCachingRequestWrapper request = nativeWebRequest.getNativeRequest(ContentCachingRequestWrapper.class);</span><br><span class="line">Object result = <span class="keyword">null</span>;</span><br><span class="line">        <span class="comment">//获取 List&lt;?&gt; 的泛型信息</span></span><br><span class="line">ParameterizedType genericSuperclass = (ParameterizedType) parameter.getMethod().getGenericParameterTypes()[parameter.getParameterIndex()];</span><br><span class="line">Type type = genericSuperclass.getActualTypeArguments()[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">String contentType = request.getHeader(HttpHeaders.CONTENT_TYPE);</span><br><span class="line"><span class="keyword">if</span>(request.getBodySize() &gt; <span class="number">0</span> &amp;&amp; (request.isRewiteBody() || contentType == <span class="keyword">null</span> || contentType.startsWith(MediaType.APPLICATION_JSON_VALUE))) &#123;</span><br><span class="line">String queryBody = request.getQueryBody();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(queryBody.strip().startsWith(<span class="string">&quot;[&quot;</span>)) &#123;</span><br><span class="line">result = JSONObject.parseArray(queryBody,Class.forName(type.getTypeName()));</span><br><span class="line">&#125;<span class="comment">//支持多个对象嵌套</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(queryBody.indexOf(<span class="string">&quot;\&quot;&quot;</span> + parameter.getParameterName() + <span class="string">&quot;\&quot;&quot;</span>) != -<span class="number">1</span>) &#123;</span><br><span class="line">String tempStr = JSONObject.parseObject(queryBody).getString(parameter.getParameterName());</span><br><span class="line">result = JSONObject.parseArray(tempStr,Class.forName(type.getTypeName()));</span><br><span class="line">&#125; </span><br><span class="line">&#125;<span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">log.error(<span class="string">&quot;参数注入增强-JSON转换失败&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="comment">//if</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> validate(parameter,result);</span><br><span class="line">&#125;<span class="comment">//method</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> Object <span class="title">validate</span><span class="params">(MethodParameter parameter,Object obj)</span> </span>&#123;</span><br><span class="line"><span class="comment">//无需校验</span></span><br><span class="line"><span class="keyword">if</span>(parameter.getParameterAnnotation(Validated.class) == <span class="keyword">null</span> &amp;&amp; parameter.getParameterAnnotation(Valid.class) == <span class="keyword">null</span>) <span class="keyword">return</span> obj;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(obj == <span class="keyword">null</span>) <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">&quot;参数不能为null&quot;</span>, <span class="number">500</span>);</span><br><span class="line"></span><br><span class="line">Set&lt;ConstraintViolation&lt;Object&gt;&gt; validateResult = validator.validate(obj);</span><br><span class="line">        <span class="keyword">if</span>(validateResult.size() &gt; <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> MysdException(validateResult.iterator().next().getPropertyPath() +<span class="string">&quot;:&quot;</span>+ validateResult.iterator().next().getMessage(), <span class="number">500</span>);</span><br><span class="line">        <span class="keyword">return</span> obj;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="comment">//class</span></span><br></pre></td></tr></table></figure><h1 id="参数没有放在QueryBody-中"><a href="#参数没有放在QueryBody-中" class="headerlink" title="参数没有放在QueryBody 中"></a>参数没有放在QueryBody 中</h1><p>之前考虑的都是 参数放到QueryBody 如果对方把请求参数写在 QueryParam中</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Order(Ordered.HIGHEST_PRECEDENCE + 1)</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TraceFilter</span> <span class="keyword">extends</span> <span class="title">ActionFilter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">filter</span><span class="params">(HttpServletRequest request, HttpServletResponse response, FilterChain chain)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">Long startTime = System.nanoTime();</span><br><span class="line"></span><br><span class="line">String contentType = request.getContentType();</span><br><span class="line">log.info(<span class="string">&quot;QueryStart_Url(&quot;</span> + request.getRequestURI() + <span class="string">&quot;)_Method(&quot;</span>+request.getMethod()+<span class="string">&quot;)_Type(&quot;</span>+getContentType(contentType)+<span class="string">&quot;)_Ip(&quot;</span>+getIpAddress(request)+<span class="string">&quot;)&quot;</span>+getDevInfo(request.getHeader(HttpHeaders.USER_AGENT)));</span><br><span class="line">ContentCachingRequestWrapper requestWrapper = <span class="keyword">new</span> ContentCachingRequestWrapper(request);</span><br><span class="line">log.info(<span class="string">&quot;QueryString:&quot;</span> + requestWrapper.getQueryString());</span><br><span class="line">log.info(<span class="string">&quot;QueryParameter:&quot;</span> + (requestWrapper.getParameterMap().size() !=<span class="number">0</span> ? JSON.toJSONString(requestWrapper.getParameterMap()):<span class="string">&quot;&quot;</span>));</span><br><span class="line"><span class="keyword">if</span> (requestWrapper.hasFile() &amp;&amp; requestWrapper.getBodySize() != <span class="number">0</span>) &#123;</span><br><span class="line">log.info(<span class="string">&quot;QueryBody: 内容是个文件&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">String queryBody = requestWrapper.getQueryBody();</span><br><span class="line">String fmqb = queryBody.replaceAll(<span class="string">&quot;\\s+&quot;</span>, <span class="string">&quot; &quot;</span>);</span><br><span class="line">log.info(<span class="string">&quot;QueryBody:&quot;</span> + fmqb);</span><br><span class="line"></span><br><span class="line"><span class="comment">//支持 前端用 get 但是数据传递在body中</span></span><br><span class="line"><span class="keyword">if</span>(HttpMethod.GET.matches(request.getMethod()) &amp;&amp; requestWrapper.getBodySize() != <span class="number">0</span>) &#123;</span><br><span class="line">queryBody = URLDecoder.decode(queryBody, <span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(queryBody != <span class="keyword">null</span> &amp;&amp; queryBody.length() &gt; <span class="number">3</span> &amp;&amp; queryBody.length() &lt; <span class="number">999</span>) &#123;</span><br><span class="line"><span class="comment">//支持 前端用 JSON 时 后端用 @RequestParam 接收参数</span></span><br><span class="line"><span class="keyword">if</span>((contentType == <span class="keyword">null</span> || contentType.startsWith(MediaType.APPLICATION_JSON_VALUE)) </span><br><span class="line"><span class="comment">//JSON 必须 没有数组</span></span><br><span class="line">&amp;&amp; fmqb.indexOf(<span class="string">&quot;[&quot;</span>) == -<span class="number">1</span> ) &#123;</span><br><span class="line"><span class="comment">//对简单的 RquestBody JSON 数据  放入 RequestParam 封装</span></span><br><span class="line">JSONObject json = JSONObject.parseObject(queryBody);</span><br><span class="line"><span class="keyword">for</span>(String key : json.keySet()) &#123;</span><br><span class="line">String value = json.getString(key);</span><br><span class="line"><span class="keyword">if</span>(StringUtils.isNotEmpty(value) &amp;&amp; !value.startsWith(<span class="string">&quot;&#123;&quot;</span>) &amp;&amp; !value.startsWith(<span class="string">&quot;[&quot;</span>))</span><br><span class="line">requestWrapper.put(key, value);</span><br><span class="line">&#125;<span class="comment">//for</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//支持 前端用 x-www 后端用 参数 或者 JavaBean 接收</span></span><br><span class="line"><span class="keyword">if</span>(contentType == <span class="keyword">null</span> || contentType.startsWith(MediaType.APPLICATION_FORM_URLENCODED_VALUE)) &#123;</span><br><span class="line">String[] params = queryBody.split(<span class="string">&quot;&amp;&quot;</span>);</span><br><span class="line"><span class="keyword">for</span>(String param : params) &#123;</span><br><span class="line">String[] par = param.split(<span class="string">&quot;=&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(par.length != <span class="number">2</span>) <span class="keyword">break</span>;</span><br><span class="line">requestWrapper.put(par[<span class="number">0</span>], par[<span class="number">1</span>]);</span><br><span class="line">&#125;<span class="comment">//for</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="comment">//if</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//支持 前端用 x-www 或 form-data 时 后端用 JavaBean 接收</span></span><br><span class="line"><span class="comment">//或者 body 没有数据时 param有数据 把 param内容放到 body 中</span></span><br><span class="line"><span class="keyword">if</span>((requestWrapper.getBodySize() == <span class="number">0</span> || HttpMethod.GET.matches(request.getMethod())) &amp;&amp; </span><br><span class="line">(contentType == <span class="keyword">null</span> || </span><br><span class="line">contentType.startsWith(MediaType.APPLICATION_FORM_URLENCODED_VALUE) </span><br><span class="line">|| contentType.startsWith(MediaType.MULTIPART_FORM_DATA_VALUE) </span><br><span class="line">|| contentType.startsWith(MediaType.APPLICATION_JSON_VALUE))) &#123;</span><br><span class="line">Map&lt;String,String&gt; map = requestWrapper.getParameterMapEx();</span><br><span class="line"><span class="keyword">if</span>(!map.isEmpty()) &#123;</span><br><span class="line">String mapJson = JSON.toJSONString(map)</span><br><span class="line">.replaceAll(<span class="string">&quot;\&quot;\\&#123;&quot;</span>,<span class="string">&quot;&#123;&quot;</span>)</span><br><span class="line">.replaceAll(<span class="string">&quot;\\&#125;\&quot;&quot;</span>, <span class="string">&quot;&#125;&quot;</span>)</span><br><span class="line">.replaceAll(<span class="string">&quot;\&quot;\\[&quot;</span>,<span class="string">&quot;[&quot;</span>)</span><br><span class="line">.replaceAll(<span class="string">&quot;\\]\&quot;&quot;</span>, <span class="string">&quot;]&quot;</span>)</span><br><span class="line">.replaceAll(<span class="string">&quot;\\\\\&quot;&quot;</span>, <span class="string">&quot;\&quot;&quot;</span>);</span><br><span class="line">requestWrapper.rewriteBody(mapJson);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="comment">//else</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//劫持返回信息</span></span><br><span class="line"><span class="keyword">boolean</span> isMeHook = <span class="keyword">false</span>;</span><br><span class="line">ResponseWrapper proxyResponse;</span><br><span class="line"><span class="keyword">if</span> (response <span class="keyword">instanceof</span> ResponseWrapper)</span><br><span class="line">proxyResponse = (ResponseWrapper) response;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">proxyResponse = <span class="keyword">new</span> ResponseWrapper(response);</span><br><span class="line">isMeHook = <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">chain.doFilter(requestWrapper, proxyResponse);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(response != <span class="keyword">null</span> &amp;&amp; (response.getContentType() == <span class="keyword">null</span> || response.getContentType().startsWith(MediaType.APPLICATION_JSON_VALUE)))</span><br><span class="line">log.info(<span class="string">&quot;ResponseBody Secret(&#123;&#125;) Detail(&#123;&#125;)&quot;</span>, response <span class="keyword">instanceof</span> CryptoHttpServletResponse, <span class="keyword">new</span> String(proxyResponse.getContent()));</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">log.info(<span class="string">&quot;ResponseBody Detail(&#123;&#125;)&quot;</span>, <span class="string">&quot;内容未知 type:&quot;</span> + response.getContentType());</span><br><span class="line"></span><br><span class="line">Long elapsedTime = DateUtil.nanosToMillis(DateUtil.spendNt(startTime));</span><br><span class="line">log.info(<span class="string">&quot;QueryEnd-Url:&quot;</span> + request.getRequestURI() + <span class="string">&quot; elapsedTime(&quot;</span> + elapsedTime + <span class="string">&quot;)&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(isMeHook)</span><br><span class="line">proxyResponse.finish();</span><br><span class="line">&#125;<span class="comment">// method</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getContentType</span><span class="params">(String contentType)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(StringUtils.isEmpty(contentType))</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;NONE&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(contentType.indexOf(<span class="string">&quot;;&quot;</span>) != -<span class="number">1</span>) </span><br><span class="line">contentType = contentType.split(<span class="string">&quot;;&quot;</span>)[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">if</span>(contentType.indexOf(<span class="string">&quot;/&quot;</span>) != -<span class="number">1</span>)</span><br><span class="line">contentType = contentType.split(<span class="string">&quot;/&quot;</span>)[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">return</span> contentType;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getDevInfo</span><span class="params">(String agent)</span> </span>&#123;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getIpAddress</span><span class="params">(HttpServletRequest request)</span> </span>&#123;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="comment">// class</span></span><br></pre></td></tr></table></figure><p>手动把 queryString的参数放到 requestBody 中去</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>很多人会搞不明白 content-type 的区别</p><p>明明说了 用 JSON 请求 参数却放在 param 中</p><p>或者需要放在 param 中的参数 放到 body 中 或者参数放到 url 中</p><p>如果后端不区分这些 不论 param url body 全部都处理 都可以自由接收</p><p>那将极大的降低对接口的工作量</p><p>只是有太多情况需要考虑 一点点完善吧~</p>]]></content>
    
    
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;</summary>
    
    
    
    <category term="Java" scheme="https://blog.lqs1848.top/categories/Java/"/>
    
    <category term="Spring" scheme="https://blog.lqs1848.top/categories/Java/Spring/"/>
    
    
    <category term="Java" scheme="https://blog.lqs1848.top/tags/Java/"/>
    
    <category term="Spring" scheme="https://blog.lqs1848.top/tags/Spring/"/>
    
    <category term="RequestBody" scheme="https://blog.lqs1848.top/tags/RequestBody/"/>
    
    <category term="RequestParam" scheme="https://blog.lqs1848.top/tags/RequestParam/"/>
    
  </entry>
  
  <entry>
    <title>Seata NullPointerException</title>
    <link href="https://blog.lqs1848.top/2021/12/16/2021-12-16%20%20Seata%20NullPointerException/"/>
    <id>https://blog.lqs1848.top/2021/12/16/2021-12-16%20%20Seata%20NullPointerException/</id>
    <published>2021-12-15T16:00:00.000Z</published>
    <updated>2021-12-30T03:30:30.193Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h1 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br></pre></td><td class="code"><pre><span class="line">17:29:59.697 [Gateway.89c2f32d] [DubboServerHandler-172.17.0.1:20881-thread-199] INFO </span><br><span class="line">com.mysd.common.dubbo.filter.DubboProviderFilter -</span><br><span class="line">DubboProvider Start(insertByPurOrder)</span><br><span class="line">17:29:59.704 [Gateway.89c2f32d] [DubboServerHandler-172.17.0.1:20881-thread-199] INFO </span><br><span class="line">com.mysd.common.MysdApplication -</span><br><span class="line">QueryCount(1) SqlTime(1) SqlStr(SELECT a.scaling_factor , a.purchase_price , b.material_name, b.material_specification, a.barcode , a.auxiliary_unit, b.is_need_sncode FROM pub_material_detail_71 a left join pub_material_71 b on a.material_id &#x3D; b.material_id WHERE a.md_id &#x3D; &#x2F;*mdId*&#x2F;34 AND a.material_id &#x3D; &#x2F;*materialId*&#x2F;23 AND a.group_id &#x3D; &#x2F;*groupId*&#x2F;71 AND a.platform_id &#x3D;&#x2F;*platformId*&#x2F;71)</span><br><span class="line">17:29:59.712 [Gateway.89c2f32d] [DubboServerHandler-172.17.0.1:20881-thread-199] INFO </span><br><span class="line">com.mysd.common.MysdApplication -</span><br><span class="line">SqlResult(1) SqlTime(6) SqlStr(INSERT INTO rep_order_material_71 ( order_num, material_id, md_id, material_warehouse, auxiliary_quantity, scattered_quantity, material_quantity, unit_price, discount_price, total_amount, gift_flag, order_type, platform_id, group_id, create_by, material_name, material_specification, auxiliary_unit, create_time ) VALUES ( &#x2F;*orderNum*&#x2F;&#39;37&#39;, &#x2F;*materialId*&#x2F;23, &#x2F;*mdId*&#x2F;34, &#x2F;*materialWarehouse*&#x2F;1, &#x2F;*auxiliaryQuantity*&#x2F;200, &#x2F;*scatteredQuantity*&#x2F;0, &#x2F;*materialQuantity*&#x2F;1200, &#x2F;*unitPrice*&#x2F;1000, &#x2F;*discountPrice*&#x2F;1000, &#x2F;*totalAmount*&#x2F;200000.00, &#x2F;*giftFlag*&#x2F;&#39;0&#39;, &#x2F;*orderType*&#x2F;&#39;201&#39;, &#x2F;*platformId*&#x2F;71, &#x2F;*groupId*&#x2F;71, &#x2F;*createBy*&#x2F;&#39;admin&#39;, &#x2F;*materialName*&#x2F;&#39;魔鬼梅洛红葡萄酒&#39;, &#x2F;*materialSpecification*&#x2F;&#39;500ml&#39;, &#x2F;*auxiliaryUnit*&#x2F;&#39;件&#39;, sysdate() ))</span><br><span class="line">17:29:59.714 [Gateway.89c2f32d] [DubboServerHandler-172.17.0.1:20881-thread-199] ERROR</span><br><span class="line">com.mysd.common.dubbo.filter.DubboExceptionFilter -</span><br><span class="line">Dubbo 出现错误!</span><br><span class="line">org.springframework.jdbc.UncategorizedSQLException: </span><br><span class="line">### Error updating database.  Cause: java.sql.SQLException: java.lang.NullPointerException</span><br><span class="line">### The error may involve com.mysd.stock.storage.mapper.RepOrderMaterialMapper.insertOrderMaterial-Inline</span><br><span class="line">### The error occurred while setting parameters</span><br><span class="line">### SQL: INSERT INTO rep_order_material_71 ( order_num, material_id, md_id, material_warehouse, auxiliary_quantity, scattered_quantity, material_quantity, unit_price, discount_price, total_amount, gift_flag, order_type, platform_id, group_id, create_by, material_name, material_specification, auxiliary_unit, create_time ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, sysdate() )</span><br><span class="line">### Cause: java.sql.SQLException: java.lang.NullPointerException</span><br><span class="line">; uncategorized SQLException; SQL state [null]; error code [0]; java.lang.NullPointerException; nested exception is java.sql.SQLException: java.lang.NullPointerException</span><br><span class="line">at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)</span><br><span class="line">at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)</span><br><span class="line">at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)</span><br><span class="line">at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)</span><br><span class="line">at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)</span><br><span class="line">at com.sun.proxy.$Proxy171.insert(Unknown Source)</span><br><span class="line">at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)</span><br><span class="line">at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)</span><br><span class="line">at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)</span><br><span class="line">at com.sun.proxy.$Proxy184.insertOrderMaterial(Unknown Source)</span><br><span class="line">at com.mysd.stock.storage.service.RepOrderMaterialServiceImpl.insertOrderMaterialList(RepOrderMaterialServiceImpl.java:1947)</span><br><span class="line">at com.mysd.stock.storage.service.RepOrderMaterialServiceImpl.insertByPurOrder(RepOrderMaterialServiceImpl.java:951)</span><br><span class="line">at com.mysd.stock.storage.service.RepOrderMaterialServiceImpl$$FastClassBySpringCGLIB$$66cf9a15.invoke(&lt;generated&gt;)</span><br><span class="line">at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)</span><br><span class="line">at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)</span><br><span class="line">at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)</span><br><span class="line">at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)</span><br><span class="line">at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)</span><br><span class="line">at com.mysd.stock.storage.aspect.ToeknAspect.around(ToeknAspect.java:39)</span><br><span class="line">at jdk.internal.reflect.GeneratedMethodAccessor404.invoke(Unknown Source)</span><br><span class="line">at java.base&#x2F;jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)</span><br><span class="line">at java.base&#x2F;java.lang.reflect.Method.invoke(Method.java:564)</span><br><span class="line">at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)</span><br><span class="line">at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)</span><br><span class="line">at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)</span><br><span class="line">at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)</span><br><span class="line">at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)</span><br><span class="line">at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)</span><br><span class="line">at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)</span><br><span class="line">at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)</span><br><span class="line">at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)</span><br><span class="line">at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)</span><br><span class="line">at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)</span><br><span class="line">at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)</span><br><span class="line">at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)</span><br><span class="line">at com.mysd.stock.storage.service.RepOrderMaterialServiceImpl$$EnhancerBySpringCGLIB$$c50246e6.insertByPurOrder(&lt;generated&gt;)</span><br><span class="line">at org.apache.dubbo.common.bytecode.Wrapper13.invokeMethod(Wrapper13.java)</span><br><span class="line">at org.apache.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:47)</span><br><span class="line">at org.apache.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:84)</span><br><span class="line">at org.apache.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:56)</span><br><span class="line">at org.apache.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:56)</span><br><span class="line">at com.alibaba.dubbo.rpc.Invoker$CompatibleInvoker.invoke(Invoker.java:55)</span><br><span class="line">at io.seata.integration.dubbo.alibaba.AlibabaDubboTransactionPropagationFilter.invoke(AlibabaDubboTransactionPropagationFilter.java:45)</span><br><span class="line">at com.alibaba.dubbo.rpc.Filter.invoke(Filter.java:29)</span><br><span class="line">at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:83)</span><br><span class="line">at io.seata.integration.dubbo.ApacheDubboTransactionPropagationFilter.invoke(ApacheDubboTransactionPropagationFilter.java:69)</span><br><span class="line">at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:83)</span><br><span class="line">at com.mysd.common.dubbo.filter.DubboExceptionFilter.invoke(e:44)</span><br><span class="line">at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:83)</span><br><span class="line">at org.apache.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:89)</span><br><span class="line">at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:83)</span><br><span class="line">at org.apache.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:46)</span><br><span class="line">at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:83)</span><br><span class="line">at org.apache.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)</span><br><span class="line">at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:83)</span><br><span class="line">at com.mysd.common.dubbo.filter.DubboProviderFilter.invoke(g:145)</span><br><span class="line">at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:83)</span><br><span class="line">at org.apache.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:129)</span><br><span class="line">at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:83)</span><br><span class="line">at org.apache.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:152)</span><br><span class="line">at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:83)</span><br><span class="line">at org.apache.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)</span><br><span class="line">at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:83)</span><br><span class="line">at org.apache.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:41)</span><br><span class="line">at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:83)</span><br><span class="line">at org.apache.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:145)</span><br><span class="line">at org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:100)</span><br><span class="line">at org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:175)</span><br><span class="line">at org.apache.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:51)</span><br><span class="line">at org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:57)</span><br><span class="line">at java.base&#x2F;java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)</span><br><span class="line">at java.base&#x2F;java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)</span><br><span class="line">at java.base&#x2F;java.lang.Thread.run(Thread.java:832)</span><br><span class="line">Caused by: java.sql.SQLException: java.lang.NullPointerException</span><br><span class="line">at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:115)</span><br><span class="line">at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:50)</span><br><span class="line">at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)</span><br><span class="line">at io.seata.rm.datasource.PreparedStatementProxy.lambda$execute$0(PreparedStatementProxy.java:55)</span><br><span class="line">at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitFalse(AbstractDMLBaseExecutor.java:100)</span><br><span class="line">at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:84)</span><br><span class="line">at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:113)</span><br><span class="line">at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:111)</span><br><span class="line">at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:50)</span><br><span class="line">at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)</span><br><span class="line">at jdk.internal.reflect.GeneratedMethodAccessor391.invoke(Unknown Source)</span><br><span class="line">at java.base&#x2F;jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)</span><br><span class="line">at java.base&#x2F;java.lang.reflect.Method.invoke(Method.java:564)</span><br><span class="line">at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)</span><br><span class="line">at com.sun.proxy.$Proxy243.execute(Unknown Source)</span><br><span class="line">at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)</span><br><span class="line">at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)</span><br><span class="line">at jdk.internal.reflect.GeneratedMethodAccessor567.invoke(Unknown Source)</span><br><span class="line">at java.base&#x2F;jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)</span><br><span class="line">at java.base&#x2F;java.lang.reflect.Method.invoke(Method.java:564)</span><br><span class="line">at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)</span><br><span class="line">at com.sun.proxy.$Proxy241.update(Unknown Source)</span><br><span class="line">at jdk.internal.reflect.GeneratedMethodAccessor567.invoke(Unknown Source)</span><br><span class="line">at java.base&#x2F;jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)</span><br><span class="line">at java.base&#x2F;java.lang.reflect.Method.invoke(Method.java:564)</span><br><span class="line">at org.apache.ibatis.plugin.Invocation.proceed(Invocation.java:49)</span><br><span class="line">at com.mysd.common.mybatis.SqlPrintInterceptor.intercept(ea:50)</span><br><span class="line">at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)</span><br><span class="line">at com.sun.proxy.$Proxy241.update(Unknown Source)</span><br><span class="line">at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)</span><br><span class="line">at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)</span><br><span class="line">at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)</span><br><span class="line">at jdk.internal.reflect.GeneratedMethodAccessor639.invoke(Unknown Source)</span><br><span class="line">at java.base&#x2F;jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)</span><br><span class="line">at java.base&#x2F;java.lang.reflect.Method.invoke(Method.java:564)</span><br><span class="line">at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)</span><br><span class="line">at com.sun.proxy.$Proxy240.update(Unknown Source)</span><br><span class="line">at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)</span><br><span class="line">at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)</span><br><span class="line">at jdk.internal.reflect.GeneratedMethodAccessor650.invoke(Unknown Source)</span><br><span class="line">at java.base&#x2F;jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)</span><br><span class="line">at java.base&#x2F;java.lang.reflect.Method.invoke(Method.java:564)</span><br><span class="line">at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)</span><br><span class="line">... 68 common frames omitted</span><br><span class="line">Caused by: java.lang.NullPointerException: null</span><br><span class="line">at io.seata.rm.datasource.sql.struct.TableRecords.buildRecords(TableRecords.java:195)</span><br><span class="line">at io.seata.rm.datasource.exec.BaseTransactionalExecutor.buildTableRecords(BaseTransactionalExecutor.java:402)</span><br><span class="line">at io.seata.rm.datasource.exec.BaseInsertExecutor.afterImage(BaseInsertExecutor.java:77)</span><br><span class="line">at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitFalse(AbstractDMLBaseExecutor.java:101)</span><br><span class="line">at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:84)</span><br><span class="line">at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:113)</span><br><span class="line">at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:111)</span><br><span class="line">... 110 common frames omitted</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>好多次都碰到</p><p>明明 insert 成功 返回插入成功1行</p><p>但是 Seata 报错 回滚</p><p>还是 NullPointerException</p><p>还不能复现出来</p><h1 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">String colName = resultSetMetaData.getColumnName(i);</span><br><span class="line">ColumnMeta col = tmeta.getColumnMeta(colName);</span><br><span class="line"><span class="keyword">int</span> dataType = col.getDataType();</span><br></pre></td></tr></table></figure><p>数据库在使用过程中修改过表结构 添加或删除了字段 </p><p>Seata 的 tableMeta 没有更新 到 seata的更新时间后就没问题了</p><p>坑… 特别是 这些都是同事修改的数据库字段 自己没动</p><h1 id="再次出现"><a href="#再次出现" class="headerlink" title="再次出现"></a>再次出现</h1><p>直接写原因</p><p>数据库 有一列 仓库名称 列名 同事直接写成 name </p><p>Mybatis XML SQL 自动把 name 修改为 NAME </p><p>getColumnMeta(colName);  获取时是 根据列名获取</p><p>用 ‘NAME’ 肯定获取不到 </p><p>Seata 的 Map 存储的是小写 ‘name’</p><p>不确定项目里面还有没有其它的大小写问题</p><p>直接修改 Seata 源码</p><p>io.seata.rm.datasource.sql.struct.TableMeta</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * key: column name</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Map&lt;String, ColumnMeta&gt; allColumns = <span class="keyword">new</span> LinkedHashMap&lt;&gt;();</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * key: index name</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Map&lt;String, IndexMeta&gt; allIndexes = <span class="keyword">new</span> LinkedHashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line"><span class="comment">//修改为</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * key: column name</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Map&lt;String, ColumnMeta&gt; allColumns = <span class="keyword">new</span> LinkedCaseInsensitiveMap&lt;&gt;();</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * key: index name</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Map&lt;String, IndexMeta&gt; allIndexes = <span class="keyword">new</span> LinkedCaseInsensitiveMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line"><span class="comment">//修改成不区分大小写的 Map</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;</summary>
    
    
    
    <category term="Java" scheme="https://blog.lqs1848.top/categories/Java/"/>
    
    
    <category term="Java" scheme="https://blog.lqs1848.top/tags/Java/"/>
    
    <category term="Seata" scheme="https://blog.lqs1848.top/tags/Seata/"/>
    
  </entry>
  
  <entry>
    <title>oracle 11g 数组下标越界</title>
    <link href="https://blog.lqs1848.top/2021/11/26/2021-11-26%20oracle%2011g%20%E6%95%B0%E7%BB%84%E4%B8%8B%E8%A1%A8%E8%B6%8A%E7%95%8C/"/>
    <id>https://blog.lqs1848.top/2021/11/26/2021-11-26%20oracle%2011g%20%E6%95%B0%E7%BB%84%E4%B8%8B%E8%A1%A8%E8%B6%8A%E7%95%8C/</id>
    <published>2021-11-25T16:00:00.000Z</published>
    <updated>2021-11-26T02:05:46.272Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h1 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h1><p>SQL 查询 时携带了超过8个参数以后 一直提示下标越界</p><h1 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h1><p>我用的 Oracle11g JDBC 驱动是网上随便下的 oracle 11.1.0.7.0-Produc tion 的 ojdbc6.jar 自己丢到本地Maven上</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//oracle.jdbc.driver.OracleSql 第579行</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">13</span>: &#123;</span><br><span class="line">    <span class="keyword">if</span> (count &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.parameterList == OracleSql.EMPTY_LIST) &#123;</span><br><span class="line">            <span class="keyword">this</span>.parameterList = <span class="keyword">new</span> String[<span class="number">8</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">this</span>.parameterList.length &lt;= <span class="keyword">this</span>.parameterCount) &#123;</span><br><span class="line">            <span class="keyword">final</span> String[] parameterList = <span class="keyword">new</span> String[<span class="keyword">this</span>.parameterList.length * <span class="number">4</span>];</span><br><span class="line">            System.arraycopy(<span class="keyword">this</span>.parameterList, <span class="number">0</span>, parameterList, <span class="number">0</span>, <span class="keyword">this</span>.parameterList.length);</span><br><span class="line">            <span class="keyword">this</span>.parameterList = parameterList;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">this</span>.parameterList[<span class="keyword">this</span>.parameterCount] = <span class="keyword">new</span> String(<span class="keyword">this</span>.currentParameter, <span class="number">0</span>, count).intern();</span><br><span class="line">        count = <span class="number">0</span>;</span><br><span class="line">        ++<span class="keyword">this</span>.parameterCount;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>更换为Maven 仓库中的最新版</p><blockquote><dependency>    <groupId>com.oracle.database.jdbc</groupId>    <artifactId>ojdbc6</artifactId>    <version>11.2.0.4</version></dependency></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//oracle.jdbc.driver.OracleSql 第633行</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">16</span>: &#123;</span><br><span class="line">    <span class="keyword">if</span> (count &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.parameterList == OracleSql.EMPTY_LIST) &#123;</span><br><span class="line">        <span class="keyword">this</span>.parameterList = <span class="keyword">new</span> String[Math.max(<span class="number">8</span>, <span class="keyword">this</span>.parameterCount * <span class="number">4</span>)];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">this</span>.parameterList.length &lt;= <span class="keyword">this</span>.parameterCount) &#123;</span><br><span class="line">        <span class="keyword">final</span> String[] parameterList = <span class="keyword">new</span> String[<span class="keyword">this</span>.parameterList.length * <span class="number">4</span>];</span><br><span class="line">        System.arraycopy(<span class="keyword">this</span>.parameterList, <span class="number">0</span>, parameterList, <span class="number">0</span>, <span class="keyword">this</span>.parameterList.length);</span><br><span class="line">        <span class="keyword">this</span>.parameterList = parameterList;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">this</span>.parameterList[<span class="keyword">this</span>.parameterCount] = <span class="keyword">new</span> String(<span class="keyword">this</span>.currentParameter, <span class="number">0</span>, count).intern();</span><br><span class="line">    count = <span class="number">0</span>;</span><br><span class="line">    ++<span class="keyword">this</span>.parameterCount;</span><br><span class="line">    <span class="keyword">if</span> (n != <span class="number">0</span>) &#123;</span><br><span class="line">        ++<span class="keyword">this</span>.returningIntoParameterCount;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//旧版</span></span><br><span class="line"><span class="keyword">this</span>.parameterList = <span class="keyword">new</span> String[<span class="number">8</span>];</span><br><span class="line"><span class="comment">//新版</span></span><br><span class="line"><span class="keyword">this</span>.parameterList = <span class="keyword">new</span> String[Math.max(<span class="number">8</span>, <span class="keyword">this</span>.parameterCount * <span class="number">4</span>)];</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Oracle Jdbc 驱动竟然还会有这么明显的BUG… emm</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>驱动老老实实用最新的</p>]]></content>
    
    
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;</summary>
    
    
    
    <category term="DateBase" scheme="https://blog.lqs1848.top/categories/DateBase/"/>
    
    
    <category term="Java" scheme="https://blog.lqs1848.top/tags/Java/"/>
    
    <category term="Oracle 11g" scheme="https://blog.lqs1848.top/tags/Oracle-11g/"/>
    
  </entry>
  
  <entry>
    <title>PageHelper 丢失参数</title>
    <link href="https://blog.lqs1848.top/2021/11/22/2021-11-22%20PageHelper%20%E4%B8%A2%E5%A4%B1%E5%8F%82%E6%95%B0/"/>
    <id>https://blog.lqs1848.top/2021/11/22/2021-11-22%20PageHelper%20%E4%B8%A2%E5%A4%B1%E5%8F%82%E6%95%B0/</id>
    <published>2021-11-21T16:00:00.000Z</published>
    <updated>2021-11-26T02:06:59.746Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><p>PageHelper 5.2.0版本</p><h1 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h1><p>一个很早以前的接口前段突然要使用</p><p>调用后发现无法查询到数据</p><p>查看日志发现</p><p>PageHelper 分页 Count SQL</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">count</span>(<span class="number">0</span>) <span class="keyword">FROM</span> (<span class="keyword">SELECT</span> (round(<span class="number">6367000</span> <span class="operator">*</span> <span class="number">2</span> <span class="operator">*</span> <span class="built_in">asin</span>(<span class="built_in">sqrt</span>(pow(<span class="built_in">sin</span>(((m.latitude <span class="operator">*</span> pi()) <span class="operator">/</span> <span class="number">180</span> <span class="operator">-</span> (<span class="comment">/*latitude*/</span><span class="number">39</span> <span class="operator">*</span> pi()) <span class="operator">/</span> <span class="number">180</span>) <span class="operator">/</span> <span class="number">2</span>), <span class="number">2</span>) <span class="operator">+</span> <span class="built_in">cos</span>((<span class="comment">/*latitude*/</span><span class="number">39</span> <span class="operator">*</span> pi()) <span class="operator">/</span> <span class="number">180</span>) <span class="operator">*</span> <span class="built_in">cos</span>((m.latitude <span class="operator">*</span> pi()) <span class="operator">/</span> <span class="number">180</span>) <span class="operator">*</span> pow(<span class="built_in">sin</span>(((m.longitude <span class="operator">*</span> pi()) <span class="operator">/</span> <span class="number">180</span> <span class="operator">-</span> (<span class="comment">/*longitude*/</span><span class="number">39</span> <span class="operator">*</span> pi()) <span class="operator">/</span> <span class="number">180</span>) <span class="operator">/</span> <span class="number">2</span>), <span class="number">2</span>))))) <span class="keyword">AS</span> distance <span class="keyword">FROM</span> sel_mal m <span class="keyword">WHERE</span> m.status <span class="operator">=</span> <span class="number">1</span> <span class="keyword">AND</span> m.mall_id <span class="operator">=</span> <span class="comment">/*mallId*/</span><span class="number">39</span>) table_count</span><br></pre></td></tr></table></figure><p>分页后进行查询的SQL</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> (round(<span class="number">6367000</span> <span class="operator">*</span> <span class="number">2</span> <span class="operator">*</span> <span class="built_in">asin</span>(<span class="built_in">sqrt</span>(pow(<span class="built_in">sin</span>(((m.latitude <span class="operator">*</span> pi()) <span class="operator">/</span> <span class="number">180</span> <span class="operator">-</span> (<span class="comment">/*latitude*/</span><span class="number">39</span> <span class="operator">*</span> pi()) <span class="operator">/</span> <span class="number">180</span>) <span class="operator">/</span> <span class="number">2</span>), <span class="number">2</span>) <span class="operator">+</span> <span class="built_in">cos</span>((<span class="comment">/*latitude*/</span><span class="number">39</span> <span class="operator">*</span> pi()) <span class="operator">/</span> <span class="number">180</span>) <span class="operator">*</span> <span class="built_in">cos</span>((m.latitude <span class="operator">*</span> pi()) <span class="operator">/</span> <span class="number">180</span>) <span class="operator">*</span> pow(<span class="built_in">sin</span>(((m.longitude <span class="operator">*</span> pi()) <span class="operator">/</span> <span class="number">180</span> <span class="operator">-</span> (<span class="comment">/*longitude*/</span><span class="keyword">null</span> <span class="operator">*</span> pi()) <span class="operator">/</span> <span class="number">180</span>) <span class="operator">/</span> <span class="number">2</span>), <span class="number">2</span>))))) <span class="keyword">AS</span> distance <span class="keyword">from</span> sel_mal m <span class="keyword">where</span> m.status<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> m.mall_id <span class="operator">=</span> <span class="comment">/*mallId*/</span><span class="keyword">null</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> distance <span class="keyword">ASC</span> LIMIT <span class="comment">/*Second_PageHelper*/</span><span class="number">30</span> </span><br></pre></td></tr></table></figure><p>PageHelper 在判断是否需要分页时的 SQL 还有 mallId 这个参数 </p><p>但是到了 实际分页的 SQL 时 mallId 这个参数就丢失了</p><p>原始XML</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">select (round(6367000 * 2 * asin(sqrt(pow(sin(((m.latitude * pi()) / 180 - (#&#123;latitude&#125; * pi()) / 180) / 2), 2) + cos((#&#123;latitude&#125; * pi()) / 180) * cos((m.latitude * pi()) / 180)</span><br><span class="line">* pow(sin(((m.longitude * pi()) / 180 - (#&#123;longitude&#125; * pi()) / 180) / 2), 2))))) AS distance</span><br><span class="line"><span class="keyword">from</span> sel_mal m</span><br><span class="line"><span class="keyword">where</span></span><br><span class="line">m.status<span class="operator">=</span><span class="number">1</span></span><br><span class="line">and m.mall_id = #&#123;mallId&#125;</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> distance <span class="keyword">ASC</span></span><br></pre></td></tr></table></figure><p>请求参数在分页时还存在</p><p>分页后却消失了 变成 null 导致查询不到数据</p><p>断点调试 PageHelper </p><p>根据 PageInterceptor 源码</p><p>Count 时 没有修改 parameter 变量</p><p>因为 入参没有变动 所以 PageHelper 使用了原始的 parameter 进行查询 查询结果就没有任何问题</p><p>而 PageHelper  进行分页时</p><p>增加了 /<em>Second_PageHelper</em>/30  参数</p><p>我原方法 是 </p><p>SelMalPo selectByMall(Long mallId);</p><p>单个参数的方法</p><p>PageHelper  对请求参数进行修改</p><p>变更为 paramMap HashMap 用于传递自身所需要的 limit size</p><p>在 AbstractHelperDialect 114行</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">//下面这段方法，主要解决一个常见类型的参数时的问题</span></span><br><span class="line"><span class="keyword">if</span> (boundSql.getParameterMappings() != <span class="keyword">null</span> &amp;&amp; boundSql.getParameterMappings().size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">for</span> (ParameterMapping parameterMapping : boundSql.getParameterMappings()) &#123;</span><br><span class="line">        String name = parameterMapping.getProperty();</span><br><span class="line">        <span class="keyword">if</span> (!name.equals(PAGEPARAMETER_FIRST)</span><br><span class="line">            &amp;&amp; !name.equals(PAGEPARAMETER_SECOND)</span><br><span class="line">            &amp;&amp; paramMap.get(name) == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (hasTypeHandler</span><br><span class="line">                || parameterMapping.getJavaType().equals(parameterObject.getClass())) &#123;</span><br><span class="line">                paramMap.put(name, parameterObject);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>注入参数时</p><p>由于我的SQL比较特殊 </p><p>里面有3个  #{latitude} 1个 #{mallId}</p><p>PageHelper  根据 参数类型 Long 匹配后 将  latitude = 39   而 mallId 这个变量没有赋值</p><p>导致了以上问题</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这个问题是由于特殊情况产生的</p><p>SQL 中有多个需要传递的参数</p><p>但方法个只声明了一个参数</p><p>导致 PageHelper  判断错误</p>]]></content>
    
    
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;</summary>
    
    
    
    <category term="Java" scheme="https://blog.lqs1848.top/categories/Java/"/>
    
    
    <category term="Java" scheme="https://blog.lqs1848.top/tags/Java/"/>
    
    <category term="Mybatis" scheme="https://blog.lqs1848.top/tags/Mybatis/"/>
    
    <category term="PageHelper" scheme="https://blog.lqs1848.top/tags/PageHelper/"/>
    
  </entry>
  
  <entry>
    <title>Spring参数绑定 适应多种提交方式</title>
    <link href="https://blog.lqs1848.top/2021/11/03/2021-11-03%20Spring%E5%8F%82%E6%95%B0%E7%BB%91%E5%AE%9A/"/>
    <id>https://blog.lqs1848.top/2021/11/03/2021-11-03%20Spring%E5%8F%82%E6%95%B0%E7%BB%91%E5%AE%9A/</id>
    <published>2021-11-02T16:00:00.000Z</published>
    <updated>2021-11-03T11:05:04.511Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h1 id="一、背景"><a href="#一、背景" class="headerlink" title="一、背景"></a>一、背景</h1><p>开发接口时经常会出现</p><p>有的接口一堆参数 得定义 Bean 用 @RequestBody 接收</p><p>有的又只有一两个 参数 用 @RequestParam 接收</p><p>快速迭代时修改接口导致 前端请求 ContentType 也要跟着改变</p><p>前端每次都要纠结参数放 param 还是放 body </p><p>就产生了 修改下参数绑定逻辑的想法</p><h1 id="二、修改参数绑定"><a href="#二、修改参数绑定" class="headerlink" title="二、修改参数绑定"></a>二、修改参数绑定</h1><p>Spring 会从 request 中获取</p><p>parameterMap 和 body</p><p>formData 是放 parameterMap 中 表现为 key-values</p><p>x-www 是放在 body中 表现为 key=value&amp;key=value</p><p>json 是放在 body 中 表现为 {key:value}</p><p>凭印象写的 具体得用 postMan 实测下</p><p>因为 post 和 get 会有区别</p><p>默认 get 没有 content-type 但 postMan 也能传递 x-www</p><p>首先 通过过滤器替换 request</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.net.URLDecoder;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.FilterChain;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.core.Ordered;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.annotation.Order;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.HttpHeaders;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.MediaType;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSONObject;</span><br><span class="line"><span class="keyword">import</span> org.lqs1848.framework.enums.HttpMethod;</span><br><span class="line"><span class="keyword">import</span> org.lqs1848.framework.utils.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.lqs1848.framework.web.wrapper.ContentCachingRequestWrapper;</span><br><span class="line"><span class="keyword">import</span> org.lqs1848.framework.web.wrapper.CryptoHttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> org.lqs1848.framework.web.wrapper.ResponseWrapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.date.DateUtil;</span><br><span class="line"><span class="keyword">import</span> eu.bitwalker.useragentutils.Browser;</span><br><span class="line"><span class="keyword">import</span> eu.bitwalker.useragentutils.OperatingSystem;</span><br><span class="line"><span class="keyword">import</span> eu.bitwalker.useragentutils.UserAgent;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Order(Ordered.HIGHEST_PRECEDENCE)</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TraceFilter</span> <span class="keyword">extends</span> <span class="title">ActionFilter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">filter</span><span class="params">(HttpServletRequest request, HttpServletResponse response, FilterChain chain)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">Long startTime = System.nanoTime();</span><br><span class="line"></span><br><span class="line">String contentType = request.getContentType();</span><br><span class="line">log.info(<span class="string">&quot;QueryStart_Url(&quot;</span> + request.getRequestURI() + <span class="string">&quot;)_Method(&quot;</span>+request.getMethod()+<span class="string">&quot;)_Type(&quot;</span>+getContentType(contentType)+<span class="string">&quot;)_Ip(&quot;</span>+getIpAddress(request)+<span class="string">&quot;)&quot;</span>+getDevInfo(request.getHeader(HttpHeaders.USER_AGENT)));</span><br><span class="line">ContentCachingRequestWrapper requestWrapper = <span class="keyword">new</span> ContentCachingRequestWrapper(request);</span><br><span class="line">log.info(<span class="string">&quot;QueryString:&quot;</span> + requestWrapper.getQueryString());</span><br><span class="line">log.info(<span class="string">&quot;QueryParameter:&quot;</span> + (requestWrapper.getParameterMap().size() !=<span class="number">0</span> ? JSON.toJSONString(requestWrapper.getParameterMap()):<span class="string">&quot;&quot;</span>));</span><br><span class="line"><span class="keyword">if</span> (requestWrapper.hasFile() &amp;&amp; requestWrapper.getBodySize() != <span class="number">0</span>) &#123;</span><br><span class="line">log.info(<span class="string">&quot;QueryBody: 内容是个文件&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">String queryBody = requestWrapper.getQueryBody();</span><br><span class="line">log.info(<span class="string">&quot;QueryBody:&quot;</span> + queryBody.replaceAll(<span class="string">&quot;\\s+&quot;</span>, <span class="string">&quot; &quot;</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">//支持 前端用 get 但是数据传递在body中</span></span><br><span class="line"><span class="keyword">if</span>(HttpMethod.GET.matches(request.getMethod()) &amp;&amp; requestWrapper.getBodySize() != <span class="number">0</span>) &#123;</span><br><span class="line">queryBody = URLDecoder.decode(queryBody, <span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(queryBody != <span class="keyword">null</span> &amp;&amp; queryBody.length() &gt; <span class="number">3</span> &amp;&amp; queryBody.length() &lt; <span class="number">999</span>) &#123;</span><br><span class="line"><span class="comment">//支持 前端用 JSON 时 后端用 @RequestParam 接收参数</span></span><br><span class="line"><span class="keyword">if</span>(contentType == <span class="keyword">null</span> || contentType.startsWith(MediaType.APPLICATION_JSON_VALUE)) &#123;</span><br><span class="line"><span class="comment">//对简单的 RquestBody JSON 数据  放入 RequestParam 封装</span></span><br><span class="line">JSONObject json = JSONObject.parseObject(queryBody);</span><br><span class="line"><span class="keyword">for</span>(String key : json.keySet()) &#123;</span><br><span class="line">String value = json.getString(key);</span><br><span class="line"><span class="keyword">if</span>(StringUtils.isNotEmpty(value) &amp;&amp; !value.startsWith(<span class="string">&quot;&#123;&quot;</span>) &amp;&amp; !value.startsWith(<span class="string">&quot;[&quot;</span>))</span><br><span class="line">requestWrapper.put(key, value);</span><br><span class="line">&#125;<span class="comment">//for</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//支持 前端用 x-www 后端用 参数 或者 JavaBean 接收</span></span><br><span class="line"><span class="keyword">if</span>(contentType == <span class="keyword">null</span> || contentType.startsWith(MediaType.APPLICATION_FORM_URLENCODED_VALUE)) &#123;</span><br><span class="line">String[] params = queryBody.split(<span class="string">&quot;&amp;&quot;</span>);</span><br><span class="line"><span class="keyword">for</span>(String param : params) &#123;</span><br><span class="line">String[] par = param.split(<span class="string">&quot;=&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(par.length != <span class="number">2</span>) <span class="keyword">break</span>;</span><br><span class="line">requestWrapper.put(par[<span class="number">0</span>], par[<span class="number">1</span>]);</span><br><span class="line">&#125;<span class="comment">//for</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="comment">//if</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//支持 前端用 x-www 或 form-data 时 后端用 JavaBean 接收</span></span><br><span class="line"><span class="keyword">if</span>((requestWrapper.getBodySize() == <span class="number">0</span> || HttpMethod.GET.matches(request.getMethod())) &amp;&amp; </span><br><span class="line">(contentType == <span class="keyword">null</span> || contentType.startsWith(MediaType.APPLICATION_FORM_URLENCODED_VALUE) </span><br><span class="line">|| contentType.startsWith(MediaType.MULTIPART_FORM_DATA_VALUE))) &#123;</span><br><span class="line">Map&lt;String,String&gt; map = requestWrapper.getParameterMapEx();</span><br><span class="line"><span class="keyword">if</span>(!map.isEmpty()) &#123;</span><br><span class="line">                    <span class="comment">//这里主要是支持 单个参数里面有嵌套 json 意义不大</span></span><br><span class="line">String mapJson = JSON.toJSONString(map)</span><br><span class="line">.replaceAll(<span class="string">&quot;\&quot;\\&#123;&quot;</span>,<span class="string">&quot;&#123;&quot;</span>)</span><br><span class="line">.replaceAll(<span class="string">&quot;\\&#125;\&quot;&quot;</span>, <span class="string">&quot;&#125;&quot;</span>)</span><br><span class="line">.replaceAll(<span class="string">&quot;\&quot;\\[&quot;</span>,<span class="string">&quot;[&quot;</span>)</span><br><span class="line">.replaceAll(<span class="string">&quot;\\]\&quot;&quot;</span>, <span class="string">&quot;]&quot;</span>)</span><br><span class="line">.replaceAll(<span class="string">&quot;\\\\\&quot;&quot;</span>, <span class="string">&quot;\&quot;&quot;</span>);</span><br><span class="line">requestWrapper.rewriteBody(mapJson);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="comment">//else</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//劫持返回信息</span></span><br><span class="line"><span class="keyword">boolean</span> isMeHook = <span class="keyword">false</span>;</span><br><span class="line">ResponseWrapper proxyResponse;</span><br><span class="line"><span class="keyword">if</span> (response <span class="keyword">instanceof</span> ResponseWrapper)</span><br><span class="line">proxyResponse = (ResponseWrapper) response;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">proxyResponse = <span class="keyword">new</span> ResponseWrapper(response);</span><br><span class="line">isMeHook = <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">chain.doFilter(requestWrapper, proxyResponse);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(response != <span class="keyword">null</span> &amp;&amp; (response.getContentType() == <span class="keyword">null</span> || response.getContentType().startsWith(MediaType.APPLICATION_JSON_VALUE)))</span><br><span class="line">log.info(<span class="string">&quot;ResponseBody Secret(&#123;&#125;) Detail(&#123;&#125;)&quot;</span>, response <span class="keyword">instanceof</span> CryptoHttpServletResponse, <span class="keyword">new</span> String(proxyResponse.getContent()));</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">log.info(<span class="string">&quot;ResponseBody Detail(&#123;&#125;)&quot;</span>, <span class="string">&quot;内容未知 type:&quot;</span> + response.getContentType());</span><br><span class="line"></span><br><span class="line">Long elapsedTime = DateUtil.nanosToMillis(DateUtil.spendNt(startTime));</span><br><span class="line">log.info(<span class="string">&quot;QueryEnd-Url:&quot;</span> + request.getRequestURI() + <span class="string">&quot; elapsedTime(&quot;</span> + elapsedTime + <span class="string">&quot;)&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(isMeHook)</span><br><span class="line">proxyResponse.finish();</span><br><span class="line">&#125;<span class="comment">// method</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getContentType</span><span class="params">(String contentType)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(StringUtils.isEmpty(contentType))</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;NONE&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(contentType.indexOf(<span class="string">&quot;;&quot;</span>) != -<span class="number">1</span>) </span><br><span class="line">contentType = contentType.split(<span class="string">&quot;;&quot;</span>)[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">if</span>(contentType.indexOf(<span class="string">&quot;/&quot;</span>) != -<span class="number">1</span>)</span><br><span class="line">contentType = contentType.split(<span class="string">&quot;/&quot;</span>)[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">return</span> contentType;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getDevInfo</span><span class="params">(String agent)</span> </span>&#123;</span><br><span class="line">StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line"><span class="comment">//解析agent字符串</span></span><br><span class="line">UserAgent userAgent = UserAgent.parseUserAgentString(agent);</span><br><span class="line"><span class="comment">//获取浏览器对象</span></span><br><span class="line">Browser browser = userAgent.getBrowser();</span><br><span class="line"><span class="comment">//获取操作系统对象</span></span><br><span class="line">OperatingSystem operatingSystem = userAgent.getOperatingSystem();</span><br><span class="line">sb.append(<span class="string">&quot;_DevType(&quot;</span>).append(operatingSystem.getDeviceType()).append(<span class="string">&quot;)&quot;</span>)</span><br><span class="line">.append(<span class="string">&quot;_Browser(&quot;</span>).append(browser.getName()).append(<span class="string">&quot;)&quot;</span>)</span><br><span class="line">.append(<span class="string">&quot;_Os(&quot;</span>).append(operatingSystem.getName()).append(<span class="string">&quot;)&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> sb.toString();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getIpAddress</span><span class="params">(HttpServletRequest request)</span> </span>&#123;</span><br><span class="line">String ip = request.getHeader(<span class="string">&quot;x-forwarded-for&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (ip != <span class="keyword">null</span> &amp;&amp; ip.length() != <span class="number">0</span> &amp;&amp; !<span class="string">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class="line"><span class="comment">// 多次反向代理后会有多个ip值，第一个ip才是真实ip</span></span><br><span class="line"><span class="keyword">if</span> (ip.indexOf(<span class="string">&quot;,&quot;</span>) != -<span class="number">1</span>) &#123;</span><br><span class="line">ip = ip.split(<span class="string">&quot;,&quot;</span>)[<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (ip == <span class="keyword">null</span> || ip.length() == <span class="number">0</span> || <span class="string">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class="line">ip = request.getHeader(<span class="string">&quot;Proxy-Client-IP&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (ip == <span class="keyword">null</span> || ip.length() == <span class="number">0</span> || <span class="string">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class="line">ip = request.getHeader(<span class="string">&quot;WL-Proxy-Client-IP&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (ip == <span class="keyword">null</span> || ip.length() == <span class="number">0</span> || <span class="string">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class="line">ip = request.getHeader(<span class="string">&quot;HTTP_CLIENT_IP&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (ip == <span class="keyword">null</span> || ip.length() == <span class="number">0</span> || <span class="string">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class="line">ip = request.getHeader(<span class="string">&quot;HTTP_X_FORWARDED_FOR&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (ip == <span class="keyword">null</span> || ip.length() == <span class="number">0</span> || <span class="string">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class="line">ip = request.getHeader(<span class="string">&quot;X-Real-IP&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (ip == <span class="keyword">null</span> || ip.length() == <span class="number">0</span> || <span class="string">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class="line">ip = request.getRemoteAddr();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ip;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="comment">// class</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.nio.charset.Charset;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.Enumeration;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletInputStream;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequestWrapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.fileupload.servlet.ServletFileUpload;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.io.IOUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ContentCachingRequestWrapper</span> <span class="keyword">extends</span> <span class="title">HttpServletRequestWrapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">byte</span>[] body;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> Map&lt;String, String[]&gt; parameterMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> BufferedReader reader;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> ServletInputStream inputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> StringBuffer queryStringSb;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">boolean</span> hasFile;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">boolean</span> isRewriteBody = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">ContentCachingRequestWrapper</span><span class="params">(HttpServletRequest request)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"><span class="keyword">super</span>(request);</span><br><span class="line">parameterMap = <span class="keyword">new</span> HashMap&lt;String, String[]&gt;(request.getParameterMap());</span><br><span class="line">queryStringSb = <span class="keyword">new</span> StringBuffer();</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">super</span>.getQueryString() != <span class="keyword">null</span>) queryStringSb.append(<span class="keyword">super</span>.getQueryString());</span><br><span class="line">loadBody(request);</span><br><span class="line">hasFile = ServletFileUpload.isMultipartContent(<span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">put</span><span class="params">(String key, String value)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (!parameterMap.containsKey(key)) &#123;</span><br><span class="line">parameterMap.put(key, <span class="keyword">new</span> String[] &#123; value &#125;);</span><br><span class="line"><span class="keyword">if</span> (queryStringSb.length() &gt; <span class="number">0</span>)</span><br><span class="line">queryStringSb.append(<span class="string">&quot;&amp;&quot;</span>);</span><br><span class="line">queryStringSb.append(key).append(<span class="string">&quot;=&quot;</span>).append(value);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Map&lt;String, String&gt; <span class="title">getParameterMapEx</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Map&lt;String, String&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"><span class="keyword">for</span> (String key : parameterMap.keySet()) &#123;</span><br><span class="line">map.put(key, <span class="keyword">this</span>.getParameter(key));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> map;</span><br><span class="line">&#125;<span class="comment">//method getParameterMapEx</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">rewriteBody</span><span class="params">(String input)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.body = input.getBytes(Charset.defaultCharset());</span><br><span class="line"><span class="keyword">this</span>.inputStream = <span class="keyword">new</span> RequestCachingInputStream(<span class="keyword">this</span>.body);</span><br><span class="line"><span class="keyword">this</span>.isRewriteBody = <span class="keyword">true</span>;</span><br><span class="line">&#125;<span class="comment">//method rewriteBody</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isRewiteBody</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>.isRewriteBody;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">loadBody</span><span class="params">(HttpServletRequest request)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.body = IOUtils.toByteArray(request.getInputStream());</span><br><span class="line"><span class="keyword">this</span>.inputStream = <span class="keyword">new</span> RequestCachingInputStream(body);</span><br><span class="line">&#125;<span class="comment">//method loadBody</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">byte</span>[] getBody() &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>.body;</span><br><span class="line">&#125;<span class="comment">//method getBody</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getBodySize</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>.body.length;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getContentType</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">super</span>.getContentType();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hasFile</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>.hasFile;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getQueryString</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>.queryStringSb.toString();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Map&lt;String, String[]&gt; getParameterMap() &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>.parameterMap;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getParameter</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">String[] values = <span class="keyword">this</span>.parameterMap.get(name);</span><br><span class="line"><span class="keyword">return</span> values != <span class="keyword">null</span> ? values[<span class="number">0</span>] : <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> String[] getParameterValues(String name) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>.parameterMap.get(name);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Enumeration&lt;String&gt; <span class="title">getParameterNames</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> Collections.enumeration(parameterMap.keySet());</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//必须重写 不然原生request getInputStream 只能调用一次</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ServletInputStream <span class="title">getInputStream</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>.inputStream != <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>.inputStream;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">super</span>.getInputStream();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> BufferedReader <span class="title">getReader</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (reader == <span class="keyword">null</span>) &#123;</span><br><span class="line">reader = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(inputStream, getCharacterEncoding()));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> reader;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getQueryBody</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"><span class="keyword">return</span> IOUtils.toString(getBody(), getCharacterEncoding());</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="comment">//class </span></span><br></pre></td></tr></table></figure><p>一开始只覆盖了 getParameterMap() 以为就能让 Spring 读取到 Paramter</p><p>结果 Spring 是通过 getParameterNames() 获得 key 再去匹配 Controller 的参数名</p><p>反正 ServletRequest 中的方法最好全部都覆盖掉</p><p>到这里只是支持 body 中的数据放到  param  中</p><p>如果Controller 用 bean 去接收参数 还是有可能获取不到</p><p>用自定义 参数解析器去接收</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.core.MethodParameter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.HttpHeaders;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.MediaType;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.support.WebDataBinderFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.context.request.NativeWebRequest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.method.support.HandlerMethodArgumentResolver;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.method.support.ModelAndViewContainer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSONObject;</span><br><span class="line"><span class="keyword">import</span> org.lqs1848.framework.web.wrapper.ContentCachingRequestWrapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DiyHandlerResolver</span> <span class="keyword">implements</span> <span class="title">HandlerMethodArgumentResolver</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">supportsParameter</span><span class="params">(MethodParameter parameter)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//是项目中的 JavaBean 才进行注入</span></span><br><span class="line"><span class="keyword">return</span> parameter.getParameterType().getPackageName().startsWith(<span class="string">&quot;org.lqs1848&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">resolveArgument</span><span class="params">(MethodParameter parameter, ModelAndViewContainer container,</span></span></span><br><span class="line"><span class="function"><span class="params">NativeWebRequest nativeWebRequest, WebDataBinderFactory factory)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">ContentCachingRequestWrapper request = nativeWebRequest.getNativeRequest(ContentCachingRequestWrapper.class);</span><br><span class="line"></span><br><span class="line">String contentType = request.getHeader(HttpHeaders.CONTENT_TYPE);</span><br><span class="line"><span class="keyword">if</span>(request.getBodySize() &gt; <span class="number">0</span> &amp;&amp; (request.isRewiteBody() || contentType == <span class="keyword">null</span> || contentType.startsWith(MediaType.APPLICATION_JSON_VALUE))) &#123;</span><br><span class="line">String queryBody = request.getQueryBody();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment">//支持多个对象嵌套</span></span><br><span class="line">                <span class="comment">/*</span></span><br><span class="line"><span class="comment">                controller(JavaBeanA a,JavaBeanB b)</span></span><br><span class="line"><span class="comment">                json&#123;</span></span><br><span class="line"><span class="comment">                a:&#123;</span></span><br><span class="line"><span class="comment">                xxx:xxx</span></span><br><span class="line"><span class="comment">                &#125;,</span></span><br><span class="line"><span class="comment">                b:&#123;...&#125;</span></span><br><span class="line"><span class="comment">                &#125;</span></span><br><span class="line"><span class="comment">                */</span></span><br><span class="line"><span class="keyword">if</span>(queryBody.indexOf(<span class="string">&quot;\&quot;&quot;</span> + parameter.getParameterName() + <span class="string">&quot;\&quot;&quot;</span>) != -<span class="number">1</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> JSONObject.parseObject(queryBody).getObject(parameter.getParameterName(), parameter.getParameterType());</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">//单个对象</span></span><br><span class="line"><span class="keyword">return</span> JSONObject.parseObject(queryBody,parameter.getParameterType());</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">log.error(<span class="string">&quot;参数注入增强-JSON转换失败&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="comment">//if</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;<span class="comment">//method</span></span><br><span class="line">&#125;<span class="comment">//class</span></span><br></pre></td></tr></table></figure><h1 id="三、总结"><a href="#三、总结" class="headerlink" title="三、总结"></a>三、总结</h1><p>懒得重复写了 搬一下自己写在项目的中的说明</p><blockquote><p>Controller 中可以以任何方式接收前端传递的 QueryBody 参数<br>封装了 ContentType JSON 自动转换为 x-www 和 fromData 的逻辑</p><p>比如<br>public R Test(Entity e)//不需要写 @RequestBody 注解<br>public R Test(String param1,String param2)//放在 body 的可以自动拆成参数名 不需要额外定义一个 vo<br>public R Test(Entity1 e1,Entity2 e2)//可以同时接收多个数据<br>前端需要传递<br>{<br>    e1:{<br>        …<br>    },<br>    e2:{<br>        …<br>    }<br>}</p><p>甚至前端用 get请求 但是发送了x-www 的content-type 并把数据放在 requestBody 中 并以 xxx1=xxx1&amp;xxx2=xx2 的形式传输<br>后台使用<br>JavaBean 也可以接收</p></blockquote><p>写完代码</p><p>突然有点迷惑 为什么 Spring 没有去实现类似的逻辑呢</p>]]></content>
    
    
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;</summary>
    
    
    
    <category term="Java" scheme="https://blog.lqs1848.top/categories/Java/"/>
    
    <category term="Spring" scheme="https://blog.lqs1848.top/categories/Java/Spring/"/>
    
    
    <category term="Java" scheme="https://blog.lqs1848.top/tags/Java/"/>
    
    <category term="Spring" scheme="https://blog.lqs1848.top/tags/Spring/"/>
    
    <category term="RequestBody" scheme="https://blog.lqs1848.top/tags/RequestBody/"/>
    
    <category term="RequestParam" scheme="https://blog.lqs1848.top/tags/RequestParam/"/>
    
  </entry>
  
  <entry>
    <title>Hystrix上下文传递</title>
    <link href="https://blog.lqs1848.top/2021/10/12/2021-10-12%20Hystrix%E4%B8%8A%E4%B8%8B%E6%96%87%E4%BC%A0%E9%80%92/"/>
    <id>https://blog.lqs1848.top/2021/10/12/2021-10-12%20Hystrix%E4%B8%8A%E4%B8%8B%E6%96%87%E4%BC%A0%E9%80%92/</id>
    <published>2021-10-11T16:00:00.000Z</published>
    <updated>2021-10-12T10:32:05.268Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h1 id="一、背景"><a href="#一、背景" class="headerlink" title="一、背景"></a>一、背景</h1><p>开发中使用 ThreadLocal 来存放日志追踪码和分表等信息，但由于 Hystrix 使用了线程池 导致了 ThreadLocal 数据丢失。</p><h1 id="二、尝试解决"><a href="#二、尝试解决" class="headerlink" title="二、尝试解决"></a>二、尝试解决</h1><h2 id="TTL"><a href="#TTL" class="headerlink" title="TTL"></a>TTL</h2><p>TransmittableThreadLocal </p><h2 id="HystrixRequestContext"><a href="#HystrixRequestContext" class="headerlink" title="HystrixRequestContext"></a>HystrixRequestContext</h2><p>忘了啥问题了 好像是存储时会出错 如果要使用得替换很多东西</p><h2 id="HystrixConcurrencyStrategy-amp-HystrixCommandExecutionHook"><a href="#HystrixConcurrencyStrategy-amp-HystrixCommandExecutionHook" class="headerlink" title="HystrixConcurrencyStrategy&amp;HystrixCommandExecutionHook"></a>HystrixConcurrencyStrategy&amp;HystrixCommandExecutionHook</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">HystrixPlugins.getInstance().registerConcurrencyStrategy(<span class="keyword">new</span> RequestContextHystrixConcurrencyStrategy());</span><br><span class="line"></span><br><span class="line">报错:Caused by: java.lang.IllegalStateException: Another strategy was already registered.</span><br></pre></td></tr></table></figure><h2 id="包名类名覆盖"><a href="#包名类名覆盖" class="headerlink" title="包名类名覆盖"></a>包名类名覆盖</h2><p>实现一个 HystrixCommand</p><p>覆盖 feign.hystrix.HystrixInvocationHandler 使用自己实现的 HystrixCommand 进行回调</p><p>本地测试通过线上失败</p><p>原因是 Hystrix 上下文传递的逻辑 我提取到一个单独的Maven项目中</p><p>发布到线上变成 jar包时 所有引用 第三方jar和自己的公用 jar 处于 项目中的 lib 目录</p><p>lib 目录中的加载时 由于依赖 Hystrix 官方包 先加载了 官方包 重复加载的class会被忽略，只有第一个生效</p><p>导致线上始终无法生效</p><p>本地 自己的公用包 应该是加载到 class 目录下 </p><p>class目录优先级更高 所以覆盖成功 </p><p>Java的包名覆盖机制受太多外部条件影响 最终还是放弃了</p><blockquote><ul><li>同一个ClassLoader实例加载的类不能重复（不同的class文件，同样的类名也是重复），如果强行用同一个ClassLoader实例加载同一个类，则会报错<code>attempted duplicate class definition for &#123;your class&#125;</code></li><li><code>java -classpath(-cp)</code>加载配置jar包（classes）时，会按照书写定义顺序加载class，之后重复加载的class会被忽略，只有第一个生效</li><li>Idea中可以通过在Project Settings -&gt; Modules -&gt; Dependencies中通过上下箭头调整jar加载顺序，其实也就是调整<code>-classpath(-cp)</code>后的jar包书写顺序</li><li>Tomcat下的jar包貌似不同版本加载策略不同</li><li>spring-boot是自定义的jar包加载策略，顺序未确认，猜测默认是按字母排序</li></ul></blockquote><h2 id="5-SPI"><a href="#5-SPI" class="headerlink" title="5.SPI"></a>5.SPI</h2><p>扩展 HystrixConcurrencyStrategy 后不用 registerConcurrencyStrategy 注册</p><p>而是在工程的classpath下引入hystrix-plugins.properties配置文件</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">hystrix.plugin.HystrixConcurrencyStrategy.implementation</span>=<span class="string">com.xx.xx.xx.xxxStrategy</span></span><br></pre></td></tr></table></figure><h1 id="三、总结"><a href="#三、总结" class="headerlink" title="三、总结"></a>三、总结</h1><p>前后用了N种方式 最终还是用 SPI 的方式实现了想要的效果…</p><p><strong>具体实现参照之前的 <a href="/2021/03/31/2021-03-31%E5%88%86%E5%B8%83%E5%BC%8F%20%E6%97%A5%E5%BF%97%E8%BF%BD%E8%B8%AA%20%E9%93%BE%E8%B7%AF%E8%BF%BD%E8%B8%AA/">日志链路追踪</a></strong></p>]]></content>
    
    
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;</summary>
    
    
    
    <category term="Java" scheme="https://blog.lqs1848.top/categories/Java/"/>
    
    <category term="SpringCloud" scheme="https://blog.lqs1848.top/categories/Java/SpringCloud/"/>
    
    
    <category term="Java" scheme="https://blog.lqs1848.top/tags/Java/"/>
    
    <category term="SpringCloud" scheme="https://blog.lqs1848.top/tags/SpringCloud/"/>
    
    <category term="Hystrix" scheme="https://blog.lqs1848.top/tags/Hystrix/"/>
    
  </entry>
  
  <entry>
    <title>SpringMVC 路由约束</title>
    <link href="https://blog.lqs1848.top/2021/08/26/2021-08-26%20SpringMVC%20%E8%B7%AF%E7%94%B1%E7%BA%A6%E6%9D%9F/"/>
    <id>https://blog.lqs1848.top/2021/08/26/2021-08-26%20SpringMVC%20%E8%B7%AF%E7%94%B1%E7%BA%A6%E6%9D%9F/</id>
    <published>2021-08-25T16:00:00.000Z</published>
    <updated>2021-08-31T09:15:56.534Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h1 id="NET-Core-中的概念"><a href="#NET-Core-中的概念" class="headerlink" title=".NET Core 中的概念"></a>.NET Core 中的概念</h1><p>无聊逛论坛 突然看到了个 路由约束</p><p>好像没听过 搜索了一下 原来是 .NET Core 中的概念 <a href="https://docs.microsoft.com/zh-cn/aspnet/core/fundamentals/routing?view=aspnetcore-5.0#route-constraint-reference">文档</a></p><p>[GET] /api/posts/{id}<br>[GET] /api/posts/{name}</p><p>这样两个地址 可以通过 路由约束 分别映射到不同的地址</p><blockquote><p>.NET Core内置的路由约束</p><p>检查数据类型的约束<br>检查数据的值/长度/范围的约束<br>正则表达式约束</p><h3 id="检查数据类型的约束"><a href="#检查数据类型的约束" class="headerlink" title="检查数据类型的约束"></a>检查数据类型的约束</h3><table><thead><tr><th>约束</th><th>行内</th><th>Constraint类</th><th>说明</th></tr></thead><tbody><tr><td>int</td><td><code>&#123;id:int&#125;</code></td><td><code>IntRouteConstraint</code></td><td>只允许int32整数</td></tr><tr><td>alpha</td><td><code>&#123;id:alpha&#125;</code></td><td><code>AlphaRouteConstraint</code></td><td>只能包含大小写字母</td></tr><tr><td>bool</td><td><code>&#123;id:bool&#125;</code></td><td><code>BoolRouteConstraint</code></td><td>只允许布尔类型</td></tr><tr><td>datetime</td><td><code>&#123;id:datetime&#125;</code></td><td><code>DateTimeRouteConstraint</code></td><td>只允许日期格式</td></tr><tr><td>decimal</td><td><code>&#123;id:decimal&#125;</code></td><td><code>DecimalRouteConstraint</code></td><td>只允许decimal类型</td></tr><tr><td>double</td><td><code>&#123;id:double&#125;</code></td><td><code>DoubleRouteConstraint</code></td><td>只允许double类型</td></tr><tr><td>float</td><td><code>&#123;id:float&#125;</code></td><td><code>FloatRouteConstraint</code></td><td>只允许float类型</td></tr><tr><td>guid</td><td><code>&#123;id:guid&#125;</code></td><td><code>GuidRouteConstraint</code></td><td>只允许guid类型</td></tr></tbody></table><h3 id="检查数据的值-长度-范围的约束"><a href="#检查数据的值-长度-范围的约束" class="headerlink" title="检查数据的值/长度/范围的约束"></a>检查数据的值/长度/范围的约束</h3><table><thead><tr><th>约束</th><th>行内</th><th>Constraint类</th><th>说明</th></tr></thead><tbody><tr><td>length(length)</td><td><code>&#123;id:length(12)&#125;</code></td><td><code>LengthRouteConstraint</code></td><td>字符串长度限制</td></tr><tr><td>maxlength(value)</td><td><code>&#123;id:maxlength(8)&#125;</code></td><td><code>MaxLengthRouteConstraint</code></td><td>字符串最大长度限制</td></tr><tr><td>minlength(value)</td><td><code>&#123;id:minlength(4)&#125;</code></td><td><code>MinLengthRouteConstraint</code></td><td>字符串最小长度限制</td></tr><tr><td>range(min,max)</td><td><code>&#123;id:range(18,120)&#125;</code></td><td><code>RangeRouteConstraint</code></td><td>数值范围限制</td></tr><tr><td>min(value)</td><td><code>&#123;id:min(18)&#125;</code></td><td><code>MinRouteConstraint</code></td><td>最小数值限制</td></tr><tr><td>max(value)</td><td><code>&#123;id:max(120)&#125;</code></td><td><code>MaxRouteConstraint</code></td><td>最大数值限制</td></tr></tbody></table><h3 id="正则表达式约束"><a href="#正则表达式约束" class="headerlink" title="正则表达式约束"></a>正则表达式约束</h3><table><thead><tr><th>约束</th><th>行内</th><th>Constraint类</th><th>说明</th></tr></thead><tbody><tr><td>regex(expression)</td><td><code>&#123;ssn:regex(^\d&#123;&#123;3&#125;&#125;-\d&#123;&#123;2&#125;&#125;-\d&#123;&#123;4&#125;&#125;$)&#125;/</code></td><td><code>RegexRouteConstraint</code></td><td>正则表达式约束</td></tr></tbody></table></blockquote><h1 id="Java-SpringMVC-对应实现"><a href="#Java-SpringMVC-对应实现" class="headerlink" title="Java SpringMVC 对应实现"></a>Java SpringMVC 对应实现</h1><p><a href="https://docs.spring.io/spring-framework/docs/current/reference/html/web.html#mvc-ann-requestmapping-uri-templates">文档</a> </p><h2 id="URI-Patterns"><a href="#URI-Patterns" class="headerlink" title="URI Patterns"></a>URI Patterns</h2><blockquote><p>一些示例：</p><ul><li><code>&quot;/resources/ima?e.png&quot;</code> - match one character in a path 匹配路径段中的一个字符segment</li><li><code>&quot;/resources/*.png&quot;</code> - match zero or more characters in a path segment 匹配路径段中的零个或多个字符</li><li><code>&quot;/resources/**&quot;</code> - match multiple path segments 匹配多个路径段</li><li><code>&quot;/projects/&#123;project&#125;/versions&quot;</code> - match a path segment and capture it as a variable 匹配路径段并将其捕获为变量</li><li><code>&quot;/projects/&#123;project:[a-z]+&#125;/versions&quot;</code> - match and capture a variable with a regex 使用正则表达式匹配并捕获变量</li></ul></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/&#123;name:[a-z-]+&#125;-&#123;version:\\d\\.\\d\\.\\d&#125;&#123;ext:\\.[a-z]+&#125;&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handle</span><span class="params">(<span class="meta">@PathVariable</span> String name, <span class="meta">@PathVariable</span> String version, <span class="meta">@PathVariable</span> String ext)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;</summary>
    
    
    
    <category term="Java" scheme="https://blog.lqs1848.top/categories/Java/"/>
    
    <category term="SpringMVC" scheme="https://blog.lqs1848.top/categories/Java/SpringMVC/"/>
    
    
    <category term="Java" scheme="https://blog.lqs1848.top/tags/Java/"/>
    
    <category term="SpringMVC" scheme="https://blog.lqs1848.top/tags/SpringMVC/"/>
    
  </entry>
  
  <entry>
    <title>OpenCV OCR预处理</title>
    <link href="https://blog.lqs1848.top/2021/07/08/2021-07-08%20OpenCV%20OCR%E9%A2%84%E5%A4%84%E7%90%86/"/>
    <id>https://blog.lqs1848.top/2021/07/08/2021-07-08%20OpenCV%20OCR%E9%A2%84%E5%A4%84%E7%90%86/</id>
    <published>2021-07-07T16:00:00.000Z</published>
    <updated>2021-07-09T08:00:12.918Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h1 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h1><p><img src="/img/opencv/1.jpg"></p><p>需要识别出 标签中的 76046 58420</p><p>Tesseract 识别大图 速度特别慢</p><p>并且 Tesseract 本身也是默认你传递给它的图片是预处理过的</p><p>目标把图片处理成这样</p><p><img src="/img/opencv/r_111.jpg"></p><p><img src="/img/opencv/r_222.jpg"></p><p>旋转一下角度</p><p><img src="/img/opencv/r_111_jz.jpg"></p><p><img src="/img/opencv/r_222_jz.jpg"></p><h1 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.lqs1848.cv.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.bytedeco.javacpp.indexer.IntIndexer;</span><br><span class="line"><span class="keyword">import</span> org.bytedeco.javacpp.indexer.UByteRawIndexer;</span><br><span class="line"><span class="keyword">import</span> org.bytedeco.opencv.global.opencv_core;</span><br><span class="line"><span class="keyword">import</span> org.bytedeco.opencv.global.opencv_imgcodecs;</span><br><span class="line"><span class="keyword">import</span> org.bytedeco.opencv.global.opencv_imgproc;</span><br><span class="line"><span class="keyword">import</span> org.bytedeco.opencv.opencv_core.Mat;</span><br><span class="line"><span class="keyword">import</span> org.bytedeco.opencv.opencv_core.MatVector;</span><br><span class="line"><span class="keyword">import</span> org.bytedeco.opencv.opencv_core.Point;</span><br><span class="line"><span class="keyword">import</span> org.bytedeco.opencv.opencv_core.Rect;</span><br><span class="line"><span class="keyword">import</span> org.bytedeco.opencv.opencv_core.Scalar;</span><br><span class="line"><span class="keyword">import</span> org.bytedeco.opencv.opencv_core.Size;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OpenCV_LableCatch</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">//加载图片为灰度图</span></span><br><span class="line">Mat src = opencv_imgcodecs.imread(<span class="string">&quot;1.jpg&quot;</span>, opencv_imgcodecs.IMREAD_GRAYSCALE);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> x = src.cols(); <span class="comment">// 列</span></span><br><span class="line"><span class="keyword">int</span> y = src.rows(); <span class="comment">// 行</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (x != y) &#123; <span class="comment">// 非正方形的图 截取中心部分为正方形</span></span><br><span class="line"><span class="keyword">if</span> (x &lt; y) &#123;</span><br><span class="line"><span class="keyword">int</span> j = (y - x) / <span class="number">2</span>;</span><br><span class="line">src = src.apply(<span class="keyword">new</span> Rect(<span class="number">0</span>, j, x, x));</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">int</span> j = (x - y) / <span class="number">2</span>;</span><br><span class="line">src = src.apply(<span class="keyword">new</span> Rect(j, <span class="number">0</span>, y, y));</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="comment">// if</span></span><br><span class="line"></span><br><span class="line">Mat gray = <span class="keyword">new</span> Mat();</span><br><span class="line"><span class="comment">//把大小不确定的图片 转换为固定 3000 * 3000</span></span><br><span class="line">opencv_imgproc.resize(src, gray, <span class="keyword">new</span> Size(<span class="number">3000</span>, <span class="number">3000</span>));</span><br><span class="line"></span><br><span class="line">Mat target = <span class="keyword">new</span> Mat();</span><br><span class="line"><span class="comment">// 二值化</span></span><br><span class="line">opencv_imgproc.threshold(gray, target, <span class="number">0</span>, <span class="number">255</span>, opencv_imgproc.THRESH_OTSU);</span><br><span class="line">opencv_imgcodecs.imwrite(<span class="string">&quot;E:\\cv\\ezh.jpg&quot;</span>, target);</span><br><span class="line"></span><br><span class="line"><span class="comment">// new Scalar(255) 初始matrix的数值 不定义每次腐蚀膨胀的结果都会不一样 坑爹</span></span><br><span class="line">Mat kernel = <span class="keyword">new</span> Mat(<span class="keyword">new</span> Size(<span class="number">20</span>, <span class="number">20</span>), opencv_core.CV_8UC1, <span class="keyword">new</span> Scalar(<span class="number">255</span>));</span><br><span class="line"><span class="comment">// 腐蚀膨胀  修改迭代次数 和 kernel 的 size 保证数字有被处理成可识别的轮廓</span></span><br><span class="line">opencv_imgproc.morphologyEx(target, src, opencv_imgproc.MORPH_OPEN, kernel, <span class="keyword">new</span> Point(-<span class="number">1</span>, -<span class="number">1</span>), <span class="number">2</span>,</span><br><span class="line">opencv_imgproc.MORPH_RECT, opencv_imgproc.morphologyDefaultBorderValue());</span><br><span class="line">opencv_imgcodecs.imwrite(<span class="string">&quot;E:\\cv\\fspz.jpg&quot;</span>, src);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 反色</span></span><br><span class="line">opencv_core.bitwise_not(src, src);</span><br><span class="line">opencv_imgcodecs.imwrite(<span class="string">&quot;E:\\cv\\fs.jpg&quot;</span>, src);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 存放轮廓</span></span><br><span class="line">MatVector contours = <span class="keyword">new</span> MatVector();</span><br><span class="line">Mat hierarchy = <span class="keyword">new</span> Mat();</span><br><span class="line"><span class="comment">// 查找轮廓</span></span><br><span class="line">opencv_imgproc.findContours(src, contours, hierarchy, opencv_imgproc.RETR_TREE,</span><br><span class="line">opencv_imgproc.CHAIN_APPROX_NONE);</span><br><span class="line"></span><br><span class="line">Mat contours_img = <span class="keyword">new</span> Mat(src.size(), opencv_core.CV_8U, <span class="keyword">new</span> Scalar(<span class="number">255</span>));</span><br><span class="line">List&lt;Rect&gt; rects = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">IntIndexer hie = hierarchy.createIndexer();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; contours.size(); i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (hie.get(<span class="number">0</span>, i, <span class="number">2</span>) == -<span class="number">1</span>) &#123;</span><br><span class="line">Mat contour = contours.get(i);</span><br><span class="line"><span class="keyword">double</span> area = opencv_imgproc.contourArea(contour);</span><br><span class="line"><span class="keyword">double</span> mins = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">if</span> (area &gt; mins) &#123;</span><br><span class="line">Rect rect = opencv_imgproc.boundingRect(contour);</span><br><span class="line">rects.add(rect);</span><br><span class="line">opencv_imgproc.drawContours(contours_img, contours, i, <span class="keyword">new</span> Scalar(<span class="number">0</span>), -<span class="number">1</span>, opencv_imgproc.LINE_8,</span><br><span class="line">hierarchy, Integer.MAX_VALUE, <span class="keyword">new</span> Point());</span><br><span class="line"><span class="comment">//opencv_imgcodecs.imwrite(&quot;E:\\cv\\x_&quot; + i + &quot;.jpg&quot;, target.apply(rect));</span></span><br><span class="line">&#125; <span class="comment">// if</span></span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="comment">// for</span></span><br><span class="line"><span class="comment">// opencv_imgcodecs.imwrite(&quot;E:\\cv\\x_.jpg&quot;, contours_img);</span></span><br><span class="line"></span><br><span class="line">kernel = <span class="keyword">new</span> Mat(<span class="keyword">new</span> Size(<span class="number">7</span>, <span class="number">7</span>), opencv_core.CV_8UC1, <span class="keyword">new</span> Scalar(<span class="number">255</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> s1_id = <span class="number">0</span>, s2_id = <span class="number">0</span>, s1_jump = <span class="number">0</span>, s2_jump = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; rects.size(); i++) &#123;</span><br><span class="line">Rect rect = rects.get(i);</span><br><span class="line">Mat roi = target.apply(rect);</span><br><span class="line"><span class="keyword">if</span> (roi.rows() &lt;= roi.cols())</span><br><span class="line">opencv_imgproc.resize(roi, roi, <span class="keyword">new</span> Size(<span class="number">300</span>, <span class="number">100</span>), <span class="number">0</span>, <span class="number">0</span>, opencv_imgproc.INTER_NEAREST);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">opencv_imgproc.resize(roi, roi, <span class="keyword">new</span> Size(<span class="number">100</span>, <span class="number">300</span>), <span class="number">0</span>, <span class="number">0</span>, opencv_imgproc.INTER_NEAREST);</span><br><span class="line"></span><br><span class="line">opencv_imgproc.morphologyEx(roi, roi, opencv_imgproc.MORPH_GRADIENT, kernel, <span class="keyword">new</span> Point(-<span class="number">1</span>, -<span class="number">1</span>), <span class="number">1</span>,</span><br><span class="line">opencv_imgproc.MORPH_RECT, opencv_imgproc.morphologyDefaultBorderValue());</span><br><span class="line"></span><br><span class="line"><span class="comment">//opencv_imgproc.medianBlur(roi, roi, 7);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> t_jump = stringJudge(roi);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 选出跳变次数最多的两个轮廓</span></span><br><span class="line"><span class="comment">//if (t_jump &lt; 20) &#123;</span></span><br><span class="line"><span class="keyword">if</span> (t_jump &gt;= s1_jump) &#123;</span><br><span class="line">s2_id = s1_id;</span><br><span class="line">s2_jump = s1_jump;</span><br><span class="line">s1_id = i;</span><br><span class="line">s1_jump = t_jump;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (t_jump &lt; s1_jump &amp;&amp; t_jump &gt;= s2_jump) &#123;</span><br><span class="line">s2_id = i;</span><br><span class="line">s2_jump = t_jump;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//&#125; // if</span></span><br><span class="line">&#125; <span class="comment">// for</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 结果排序，坐标最左为第一串数字</span></span><br><span class="line"><span class="keyword">if</span> (rects.get(s1_id).width() &lt; rects.get(s1_id).height()</span><br><span class="line">&amp;&amp; rects.get(s1_id).tl().y() &lt; rects.get(s2_id).tl().y()) &#123;</span><br><span class="line">s1_id = s1_id + s2_id;</span><br><span class="line">s2_id = s1_id - s2_id;</span><br><span class="line">s1_id = s1_id - s2_id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Rect ns1 = rects.get(s1_id);</span><br><span class="line"><span class="keyword">if</span> (isCentre(target, ns1))</span><br><span class="line">ns1 = <span class="keyword">new</span> Rect(ns1.x() - <span class="number">10</span>, ns1.y() - <span class="number">10</span>, ns1.width() + <span class="number">20</span>, ns1.height() + <span class="number">20</span>);</span><br><span class="line">Rect ns2 = rects.get(s2_id);</span><br><span class="line"><span class="keyword">if</span> (isCentre(target, ns2))</span><br><span class="line">ns2 = <span class="keyword">new</span> Rect(ns2.x() - <span class="number">10</span>, ns2.y() - <span class="number">10</span>, ns2.width() + <span class="number">20</span>, ns2.height() + <span class="number">20</span>);</span><br><span class="line"></span><br><span class="line">Mat dst1 = gray.apply(ns1);</span><br><span class="line">Mat dst2 = gray.apply(ns2);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (dst1.cols() &lt; dst1.rows()) &#123;</span><br><span class="line">opencv_core.transpose(dst1, dst1);</span><br><span class="line">opencv_core.flip(dst1, dst1, <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (dst2.cols() &lt; dst2.rows()) &#123;</span><br><span class="line">opencv_core.transpose(dst2, dst2);</span><br><span class="line">opencv_core.flip(dst2, dst2, <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">opencv_imgproc.resize(dst1, dst1, <span class="keyword">new</span> Size(<span class="number">300</span>, <span class="number">100</span>), <span class="number">0</span>, <span class="number">0</span>, opencv_imgproc.INTER_NEAREST);</span><br><span class="line">opencv_imgcodecs.imwrite(<span class="string">&quot;E:\\cv\\r_111.jpg&quot;</span>, dst1);</span><br><span class="line">dst1 = OpenCVUtils.adjustAngle(dst1);</span><br><span class="line">opencv_imgcodecs.imwrite(<span class="string">&quot;E:\\cv\\r_111_jz.jpg&quot;</span>, dst1);</span><br><span class="line">opencv_imgproc.resize(dst2, dst2, <span class="keyword">new</span> Size(<span class="number">300</span>, <span class="number">100</span>), <span class="number">0</span>, <span class="number">0</span>, opencv_imgproc.INTER_NEAREST);</span><br><span class="line">opencv_imgcodecs.imwrite(<span class="string">&quot;E:\\cv\\r_222.jpg&quot;</span>, dst2);</span><br><span class="line">dst2 = OpenCVUtils.adjustAngle(dst2);</span><br><span class="line">opencv_imgcodecs.imwrite(<span class="string">&quot;E:\\cv\\r_222_jz.jpg&quot;</span>, dst2);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断轮廓 是否在中心范围</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isCentre</span><span class="params">(Mat mat, Rect rect)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> x = Math.abs((mat.cols() / <span class="number">2</span>) - (mat.cols() - rect.x()));</span><br><span class="line"><span class="keyword">int</span> y = Math.abs((mat.rows() / <span class="number">2</span>) - (mat.rows() - rect.y()));</span><br><span class="line"><span class="keyword">return</span> x &lt; mat.cols() / <span class="number">3</span> &amp;&amp; y &lt; mat.rows() / <span class="number">3</span>;</span><br><span class="line">&#125;<span class="comment">//method isCentre</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断区域是否为数字</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">stringJudge</span><span class="params">(Mat img)</span> </span>&#123;</span><br><span class="line">UByteRawIndexer intIndexer = img.createIndexer();</span><br><span class="line"><span class="keyword">int</span> rows = img.rows();</span><br><span class="line"><span class="keyword">int</span> cols = img.cols();</span><br><span class="line"><span class="keyword">int</span> jump = <span class="number">0</span>;</span><br><span class="line"><span class="comment">// 数字横着放，优先遍历列</span></span><br><span class="line"><span class="keyword">if</span> (rows &lt; cols) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> row = <span class="number">0</span>; row &lt; rows; row++) &#123;</span><br><span class="line"><span class="keyword">boolean</span> wb_flag = <span class="keyword">false</span>;<span class="comment">// 白色到黑色</span></span><br><span class="line"><span class="keyword">boolean</span> bw_flag = <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">int</span> t_jump = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> col = <span class="number">0</span>; col &lt; cols; col++) &#123;</span><br><span class="line"><span class="keyword">if</span> (col + <span class="number">1</span> &lt; cols) &#123;</span><br><span class="line"><span class="keyword">int</span> now_point = intIndexer.get(row, col);</span><br><span class="line"><span class="keyword">int</span> next_point = intIndexer.get(row, col + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span> (now_point == <span class="number">255</span> &amp;&amp; next_point == <span class="number">0</span>) &#123;</span><br><span class="line">wb_flag = <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (now_point == <span class="number">0</span> &amp;&amp; next_point == <span class="number">255</span> &amp;&amp; wb_flag) &#123;</span><br><span class="line">bw_flag = <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (wb_flag &amp;&amp; bw_flag) &#123;</span><br><span class="line">++t_jump;</span><br><span class="line">wb_flag = <span class="keyword">false</span>;</span><br><span class="line">bw_flag = <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (t_jump &gt; jump)</span><br><span class="line">jump = t_jump;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> col = <span class="number">0</span>; col &lt; cols; col++) &#123;</span><br><span class="line"><span class="keyword">boolean</span> wb_flag = <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">boolean</span> bw_flag = <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">int</span> t_jump = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> row = <span class="number">0</span>; row &lt; rows; row++) &#123;</span><br><span class="line"><span class="keyword">if</span> (row + <span class="number">1</span> &lt; rows) &#123;</span><br><span class="line"><span class="keyword">int</span> now_point = intIndexer.get(row, col);</span><br><span class="line"><span class="keyword">int</span> next_point = intIndexer.get(row + <span class="number">1</span>, col);</span><br><span class="line"><span class="keyword">if</span> (now_point == <span class="number">255</span> &amp;&amp; next_point == <span class="number">0</span>) &#123;</span><br><span class="line">wb_flag = <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (now_point == <span class="number">0</span> &amp;&amp; next_point == <span class="number">255</span> &amp;&amp; wb_flag) &#123;</span><br><span class="line">bw_flag = <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (wb_flag &amp;&amp; bw_flag) &#123;</span><br><span class="line">++t_jump;</span><br><span class="line">wb_flag = <span class="keyword">false</span>;</span><br><span class="line">bw_flag = <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (t_jump &gt; jump)</span><br><span class="line">jump = t_jump;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> jump;</span><br><span class="line">&#125;<span class="comment">//method </span></span><br><span class="line"></span><br><span class="line">&#125;<span class="comment">//class</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.lqs1848.cv.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.bytedeco.opencv.global.opencv_core;</span><br><span class="line"><span class="keyword">import</span> org.bytedeco.opencv.global.opencv_imgcodecs;</span><br><span class="line"><span class="keyword">import</span> org.bytedeco.opencv.global.opencv_imgproc;</span><br><span class="line"><span class="keyword">import</span> org.bytedeco.opencv.opencv_core.Mat;</span><br><span class="line"><span class="keyword">import</span> org.bytedeco.opencv.opencv_core.MatVector;</span><br><span class="line"><span class="keyword">import</span> org.bytedeco.opencv.opencv_core.Point;</span><br><span class="line"><span class="keyword">import</span> org.bytedeco.opencv.opencv_core.Point2f;</span><br><span class="line"><span class="keyword">import</span> org.bytedeco.opencv.opencv_core.Rect;</span><br><span class="line"><span class="keyword">import</span> org.bytedeco.opencv.opencv_core.RotatedRect;</span><br><span class="line"><span class="keyword">import</span> org.bytedeco.opencv.opencv_core.Scalar;</span><br><span class="line"><span class="keyword">import</span> org.bytedeco.opencv.opencv_core.Size;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OpenCVUtils</span> </span>&#123; </span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 矩形 矫正角度</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 非直线矫正！！！！</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> gray</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Mat <span class="title">adjustAngle</span><span class="params">(Mat gray)</span></span>&#123;</span><br><span class="line"><span class="comment">//Mat gray = opencv_imgcodecs.imread(&quot;E:\\test\\1.jpg&quot;, opencv_imgcodecs.IMREAD_GRAYSCALE);</span></span><br><span class="line"></span><br><span class="line">Mat binImg = <span class="keyword">new</span> Mat();</span><br><span class="line"><span class="comment">// 二值化</span></span><br><span class="line">opencv_imgproc.threshold(gray, binImg, <span class="number">100</span>, <span class="number">255</span>, opencv_imgproc.CV_THRESH_BINARY_INV);</span><br><span class="line">opencv_imgcodecs.imwrite(<span class="string">&quot;E:\\test\\ezh222.jpg&quot;</span>, binImg);</span><br><span class="line"></span><br><span class="line">Mat target = <span class="keyword">new</span> Mat();</span><br><span class="line">opencv_imgproc.threshold(gray, target, <span class="number">0</span>, <span class="number">255</span>, opencv_imgproc.THRESH_OTSU);</span><br><span class="line"></span><br><span class="line"><span class="comment">// new Size(15, 15) 可以慢慢调整</span></span><br><span class="line">Mat kernel = <span class="keyword">new</span> Mat(<span class="keyword">new</span> Size(<span class="number">15</span>, <span class="number">15</span>), opencv_core.CV_8UC1, <span class="keyword">new</span> Scalar(<span class="number">255</span>));</span><br><span class="line">Mat morphologyDst = <span class="keyword">new</span> Mat();</span><br><span class="line">        <span class="comment">//1 迭代次数可以修改</span></span><br><span class="line">opencv_imgproc.morphologyEx(binImg, morphologyDst, opencv_imgproc.MORPH_GRADIENT, kernel, <span class="keyword">new</span> Point(-<span class="number">1</span>, -<span class="number">1</span>), <span class="number">1</span>,</span><br><span class="line">opencv_imgproc.MORPH_RECT, opencv_imgproc.morphologyDefaultBorderValue());</span><br><span class="line"><span class="comment">//查看腐蚀膨胀的信息  根据这个图调整 size  保证腐蚀膨胀出来的轮廓是数字连在一起的轮廓</span></span><br><span class="line">opencv_imgcodecs.imwrite(<span class="string">&quot;E:\\test\\morphology.jpg&quot;</span>, morphologyDst);</span><br><span class="line"></span><br><span class="line">Mat cannyDst = <span class="keyword">new</span> Mat();</span><br><span class="line">opencv_imgproc.Canny(morphologyDst, cannyDst, <span class="number">150</span>, <span class="number">200</span>);</span><br><span class="line"><span class="comment">//opencv_imgcodecs.imwrite(&quot;E:\\test\\canny.jpg&quot;, cannyDst);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取最大矩形</span></span><br><span class="line">RotatedRect rect = findMaxRect(cannyDst);</span><br><span class="line"><span class="comment">// 旋转矩形</span></span><br><span class="line">Mat CorrectImg = rotation(target , rect);</span><br><span class="line">opencv_imgcodecs.imwrite(<span class="string">&quot;E:\\test\\xz1.jpg&quot;</span>, CorrectImg);</span><br><span class="line"><span class="keyword">return</span> CorrectImg;</span><br><span class="line"><span class="comment">//尝试二值化看效果会不会更好</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">kernel = new Mat(new Size(0, 0), opencv_core.CV_8UC1, new Scalar(255));</span></span><br><span class="line"><span class="comment">opencv_imgproc.morphologyEx(CorrectImg, CorrectImg, opencv_imgproc.MORPH_GRADIENT, kernel, new Point(-1, -1), 1,</span></span><br><span class="line"><span class="comment">opencv_imgproc.MORPH_RECT, opencv_imgproc.morphologyDefaultBorderValue());</span></span><br><span class="line"><span class="comment">opencv_imgcodecs.imwrite(&quot;E:\\test\\xz2.jpg&quot;, CorrectImg);</span></span><br><span class="line"><span class="comment">return CorrectImg;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> RotatedRect <span class="title">findMaxRect</span><span class="params">(Mat cannyMat)</span> </span>&#123;</span><br><span class="line">MatVector contours = <span class="keyword">new</span> MatVector();</span><br><span class="line">Mat hierarchy = <span class="keyword">new</span> Mat();</span><br><span class="line"><span class="comment">// 寻找轮廓</span></span><br><span class="line">opencv_imgproc.findContours(cannyMat, contours, hierarchy, opencv_imgproc.RETR_EXTERNAL,</span><br><span class="line">opencv_imgproc.CHAIN_APPROX_NONE, <span class="keyword">new</span> Point(<span class="number">0</span>, <span class="number">0</span>));</span><br><span class="line"><span class="comment">// 找出匹配到的最大轮廓</span></span><br><span class="line"><span class="keyword">double</span> area = opencv_imgproc.boundingRect(contours.get(<span class="number">0</span>)).area();</span><br><span class="line"><span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line"><span class="comment">// 找出匹配到的最大轮廓</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; contours.size(); i++) &#123;</span><br><span class="line"><span class="keyword">double</span> tempArea = opencv_imgproc.boundingRect(contours.get(i)).area();</span><br><span class="line"><span class="keyword">if</span> (tempArea &gt; area) &#123;</span><br><span class="line">area = tempArea;</span><br><span class="line">index = i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">Mat matOfPoint2f = <span class="keyword">new</span> Mat(contours.get(index));</span><br><span class="line">RotatedRect rect = opencv_imgproc.minAreaRect(matOfPoint2f);</span><br><span class="line">Rect rect2 = opencv_imgproc.boundingRect(contours.get(index));</span><br><span class="line">opencv_imgcodecs.imwrite(<span class="string">&quot;E:\\test\\lk.jpg&quot;</span>, cannyMat.apply(rect2));</span><br><span class="line"><span class="keyword">return</span> rect;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Mat <span class="title">rotation</span><span class="params">(Mat cannyMat, RotatedRect rect)</span> </span>&#123;</span><br><span class="line"><span class="keyword">double</span> angle = rect.angle();</span><br><span class="line">Point2f center = rect.center();</span><br><span class="line">Mat CorrectImg = <span class="keyword">new</span> Mat(cannyMat.size(), cannyMat.type());</span><br><span class="line">cannyMat.copyTo(CorrectImg);</span><br><span class="line"><span class="comment">// 得到旋转矩阵算子</span></span><br><span class="line">Mat matrix = opencv_imgproc.getRotationMatrix2D(center, angle, <span class="number">0.8</span>);</span><br><span class="line">opencv_imgproc.warpAffine(CorrectImg, CorrectImg, matrix, CorrectImg.size(), <span class="number">1</span>, <span class="number">0</span>, <span class="keyword">new</span> Scalar(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>));</span><br><span class="line"><span class="keyword">return</span> CorrectImg;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;<span class="comment">// class</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/img/opencv/fspz.jpg" alt="fspz.jpg"></p><p>fspz.jpg 出来的图要一点点调整参数 保证 两块数字区域被正确的处理成可识别的轮廓</p><p>如果数字区域 二值化后不可见 那就是无法识别</p><p><img src="/img/opencv/xz_lk.jpg"></p><p>旋转要保证 数字的轮廓是正确的</p><h1 id="坑"><a href="#坑" class="headerlink" title="坑"></a>坑</h1><p>首先 bytedeco 的 API 资料是真的少</p><p>网上的资料使用的 查找轮廓 返回的轮廓信息都是 二维数组</p><p>bytedeco 给的是个 Mat ？？？</p><p>找了好久才发现原来是用 Indexer 读取 (<a href="https://github.com/bytedeco/javacv/issues/276">https://github.com/bytedeco/javacv/issues/276</a>)</p><p>腐蚀膨胀的 kernel 不传递 Scalar 每次腐蚀膨胀出来的结果都不一样…</p><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p>如果对焦不准的话 处理后效果还是很一般 关键还是要原图有对上焦</p><p>线上代码还是同事进行了多种处理</p><p>比如 同时本地请求 并发查询百度</p><p>并且本地做多种处理 </p><p>源码和上方代码有差异 以源码为准</p><p><em><strong><center><a href="https://github.com/lqs1848/java_workspace/tree/main/NumberOCR">源码</a></center></strong></em></p>]]></content>
    
    
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;</summary>
    
    
    
    <category term="Java" scheme="https://blog.lqs1848.top/categories/Java/"/>
    
    <category term="OpenCV" scheme="https://blog.lqs1848.top/categories/Java/OpenCV/"/>
    
    
    <category term="Java" scheme="https://blog.lqs1848.top/tags/Java/"/>
    
    <category term="OpenCV" scheme="https://blog.lqs1848.top/tags/OpenCV/"/>
    
    <category term="OCR" scheme="https://blog.lqs1848.top/tags/OCR/"/>
    
  </entry>
  
  <entry>
    <title>Transaction rolled back because it has been marked as rollback-only</title>
    <link href="https://blog.lqs1848.top/2021/06/10/2021-06-10%20Transaction%20rolled%20back%20because%20it%20has%20been%20marked%20as%20rollback-only/"/>
    <id>https://blog.lqs1848.top/2021/06/10/2021-06-10%20Transaction%20rolled%20back%20because%20it%20has%20been%20marked%20as%20rollback-only/</id>
    <published>2021-06-09T16:00:00.000Z</published>
    <updated>2022-08-25T02:28:17.507Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h1 id="Spring事务管理报错-Transaction-rolled-back-because-it-has-been-marked-as-rollback-only"><a href="#Spring事务管理报错-Transaction-rolled-back-because-it-has-been-marked-as-rollback-only" class="headerlink" title="Spring事务管理报错:Transaction rolled back because it has been marked as rollback-only"></a>Spring事务管理报错:Transaction rolled back because it has been marked as rollback-only</h1><h1 id="出错代码"><a href="#出错代码" class="headerlink" title="出错代码"></a>出错代码</h1><p>算是比较常见的错误了</p><p>很多解释说明都云里雾里的</p><p>其实比较简单</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ServiceA</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    ServiceB serviceB;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Transactional(rollbackFor = Exception.class)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testA</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">serviceB.testB();</span><br><span class="line">        &#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="comment">//method</span></span><br><span class="line">&#125;<span class="comment">//class</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ServiceB</span></span>&#123;</span><br><span class="line">    <span class="meta">@Transactional(rollbackFor = Exception.class)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testB</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">&quot;测试&quot;</span>);</span><br><span class="line">    &#125;<span class="comment">//method</span></span><br><span class="line">&#125;<span class="comment">//class</span></span><br></pre></td></tr></table></figure><p>上面这段代码就会报错 Transaction rolled back because it has been marked as rollback-only</p><p>原因是 Spring 事务管理是通过AOP切入的</p><p>ServiceA 的 testA 已经切入   </p><p>testB 又切入了一次 </p><p>@Transactional 的默认传播机制是 Propagation propagation() default Propagation.REQUIRED;</p><p>等于 testA 和 testB 使用的是同一个事务</p><p>testB 抛出异常时  Spring Aop 已经把事务标记为需要回滚</p><p>testA 使用同一个事务 try-catch 了 testB 的异常 所以 testA 没有异常 方法结束</p><p>testA 提交事务时 由于 testB已经被回滚 所以抛异常</p><h1 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h1><p>AOP.serviceA.testA    -&gt;    进入方法前    开启事务</p><p>↓</p><p>serviceA.testA    -&gt;    方法执行</p><p>↓</p><p>AOP.serivceB.testB    -&gt;    进入方法前    开启事务 读取到已有事务 REQUIRED 继承A的事务</p><p>↓</p><p>serviceB.testB    -&gt;    方法执行    出现异常</p><p>↓</p><p>AOP.serviceB.testB    -&gt;    方法执行后    检测到异常 回滚事务</p><p>↓</p><p>serviceA.testA    -&gt;    方法执行    testB的异常被 try-catch 方法正常结束</p><p>↓</p><p>AOP.serviceA.testA    -&gt;    方法执行后    没有异常 提交事务</p><p>其实就是 AOP 切入了两次 A 和 B 使用的是同一个事务</p><p>并且 抓取 B 的错误时 B 已经回滚了事务</p><h1 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h1><ol><li>指定 testB 的事务传播性为 REQUIRES_NEW (testB单独一个事务 回滚不影响 testA</li><li>把 testA 中的 try-catch 放到 testB 中 testB返回true false 给 testA 判断</li><li>从 controller 中分别调用 testA 和 testB</li></ol>]]></content>
    
    
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;</summary>
    
    
    
    <category term="Java" scheme="https://blog.lqs1848.top/categories/Java/"/>
    
    <category term="Spring" scheme="https://blog.lqs1848.top/categories/Java/Spring/"/>
    
    
    <category term="事务" scheme="https://blog.lqs1848.top/tags/%E4%BA%8B%E5%8A%A1/"/>
    
    <category term="Transaction" scheme="https://blog.lqs1848.top/tags/Transaction/"/>
    
  </entry>
  
  <entry>
    <title>聚合支付原理</title>
    <link href="https://blog.lqs1848.top/2021/06/10/2021-06-10%20%E8%81%9A%E5%90%88%E6%94%AF%E4%BB%98%E5%8E%9F%E7%90%86/"/>
    <id>https://blog.lqs1848.top/2021/06/10/2021-06-10%20%E8%81%9A%E5%90%88%E6%94%AF%E4%BB%98%E5%8E%9F%E7%90%86/</id>
    <published>2021-06-09T16:00:00.000Z</published>
    <updated>2021-07-08T08:12:04.795Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><p><strong>公司要接入聚合支付(第四方支付) 封装成自用支付(第五方支付)</strong></p><p><strong>但聚合支付提供方没有给被扫接口</strong></p><p><strong>稍微了解下聚合支付封装 第三方支付 的逻辑</strong></p><h1 id="主扫-一个二维码-微信也能扫支付宝也能扫"><a href="#主扫-一个二维码-微信也能扫支付宝也能扫" class="headerlink" title="主扫(一个二维码 微信也能扫支付宝也能扫)"></a>主扫(一个二维码 微信也能扫支付宝也能扫)</h1><p>这个是最基础的 只是给每个商户单独 生成一个URL而已</p><p>基本就是给一个二维码 里面是URL地址 微信/支付宝 扫码 会直接跳转访问</p><p>被访问时通过 JavaScript 判断用户浏览器的 UserAgent </p><p>判断是通过微信还是支付宝或者其他支付软件</p><p>再调起对应支付软件的网页SDK支付</p><h1 id="被扫-用户打开-微信-支付宝-扫码机自动识别"><a href="#被扫-用户打开-微信-支付宝-扫码机自动识别" class="headerlink" title="被扫(用户打开 微信/支付宝 扫码机自动识别)"></a>被扫(用户打开 微信/支付宝 扫码机自动识别)</h1><p>硬件设备识别二维码获得二维码内容</p><p>根据二维码内容调用第三方支付</p><p><strong>微信：</strong></p><p><strong>用户付款码条形码规则：18位纯数字，以10、11、12、13、14、15开头</strong></p><p>对应调起接口 <a href="https://pay.weixin.qq.com/wiki/doc/api/wxpay_v2/product/chapter1_12.shtml">付款码支付</a></p><p><strong>支付宝：</strong></p><p><strong>25<del>30开头的长度为16</del>24位的数字，实际字符串长度以开发者获取的付款码长度为准</strong></p><p>调起对应接口 <a href="https://opendocs.alipay.com/open/01csp3">当面付</a></p>]]></content>
    
    
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;</summary>
    
    
    
    
    <category term="pay" scheme="https://blog.lqs1848.top/tags/pay/"/>
    
  </entry>
  
</feed>
